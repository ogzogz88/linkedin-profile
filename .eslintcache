[{"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx":"1","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts":"2","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx":"3","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx":"5","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx":"6","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavIcons.tsx":"7","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx":"8","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx":"9","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx":"10","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx":"11","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx":"12","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx":"13","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\SideProfile.tsx":"14","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileElements.tsx":"15","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileData.tsx":"16","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx":"17","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx":"18","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx":"19","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx":"20","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx":"21","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx":"22","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx":"23","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx":"24","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx":"25","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx":"26","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx":"27","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx":"28","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx":"29","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx":"30","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx":"31"},{"size":540,"mtime":1608998287134,"results":"32","hashOfConfig":"33"},{"size":545,"mtime":1608486025945,"results":"34","hashOfConfig":"33"},{"size":311,"mtime":1609011530055,"results":"35","hashOfConfig":"33"},{"size":3497,"mtime":1609589007751,"results":"36","hashOfConfig":"33"},{"size":1301,"mtime":1608896487440,"results":"37","hashOfConfig":"33"},{"size":752,"mtime":1608900557973,"results":"38","hashOfConfig":"33"},{"size":1187,"mtime":1608900608688,"results":"39","hashOfConfig":"33"},{"size":806,"mtime":1609082645004,"results":"40","hashOfConfig":"33"},{"size":495,"mtime":1609012165540,"results":"41","hashOfConfig":"33"},{"size":3024,"mtime":1609013088460,"results":"42","hashOfConfig":"33"},{"size":6235,"mtime":1609592019982,"results":"43","hashOfConfig":"33"},{"size":626,"mtime":1608857185535,"results":"44","hashOfConfig":"33"},{"size":1391,"mtime":1608860837415,"results":"45","hashOfConfig":"33"},{"size":315,"mtime":1608896565253,"results":"46","hashOfConfig":"33"},{"size":3294,"mtime":1609101868161,"results":"47","hashOfConfig":"33"},{"size":564,"mtime":1609187322782,"results":"48","hashOfConfig":"33"},{"size":1297,"mtime":1609595486719,"results":"49","hashOfConfig":"33"},{"size":3233,"mtime":1609374315168,"results":"50","hashOfConfig":"33"},{"size":212,"mtime":1609595768798,"results":"51","hashOfConfig":"33"},{"size":5264,"mtime":1609594295817,"results":"52","hashOfConfig":"33"},{"size":3291,"mtime":1609012860956,"results":"53","hashOfConfig":"33"},{"size":8453,"mtime":1609370826733,"results":"54","hashOfConfig":"33"},{"size":640,"mtime":1609288487918,"results":"55","hashOfConfig":"33"},{"size":4221,"mtime":1609366708055,"results":"56","hashOfConfig":"33"},{"size":4843,"mtime":1609375840292,"results":"57","hashOfConfig":"33"},{"size":1048,"mtime":1609595743373,"results":"58","hashOfConfig":"33"},{"size":1452,"mtime":1609595733036,"results":"59","hashOfConfig":"33"},{"size":5459,"mtime":1609592989567,"results":"60","hashOfConfig":"33"},{"size":3170,"mtime":1609593004274,"results":"61","hashOfConfig":"33"},{"size":3708,"mtime":1609591426559,"results":"62","hashOfConfig":"33"},{"size":656,"mtime":1609591335932,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"15bsiaf",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx",["138"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { TopNav, Image, Input, Flex, } from 'bumbag';\r\nimport { Navlink, NavDivider } from './Navlink';\r\nimport NavText from './NavText';\r\nimport { UserPopover } from './UserPopover';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { navData } from './NavData';\r\nimport { NavImage } from './UserPopoverElements'\r\nimport { DarkMode } from '../DarkMode';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\n\r\n\r\nfunction Navbar(): JSX.Element {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL }: any = user;\r\n    return (\r\n        <TopNav>\r\n            <TopNav.Section>\r\n                <Navlink key={10} href=\"/\" style={{ marginLeft: '0' }}>\r\n                    <Image src=\"/logo.png\" height=\"35px\" />\r\n                </Navlink>\r\n                <Flex style={{ alignItems: 'center' }}>\r\n                    <Input\r\n                        before={<Input.Icon icon=\"solid-search\" />}\r\n                        placeholder=\"Search\"\r\n                        style={{ marginLeft: '5px' }}\r\n                        size=\"small\"\r\n                        width=\"300px\"\r\n                        marginRight=\"6rem\"\r\n                    />\r\n                </Flex>\r\n            </TopNav.Section>\r\n            <TopNav.Section marginRight=\"major-2\">\r\n                {navData.map((navElement, index) => {\r\n                    return (\r\n                        <>\r\n                            <Navlink\r\n                                key={index}\r\n                                href={navElement.navHref}\r\n                                style={\r\n                                    navElement.navIcon === 'user' ?\r\n                                        { paddingRight: '1rem' } :\r\n                                        navElement.navIcon === '' ?\r\n                                            {\r\n                                                color: '#5d3b09',\r\n                                                fontSize: '0.75rem',\r\n                                                fontWeight: 'lighter',\r\n                                                width: '90px',\r\n                                                textAlign: 'center',\r\n                                            } :\r\n                                            undefined\r\n                                }\r\n                            >\r\n                                {navElement.navIcon !== 'user' && <NavIcon aria-label=\"Navlcon\" icon={`solid-${navElement.navIcon}`} />}\r\n                                {navElement.navIcon === 'user' && <NavImage src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                    alt=\"Profile Picture\" width={'30px'} />}\r\n\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <NavText>{navElement.navText}</NavText>\r\n                                    {navElement.navIcon === 'user' && <UserPopover />}\r\n                                    {navElement.navIcon === 'th' && <SideDrawer />}\r\n                                </div>\r\n                            </Navlink>\r\n                            {navElement.navIcon === 'user' && <NavDivider />}\r\n                        </>\r\n                    );\r\n                })}\r\n                <DarkMode />\r\n            </TopNav.Section>\r\n        </TopNav >\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavIcons.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx",["139","140"],"import React from 'react';\r\nimport { Drawer, Card, Flex } from 'bumbag';\r\nimport {\r\n    CustomDrawer,\r\n    NavHeader,\r\n    SideDrawerIconContainer,\r\n    NavImage,\r\n    NavText,\r\n    NavSubHeader,\r\n    NavSubText,\r\n    sideDrawerData,\r\n    iconData,\r\n} from './SideDrawerElements';\r\nimport { PopoverIcon } from './UserPopoverElements';\r\n\r\nexport function SideDrawer(): JSX.Element {\r\n    return (\r\n        <Drawer.State animated>\r\n            <Drawer.Disclosure style={{ height: '5px', marginTop: '-10px' }}>\r\n                <PopoverIcon />\r\n            </Drawer.Disclosure>\r\n            <CustomDrawer placement=\"right\" style={{ marginTop: '58px', borderRadius: '8px 8px 0 0' }} fade slide>\r\n                <Card style={{ margin: '1.5rem', padding: '2px 0 0 0' }}>\r\n                    <NavHeader>Visit More Linkedin Products</NavHeader>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px', padding: '20px ' }}>\r\n                        <Flex\r\n                            style={{\r\n                                flexWrap: 'wrap',\r\n                                justifyContent: 'space-between',\r\n                                maxWidth: '325px',\r\n                            }}\r\n                        >\r\n                            {iconData.map((icon, index) => {\r\n                                return (\r\n                                    <Flex key={index} style={{ flexDirection: 'column' }}>\r\n                                        <SideDrawerIconContainer>\r\n                                            <NavImage alt=\"Linked icon\" src={icon.src} />\r\n                                        </SideDrawerIconContainer>\r\n                                        <NavText>{icon.text}</NavText>\r\n                                    </Flex>\r\n                                );\r\n                            })}\r\n                        </Flex>\r\n                    </Card>\r\n                </Card>\r\n                <Card style={{ margin: '1.5rem', padding: '2px 0 0 0' }}>\r\n                    <NavHeader>LinkedIn Business Services</NavHeader>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px' }}>\r\n                        {sideDrawerData.map((data: any, index: any) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <NavSubHeader>{data.header}</NavSubHeader>\r\n                                    <NavSubText>{data.text}</NavSubText>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Card>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px', padding: '0.5rem 1.5rem' }}>\r\n                        <NavSubHeader>\r\n                            Create a Company Page <span style={{ fontSize: '1.5rem' }}>+</span>\r\n                        </NavSubHeader>\r\n                    </Card>\r\n                </Card>\r\n            </CustomDrawer>\r\n        </Drawer.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx",["141","142","143","144"],"/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport { Columns, Flex, Card, Set } from 'bumbag';\r\nimport {\r\n    ProfileImg,\r\n    BackgroundImg,\r\n    ProfileEditLink,\r\n    MainPageIcon,\r\n    MainPageIconContainer,\r\n    AddButton,\r\n    MoreButton,\r\n    ProfileTextLg,\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n    MainPageIconContainerSec,\r\n} from './MainProfileElements';\r\nimport { data } from './MainProfileData';\r\nimport SideProfile from './SideProfile';\r\nimport { UpdateModalIntro } from '../update/UpdateModalIntro'\r\nimport { UpdateModalAbout } from '../update/UpdateModalAbout'\r\nimport { UpdateModalImage } from '../update/UpdateModalImage'\r\n\r\nfunction MainProfile({ user }: any): JSX.Element {\r\n    const { photoURL, displayName, email, name, lastName, headline, company, education, country, location, industry, about }: any = user;\r\n\r\n\r\n    return (\r\n        <Columns style={{ marginTop: '2rem' }}>\r\n            <Columns.Column spread={8}>\r\n                <Card style={{ padding: 0, borderRadius: '0.5rem', position: 'relative' }}>\r\n                    <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" />\r\n                    {/* <ProfileImg src=\"../../assets/photos/ogz.jpg\" /> */}\r\n                    <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n                    <Set style={{ justifyContent: 'flex-end', marginTop: '0.3rem' }}>\r\n                        <AddButton size=\"small\" palette=\"primary\">\r\n                            Add profile section\r\n                        </AddButton>\r\n                        <MoreButton size=\"small\">More...</MoreButton>\r\n                        <ProfileEditLink>\r\n                            {/* <MainPageIconContainer>\r\n                                <MainPageIcon src=\"../../assets/icons/pencil-icon.png\" />\r\n                            </MainPageIconContainer> */}\r\n                            <MainPageIconContainer>\r\n                                <UpdateModalIntro />\r\n                            </MainPageIconContainer>\r\n                        </ProfileEditLink>\r\n                    </Set>\r\n                    <Columns style={{ marginTop: '0.25rem', paddingBottom: '1rem' }}>\r\n                        <Columns.Column spread={8}>\r\n                            <Flex flexDirection=\"column\" marginLeft=\"1.5rem\">\r\n                                <ProfileTextLg textTransform={'capitalize'}>\r\n                                    {name && lastName\r\n                                        ? `${name} ${lastName}`\r\n                                        : displayName\r\n                                            ? displayName\r\n                                            // eslint-disable-next-line prettier/prettier\r\n                                            : `${data[0].basic.name} ${data[0].basic.lastname}`}\r\n                                </ProfileTextLg>\r\n                                <ProfileTextSm>{email ? email : data[0].basic.email}</ProfileTextSm>\r\n                                <ProfileTextMd>{headline ? headline : data[0].basic.headline}</ProfileTextMd>\r\n                                <ProfileTextMd>{industry ? industry : data[0].basic.industry}</ProfileTextMd>\r\n                                <ProfileTextSm>\r\n                                    {location ? location : data[0].basic.city}, {country ? country : data[0].basic.country}\r\n                                </ProfileTextSm>\r\n                            </Flex>\r\n                        </Columns.Column>\r\n                        <Columns.Column spread={4}>\r\n                            <Flex flexDirection=\"column\">\r\n                                <Flex style={{ alignItems: 'center' }}>\r\n                                    <MainPageIconContainer\r\n                                        style={{\r\n                                            marginRight: '0.3rem',\r\n                                            marginBottom: '0.3rem',\r\n                                            borderRadius: '0%',\r\n                                            background: '#eee',\r\n                                        }}\r\n                                    >\r\n                                        <MainPageIcon src=\"../../assets/icons/company-icon.png\" />\r\n                                    </MainPageIconContainer>\r\n                                    <ProfileTextXs fontWeight=\"bold\">{company ? company : data[0].basic.company} </ProfileTextXs>\r\n                                </Flex>\r\n                                <Flex style={{ alignItems: 'center' }}>\r\n                                    <MainPageIconContainer\r\n                                        style={{ marginRight: '0.3rem', borderRadius: '0%', background: '#eee' }}\r\n                                    >\r\n                                        <MainPageIcon src=\"../../assets/icons/education-icon.png\" />\r\n                                    </MainPageIconContainer>\r\n                                    <ProfileTextXs fontWeight=\"bold\">{education ? education : data[0].basic.education} </ProfileTextXs>\r\n                                </Flex>\r\n                            </Flex>\r\n                        </Columns.Column>\r\n                    </Columns>\r\n                </Card>\r\n                <Card style={{ marginTop: '2rem', position: 'relative' }}>\r\n\r\n                    <Flex>\r\n                        <Flex flexDirection=\"column\">\r\n                            <ProfileTextMd marginBottom=\"1rem\">{data[0].about.title}</ProfileTextMd>\r\n                            <ProfileTextXs>{about ? about : data[0].about.text}</ProfileTextXs>\r\n                        </Flex>\r\n                    </Flex>\r\n                    <ProfileEditLink style={{ position: 'absolute', right: '1rem', top: '1rem' }}>\r\n                        <MainPageIconContainerSec margin={'0px'}>\r\n                            <UpdateModalAbout />\r\n                        </MainPageIconContainerSec>\r\n                    </ProfileEditLink>\r\n                </Card>\r\n            </Columns.Column>\r\n            <Columns.Column spread={4}>\r\n                <SideProfile />\r\n            </Columns.Column>\r\n        </Columns>\r\n    );\r\n}\r\n\r\nexport default MainProfile;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx",["145"],"import React, { useState } from 'react';\r\nimport { Switch, useColorMode } from 'bumbag';\r\n\r\nexport function DarkMode(): JSX.Element {\r\n    const [checked, setChecked] = useState(true);\r\n    const { colorMode, setColorMode } = useColorMode();\r\n    const handleChange = (e: any) => {\r\n        setChecked(e.target.checked);\r\n        colorMode === 'default' ? setColorMode('dark') : setColorMode('default');\r\n    };\r\n    return (\r\n        <Switch\r\n            colorMode={colorMode}\r\n            style={{ marginLeft: '0.5rem' }}\r\n            checked={checked}\r\n            onChange={(e) => handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\SideProfile.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx",["146","147","148","149"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCM7nvbFKElRyhTtAbCWmz5eSHWvG6_ex4',\r\n    authDomain: 'linkedin-profile-358a8.firebaseapp.com',\r\n    projectId: 'linkedin-profile-358a8',\r\n    storageBucket: 'linkedin-profile-358a8.appspot.com',\r\n    messagingSenderId: '674279447289',\r\n    appId: '1:674279447289:web:63424a18728b9ff403e028',\r\n    measurementId: 'G-XZNCK36PGF',\r\n};\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const storage = firebaseApp.storage();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// signin for google Sign In\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = (): any => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n//signout for google Sign Out\r\nexport const logOut = () => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            console.log('logged out');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n};\r\n\r\n// email and password login implementation\r\nexport const generateUserDocument = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email, displayName, photoURL } = user;\r\n\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                photoURL,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    } else {\r\n        try {\r\n            await userRef.update({\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error updating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n//update user data\r\nexport const updateUserData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\n//update image data\r\nexport const updateImageData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n    }\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx",["168","169"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx",["170","171","172"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Card, Button, Box, Link, FieldStack, InputField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport {\r\n    MainPageIcon,\r\n    MainPageIconContainer,\r\n    ProfileImg,\r\n    BackgroundImg,\r\n    MainPageIconContainerSec,\r\n} from '../profile/MainProfileElements';\r\nimport { UpdateModalImage } from './UpdateModalImage';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\nexport const ModalButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n    type: 'submit',\r\n});\r\n\r\ninterface Values {\r\n    name: string;\r\n    lastName: string;\r\n    headline: string;\r\n    company: string;\r\n    education: string;\r\n    country: string;\r\n    location: string;\r\n    industry: string;\r\n}\r\nexport function UpdateModalIntro(): JSX.Element {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL } = user;\r\n    const { setUser } = useContext(UserContext);\r\n    const initialValues: Values = {\r\n        name: '',\r\n        lastName: '',\r\n        headline: '',\r\n        company: '',\r\n        education: '',\r\n        country: '',\r\n        location: '',\r\n        industry: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Modal.State>\r\n            <Modal.Disclosure use={Link}>\r\n                <MainPageIcon src=\"../../assets/icons/pencil-icon.png\" />\r\n            </Modal.Disclosure>\r\n            <Modal>\r\n                <Card>\r\n                    <Flex justifyContent={'space-between'} borderBottom={'1px solid #ccc'}>\r\n                        <Box margin={'auto 0 1.5rem'} fontSize={'1.5rem'}>\r\n                            Edit intro\r\n                        </Box>\r\n                        <Modal.Disclosure use={Link} fontSize={'1.5rem'} color={'#666'} textDecoration={'none'}>\r\n                            X\r\n                        </Modal.Disclosure>\r\n                    </Flex>\r\n\r\n                    <Box\r\n                        maxHeight={'500px'}\r\n                        maxWidth={'800px'}\r\n                        minWidth={'600px'}\r\n                        overflowY={'scroll'}\r\n                        padding={'1rem 1rem 1rem 0'}\r\n                    >\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                                updateModalData(values);\r\n                                setSubmitting(false);\r\n                                resetForm({});\r\n                            }}\r\n                        >\r\n                            {({ isSubmitting, handleSubmit }) => (\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <FieldStack>\r\n                                        <Card\r\n                                            style={{\r\n                                                padding: 0,\r\n                                                borderRadius: '0.5rem 05.rem 0 0',\r\n                                                position: 'relative',\r\n                                                marginBottom: '6rem',\r\n                                                height: '170px',\r\n                                            }}\r\n                                        >\r\n                                            <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" width={'100%'} />\r\n                                            {/* <ProfileImg src=\"../../assets/photos/ogz.jpg\" /> */}\r\n                                            <ProfileImg\r\n                                                src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                            />\r\n                                            <MainPageIconContainerSec\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    left: '7.5rem',\r\n                                                    bottom: '-4rem',\r\n                                                    background: '#fff',\r\n                                                    boxShadow: '0 0 4px 0px #aaa',\r\n                                                }}\r\n                                            >\r\n                                                <UpdateModalImage />\r\n                                            </MainPageIconContainerSec>\r\n                                        </Card>\r\n                                        <FieldStack orientation=\"horizontal\">\r\n                                            <Field\r\n                                                component={InputField.Formik}\r\n                                                name=\"name\"\r\n                                                label=\"First name\"\r\n                                                isRequired\r\n                                            />\r\n                                            <Field\r\n                                                component={InputField.Formik}\r\n                                                name=\"lastName\"\r\n                                                label=\"Last name\"\r\n                                                isRequired\r\n                                            />\r\n                                        </FieldStack>\r\n                                        <Field\r\n                                            component={InputField.Formik}\r\n                                            name=\"headline\"\r\n                                            label=\"Headline\"\r\n                                            isRequired\r\n                                        />\r\n                                        <Field component={InputField.Formik} name=\"company\" label=\"Company\" />\r\n                                        <Field component={InputField.Formik} name=\"education\" label=\"Education\" />\r\n                                        <Field\r\n                                            component={InputField.Formik}\r\n                                            name=\"country\"\r\n                                            label=\"Country\"\r\n                                            isRequired\r\n                                        />\r\n                                        <Field component={InputField.Formik} name=\"location\" label=\"Location\" />\r\n                                        <Field\r\n                                            component={InputField.Formik}\r\n                                            name=\"industry\"\r\n                                            label=\"Industry\"\r\n                                            isRequired\r\n                                        />\r\n                                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                                            <Button\r\n                                                disabled={isSubmitting}\r\n                                                palette=\"primary\"\r\n                                                borderRadius={'2rem'}\r\n                                                padding={'0 2rem'}\r\n                                                margin={'0 0.5rem'}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                            <Modal.Disclosure use={ModalButton}>Close</Modal.Disclosure>\r\n                                        </Flex>\r\n                                    </FieldStack>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Box>\r\n                </Card>\r\n            </Modal>\r\n        </Modal.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx",["173","174"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Card, Button, Box, Link, FieldStack, TextareaField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { MainPageIcon } from '../profile/MainProfileElements';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\n\r\ninterface Values {\r\n    about: string;\r\n}\r\nexport function UpdateModalAbout(): JSX.Element {\r\n    const { setUser } = useContext(UserContext);\r\n    const initialValues: Values = {\r\n        about: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Modal.State>\r\n            <Modal.Disclosure use={Link}>\r\n                <MainPageIcon src=\"../../assets/icons/pencil-icon-secondary.png\" />\r\n            </Modal.Disclosure>\r\n            <Modal>\r\n                <Card>\r\n                    <Flex justifyContent={'space-between'} borderBottom={'1px solid #ccc'}>\r\n                        <Box margin={'auto 0 1.5rem'} fontSize={'1.5rem'}>\r\n                            Edit about\r\n                        </Box>\r\n                        <Modal.Disclosure use={Link} fontSize={'1.5rem'} color={'#666'} textDecoration={'none'}>\r\n                            X\r\n                        </Modal.Disclosure>\r\n                    </Flex>\r\n                    <Box\r\n                        maxHeight={'500px'}\r\n                        maxWidth={'800px'}\r\n                        minWidth={'600px'}\r\n                        overflowY={'scroll'}\r\n                        padding={'1rem 1rem 1rem 0'}\r\n                    >\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                                updateModalData(values);\r\n                                setSubmitting(false);\r\n                                resetForm({});\r\n                            }}\r\n                        >\r\n                            {({ isSubmitting, handleSubmit }) => (\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <FieldStack>\r\n                                        <Field\r\n                                            component={TextareaField.Formik}\r\n                                            name=\"about\"\r\n                                            label=\"Summary\"\r\n                                            minHeight={'7rem'}\r\n                                        />\r\n                                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                                            <Button\r\n                                                disabled={isSubmitting}\r\n                                                palette=\"primary\"\r\n                                                borderRadius={'2rem'}\r\n                                                padding={'0 2rem'}\r\n                                                margin={'0 0.5rem'}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                                        </Flex>\r\n                                    </FieldStack>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Box>\r\n                </Card>\r\n            </Modal>\r\n        </Modal.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx",["175","176","177","178"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Card, Button, Box, Link, FieldStack, InputField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { MainPageIcon } from '../profile/MainProfileElements';\r\nimport { auth, updateImageData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { storage, firestore } from '../../firebase';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\n\r\ninterface Values {\r\n    photoURL: string;\r\n}\r\nexport function UpdateModalImage(): JSX.Element {\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n    const { setUser } = useContext(UserContext);\r\n    const initialValues: Values = {\r\n        photoURL: '',\r\n    };\r\n    const onFileChange = async (e: any) => {\r\n        const file = e.target.files[0];\r\n        const storageRef = storage.ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateImageData(user, { photoURL: fileUrl });\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Modal.State>\r\n            <Modal.Disclosure use={Link}>\r\n                <MainPageIcon\r\n                    src=\"../../assets/icons/pencil-icon-secondary.png\"\r\n                    width={'1.25rem'}\r\n                    height={'1.25rem'}\r\n                    marginTop={'5px'}\r\n                />\r\n            </Modal.Disclosure>\r\n            <Modal>\r\n                <Card>\r\n                    <Flex justifyContent={'space-between'} borderBottom={'1px solid #ccc'}>\r\n                        <Box margin={'auto 0 1.5rem'} fontSize={'1.5rem'}>\r\n                            Edit about\r\n                        </Box>\r\n                        <Modal.Disclosure use={Link} fontSize={'1.5rem'} color={'#666'} textDecoration={'none'}>\r\n                            X\r\n                        </Modal.Disclosure>\r\n                    </Flex>\r\n                    <Box\r\n                        maxHeight={'500px'}\r\n                        maxWidth={'800px'}\r\n                        minWidth={'600px'}\r\n                        overflowY={'scroll'}\r\n                        padding={'1rem 1rem 1rem 0'}\r\n                    >\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                                updateModalData(values);\r\n                                setSubmitting(false);\r\n                                resetForm({});\r\n                            }}\r\n                        >\r\n                            {({ isSubmitting, handleSubmit }) => (\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <FieldStack>\r\n                                        <Field\r\n                                            component={InputField.Formik}\r\n                                            name=\"photoURL\"\r\n                                            label=\"Photo\"\r\n                                            type={'file'}\r\n                                            onChange={onFileChange}\r\n                                        />\r\n                                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                                            <Button\r\n                                                disabled={isSubmitting}\r\n                                                palette=\"primary\"\r\n                                                borderRadius={'2rem'}\r\n                                                padding={'0 2rem'}\r\n                                                margin={'0 0.5rem'}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                                        </Flex>\r\n                                    </FieldStack>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Box>\r\n                </Card>\r\n            </Modal>\r\n        </Modal.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx",["179","180","181","182","183","184","185","186","187","188"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle } from '../../firebase';\r\nimport { auth, generateUserDocument } from '../../firebase';\r\n\r\nexport function SignUp(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const createUserWithEmailAndPasswordHandler = async (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            generateUserDocument(user, { email, name, lastName, displayName });\r\n        } catch (error) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n        setDisplayName('');\r\n        setName('');\r\n        setLastName('');\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        } else if (name === 'displayName') {\r\n            setDisplayName(value);\r\n        } else if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'lastName') {\r\n            setLastName(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Sign Up\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        label=\"Display name\"\r\n                        name=\"displayName\"\r\n                        id=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder=\"Enter your display name\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <FieldStack orientation=\"horizontal\">\r\n                        <InputField\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Enter your  name\"\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                        <InputField\r\n                            label=\"Last name\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            placeholder=\"Enter your last name\"\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                    </FieldStack>\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"userPassword\"\r\n                        id=\"userPassword\"\r\n                        value={password}\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => {\r\n                            createUserWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Already have an account?</Text> <Link to=\"/signin\">Sign in here</Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                        Sign In With Google\r\n                    </Button>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx",["189","190","191","192"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport function PasswordReset(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n    };\r\n    const sendResetEmail = (event: any) => {\r\n        event.preventDefault();\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => {\r\n                    setEmailHasBeenSent(false);\r\n                }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setError('Error resetting password');\r\n            });\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Reset Your Password\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {emailHasBeenSent && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>An email has been sent to you!</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => sendResetEmail(event)}\r\n                    >\r\n                        Send me a reset link\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>Go Back to Sign In?</Text> <Link to=\"/signin\"> &larr; Sign In</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx",["193","194","195","196","197","198","199"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle, auth } from '../../firebase';\r\n\r\nexport function SignIn(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const signInWithEmailAndPasswordHandler = (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((error) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', error);\r\n        });\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Sign In\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"userPassword\"\r\n                        name=\"userPassword\"\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => {\r\n                            signInWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>Dont have an account?</Text>{' '}\r\n                        <Link to=\"/signUp\">Go to Sign Up &rarr; </Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Link to=\"/passwordReset\">Forgot Password?</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx",[],{"ruleId":"200","severity":1,"message":"201","line":18,"column":25,"nodeType":"202","messageId":"203","endLine":18,"endColumn":28,"suggestions":"204"},{"ruleId":"200","severity":1,"message":"201","line":49,"column":52,"nodeType":"202","messageId":"203","endLine":49,"endColumn":55,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"201","line":49,"column":64,"nodeType":"202","messageId":"203","endLine":49,"endColumn":67,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":22,"column":10,"nodeType":"209","messageId":"210","endLine":22,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":24,"column":22,"nodeType":"213","messageId":"214","endLine":24,"endColumn":35},{"ruleId":"200","severity":1,"message":"201","line":24,"column":32,"nodeType":"202","messageId":"203","endLine":24,"endColumn":35,"suggestions":"215"},{"ruleId":"200","severity":1,"message":"201","line":25,"column":127,"nodeType":"202","messageId":"203","endLine":25,"endColumn":130,"suggestions":"216"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":30,"nodeType":"202","messageId":"203","endLine":7,"endColumn":33,"suggestions":"217"},{"ruleId":"200","severity":1,"message":"201","line":5,"column":11,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14,"suggestions":"218"},{"ruleId":"200","severity":1,"message":"201","line":6,"column":29,"nodeType":"202","messageId":"203","endLine":6,"endColumn":32,"suggestions":"219"},{"ruleId":"207","severity":1,"message":"220","line":10,"column":15,"nodeType":"209","messageId":"210","endLine":10,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":17,"column":38,"nodeType":"202","messageId":"203","endLine":17,"endColumn":41,"suggestions":"221"},{"ruleId":"200","severity":1,"message":"201","line":24,"column":37,"nodeType":"202","messageId":"203","endLine":24,"endColumn":40,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"223","line":28,"column":23,"nodeType":"224","messageId":"225","endLine":28,"endColumn":28},{"ruleId":"211","severity":1,"message":"223","line":39,"column":37,"nodeType":"224","messageId":"225","endLine":39,"endColumn":79},{"ruleId":"211","severity":1,"message":"226","line":39,"column":44,"nodeType":"209","messageId":"227","endLine":39,"endColumn":53},{"ruleId":"200","severity":1,"message":"201","line":39,"column":50,"nodeType":"202","messageId":"203","endLine":39,"endColumn":53,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"229","line":39,"column":55,"nodeType":"209","messageId":"227","endLine":39,"endColumn":75},{"ruleId":"200","severity":1,"message":"201","line":39,"column":72,"nodeType":"202","messageId":"203","endLine":39,"endColumn":75,"suggestions":"230"},{"ruleId":"211","severity":1,"message":"223","line":68,"column":31,"nodeType":"224","messageId":"225","endLine":68,"endColumn":73},{"ruleId":"211","severity":1,"message":"226","line":68,"column":38,"nodeType":"209","messageId":"227","endLine":68,"endColumn":47},{"ruleId":"200","severity":1,"message":"201","line":68,"column":44,"nodeType":"202","messageId":"203","endLine":68,"endColumn":47,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"229","line":68,"column":49,"nodeType":"209","messageId":"227","endLine":68,"endColumn":69},{"ruleId":"200","severity":1,"message":"201","line":68,"column":66,"nodeType":"202","messageId":"203","endLine":68,"endColumn":69,"suggestions":"232"},{"ruleId":"211","severity":1,"message":"223","line":82,"column":32,"nodeType":"224","messageId":"225","endLine":82,"endColumn":74},{"ruleId":"211","severity":1,"message":"226","line":82,"column":39,"nodeType":"209","messageId":"227","endLine":82,"endColumn":48},{"ruleId":"200","severity":1,"message":"201","line":82,"column":45,"nodeType":"202","messageId":"203","endLine":82,"endColumn":48,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"229","line":82,"column":50,"nodeType":"209","messageId":"227","endLine":82,"endColumn":70},{"ruleId":"200","severity":1,"message":"201","line":82,"column":67,"nodeType":"202","messageId":"203","endLine":82,"endColumn":70,"suggestions":"234"},{"ruleId":"200","severity":1,"message":"201","line":95,"column":37,"nodeType":"202","messageId":"203","endLine":95,"endColumn":40,"suggestions":"235"},{"ruleId":"200","severity":1,"message":"201","line":97,"column":64,"nodeType":"202","messageId":"203","endLine":97,"endColumn":67,"suggestions":"236"},{"ruleId":"200","severity":1,"message":"201","line":145,"column":38,"nodeType":"202","messageId":"203","endLine":145,"endColumn":41,"suggestions":"237"},{"ruleId":"207","severity":1,"message":"238","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"239","line":6,"column":5,"nodeType":"209","messageId":"210","endLine":6,"endColumn":26},{"ruleId":"200","severity":1,"message":"201","line":52,"column":23,"nodeType":"202","messageId":"203","endLine":52,"endColumn":26,"suggestions":"240"},{"ruleId":"207","severity":1,"message":"238","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":28,"column":23,"nodeType":"202","messageId":"203","endLine":28,"endColumn":26,"suggestions":"241"},{"ruleId":"207","severity":1,"message":"242","line":7,"column":19,"nodeType":"209","messageId":"210","endLine":7,"endColumn":28},{"ruleId":"200","severity":1,"message":"201","line":28,"column":36,"nodeType":"202","messageId":"203","endLine":28,"endColumn":39,"suggestions":"243"},{"ruleId":"207","severity":1,"message":"244","line":35,"column":36,"nodeType":"209","messageId":"210","endLine":35,"endColumn":50},{"ruleId":"200","severity":1,"message":"201","line":37,"column":23,"nodeType":"202","messageId":"203","endLine":37,"endColumn":26,"suggestions":"245"},{"ruleId":"200","severity":1,"message":"201","line":14,"column":40,"nodeType":"202","messageId":"203","endLine":14,"endColumn":43,"suggestions":"246"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":65,"nodeType":"202","messageId":"203","endLine":15,"endColumn":68,"suggestions":"247"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":77,"nodeType":"202","messageId":"203","endLine":15,"endColumn":80,"suggestions":"248"},{"ruleId":"200","severity":1,"message":"201","line":15,"column":92,"nodeType":"202","messageId":"203","endLine":15,"endColumn":95,"suggestions":"249"},{"ruleId":"200","severity":1,"message":"201","line":30,"column":37,"nodeType":"202","messageId":"203","endLine":30,"endColumn":40,"suggestions":"250"},{"ruleId":"200","severity":1,"message":"201","line":65,"column":43,"nodeType":"202","messageId":"203","endLine":65,"endColumn":46,"suggestions":"251"},{"ruleId":"200","severity":1,"message":"201","line":74,"column":47,"nodeType":"202","messageId":"203","endLine":74,"endColumn":50,"suggestions":"252"},{"ruleId":"200","severity":1,"message":"201","line":82,"column":47,"nodeType":"202","messageId":"203","endLine":82,"endColumn":50,"suggestions":"253"},{"ruleId":"200","severity":1,"message":"201","line":92,"column":43,"nodeType":"202","messageId":"203","endLine":92,"endColumn":46,"suggestions":"254"},{"ruleId":"200","severity":1,"message":"201","line":101,"column":43,"nodeType":"202","messageId":"203","endLine":101,"endColumn":46,"suggestions":"255"},{"ruleId":"200","severity":1,"message":"201","line":10,"column":40,"nodeType":"202","messageId":"203","endLine":10,"endColumn":43,"suggestions":"256"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":37,"nodeType":"202","messageId":"203","endLine":11,"endColumn":40,"suggestions":"257"},{"ruleId":"200","severity":1,"message":"201","line":17,"column":36,"nodeType":"202","messageId":"203","endLine":17,"endColumn":39,"suggestions":"258"},{"ruleId":"200","severity":1,"message":"201","line":57,"column":43,"nodeType":"202","messageId":"203","endLine":57,"endColumn":46,"suggestions":"259"},{"ruleId":"200","severity":1,"message":"201","line":10,"column":40,"nodeType":"202","messageId":"203","endLine":10,"endColumn":43,"suggestions":"260"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":55,"nodeType":"202","messageId":"203","endLine":11,"endColumn":58,"suggestions":"261"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":67,"nodeType":"202","messageId":"203","endLine":11,"endColumn":70,"suggestions":"262"},{"ruleId":"200","severity":1,"message":"201","line":11,"column":82,"nodeType":"202","messageId":"203","endLine":11,"endColumn":85,"suggestions":"263"},{"ruleId":"200","severity":1,"message":"201","line":18,"column":37,"nodeType":"202","messageId":"203","endLine":18,"endColumn":40,"suggestions":"264"},{"ruleId":"200","severity":1,"message":"201","line":48,"column":43,"nodeType":"202","messageId":"203","endLine":48,"endColumn":46,"suggestions":"265"},{"ruleId":"200","severity":1,"message":"201","line":56,"column":43,"nodeType":"202","messageId":"203","endLine":56,"endColumn":46,"suggestions":"266"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["267","268"],["269","270"],["271","272"],"@typescript-eslint/no-unused-vars","'UpdateModalImage' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["273","274"],["275","276"],["277","278"],["279","280"],["281","282"],"'user' is defined but never used.",["283","284"],["285","286"],"Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","anyTypedArg",["287","288"],"Argument 'additionalData' should be typed with a non-any type.",["289","290"],["291","292"],["293","294"],["295","296"],["297","298"],["299","300"],["301","302"],["303","304"],"'useState' is defined but never used.","'MainPageIconContainer' is defined but never used.",["305","306"],["307","308"],"'firestore' is defined but never used.",["309","310"],"'values' is defined but never used.",["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],["353","354"],{"messageId":"355","fix":"356","desc":"357"},{"messageId":"358","fix":"359","desc":"360"},{"messageId":"355","fix":"361","desc":"357"},{"messageId":"358","fix":"362","desc":"360"},{"messageId":"355","fix":"363","desc":"357"},{"messageId":"358","fix":"364","desc":"360"},{"messageId":"355","fix":"365","desc":"357"},{"messageId":"358","fix":"366","desc":"360"},{"messageId":"355","fix":"367","desc":"357"},{"messageId":"358","fix":"368","desc":"360"},{"messageId":"355","fix":"369","desc":"357"},{"messageId":"358","fix":"370","desc":"360"},{"messageId":"355","fix":"371","desc":"357"},{"messageId":"358","fix":"372","desc":"360"},{"messageId":"355","fix":"373","desc":"357"},{"messageId":"358","fix":"374","desc":"360"},{"messageId":"355","fix":"375","desc":"357"},{"messageId":"358","fix":"376","desc":"360"},{"messageId":"355","fix":"377","desc":"357"},{"messageId":"358","fix":"378","desc":"360"},{"messageId":"355","fix":"379","desc":"357"},{"messageId":"358","fix":"380","desc":"360"},{"messageId":"355","fix":"381","desc":"357"},{"messageId":"358","fix":"382","desc":"360"},{"messageId":"355","fix":"383","desc":"357"},{"messageId":"358","fix":"384","desc":"360"},{"messageId":"355","fix":"385","desc":"357"},{"messageId":"358","fix":"386","desc":"360"},{"messageId":"355","fix":"387","desc":"357"},{"messageId":"358","fix":"388","desc":"360"},{"messageId":"355","fix":"389","desc":"357"},{"messageId":"358","fix":"390","desc":"360"},{"messageId":"355","fix":"391","desc":"357"},{"messageId":"358","fix":"392","desc":"360"},{"messageId":"355","fix":"393","desc":"357"},{"messageId":"358","fix":"394","desc":"360"},{"messageId":"355","fix":"395","desc":"357"},{"messageId":"358","fix":"396","desc":"360"},{"messageId":"355","fix":"397","desc":"357"},{"messageId":"358","fix":"398","desc":"360"},{"messageId":"355","fix":"399","desc":"357"},{"messageId":"358","fix":"400","desc":"360"},{"messageId":"355","fix":"401","desc":"357"},{"messageId":"358","fix":"402","desc":"360"},{"messageId":"355","fix":"403","desc":"357"},{"messageId":"358","fix":"404","desc":"360"},{"messageId":"355","fix":"405","desc":"357"},{"messageId":"358","fix":"406","desc":"360"},{"messageId":"355","fix":"407","desc":"357"},{"messageId":"358","fix":"408","desc":"360"},{"messageId":"355","fix":"409","desc":"357"},{"messageId":"358","fix":"410","desc":"360"},{"messageId":"355","fix":"411","desc":"357"},{"messageId":"358","fix":"412","desc":"360"},{"messageId":"355","fix":"413","desc":"357"},{"messageId":"358","fix":"414","desc":"360"},{"messageId":"355","fix":"415","desc":"357"},{"messageId":"358","fix":"416","desc":"360"},{"messageId":"355","fix":"417","desc":"357"},{"messageId":"358","fix":"418","desc":"360"},{"messageId":"355","fix":"419","desc":"357"},{"messageId":"358","fix":"420","desc":"360"},{"messageId":"355","fix":"421","desc":"357"},{"messageId":"358","fix":"422","desc":"360"},{"messageId":"355","fix":"423","desc":"357"},{"messageId":"358","fix":"424","desc":"360"},{"messageId":"355","fix":"425","desc":"357"},{"messageId":"358","fix":"426","desc":"360"},{"messageId":"355","fix":"427","desc":"357"},{"messageId":"358","fix":"428","desc":"360"},{"messageId":"355","fix":"429","desc":"357"},{"messageId":"358","fix":"430","desc":"360"},{"messageId":"355","fix":"431","desc":"357"},{"messageId":"358","fix":"432","desc":"360"},{"messageId":"355","fix":"433","desc":"357"},{"messageId":"358","fix":"434","desc":"360"},{"messageId":"355","fix":"435","desc":"357"},{"messageId":"358","fix":"436","desc":"360"},{"messageId":"355","fix":"437","desc":"357"},{"messageId":"358","fix":"438","desc":"360"},{"messageId":"355","fix":"439","desc":"357"},{"messageId":"358","fix":"440","desc":"360"},{"messageId":"355","fix":"441","desc":"357"},{"messageId":"358","fix":"442","desc":"360"},{"messageId":"355","fix":"443","desc":"357"},{"messageId":"358","fix":"444","desc":"360"},{"messageId":"355","fix":"445","desc":"357"},{"messageId":"358","fix":"446","desc":"360"},"suggestUnknown",{"range":"447","text":"448"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"447","text":"449"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"450","text":"448"},{"range":"450","text":"449"},{"range":"451","text":"448"},{"range":"451","text":"449"},{"range":"452","text":"448"},{"range":"452","text":"449"},{"range":"453","text":"448"},{"range":"453","text":"449"},{"range":"454","text":"448"},{"range":"454","text":"449"},{"range":"455","text":"448"},{"range":"455","text":"449"},{"range":"456","text":"448"},{"range":"456","text":"449"},{"range":"457","text":"448"},{"range":"457","text":"449"},{"range":"458","text":"448"},{"range":"458","text":"449"},{"range":"459","text":"448"},{"range":"459","text":"449"},{"range":"460","text":"448"},{"range":"460","text":"449"},{"range":"461","text":"448"},{"range":"461","text":"449"},{"range":"462","text":"448"},{"range":"462","text":"449"},{"range":"463","text":"448"},{"range":"463","text":"449"},{"range":"464","text":"448"},{"range":"464","text":"449"},{"range":"465","text":"448"},{"range":"465","text":"449"},{"range":"466","text":"448"},{"range":"466","text":"449"},{"range":"467","text":"448"},{"range":"467","text":"449"},{"range":"468","text":"448"},{"range":"468","text":"449"},{"range":"469","text":"448"},{"range":"469","text":"449"},{"range":"470","text":"448"},{"range":"470","text":"449"},{"range":"471","text":"448"},{"range":"471","text":"449"},{"range":"472","text":"448"},{"range":"472","text":"449"},{"range":"473","text":"448"},{"range":"473","text":"449"},{"range":"474","text":"448"},{"range":"474","text":"449"},{"range":"475","text":"448"},{"range":"475","text":"449"},{"range":"476","text":"448"},{"range":"476","text":"449"},{"range":"477","text":"448"},{"range":"477","text":"449"},{"range":"478","text":"448"},{"range":"478","text":"449"},{"range":"479","text":"448"},{"range":"479","text":"449"},{"range":"480","text":"448"},{"range":"480","text":"449"},{"range":"481","text":"448"},{"range":"481","text":"449"},{"range":"482","text":"448"},{"range":"482","text":"449"},{"range":"483","text":"448"},{"range":"483","text":"449"},{"range":"484","text":"448"},{"range":"484","text":"449"},{"range":"485","text":"448"},{"range":"485","text":"449"},{"range":"486","text":"448"},{"range":"486","text":"449"},{"range":"487","text":"448"},{"range":"487","text":"449"},{"range":"488","text":"448"},{"range":"488","text":"449"},{"range":"489","text":"448"},{"range":"489","text":"449"},{"range":"490","text":"448"},{"range":"490","text":"449"},{"range":"491","text":"448"},{"range":"491","text":"449"},{"range":"492","text":"448"},{"range":"492","text":"449"},[660,663],"unknown","never",[2219,2222],[2231,2234],[720,723],[867,870],[272,275],[165,168],[199,202],[548,551],[899,902],[1289,1292],[1311,1314],[2156,2159],[2178,2181],[2561,2564],[2583,2586],[2937,2940],[2594,2597],[4894,4897],[1487,1490],[918,921],[968,971],[1306,1309],[653,656],[730,733],[742,745],[757,760],[1264,1267],[2669,2672],[3092,3095],[3481,3484],[3906,3909],[4310,4313],[454,457],[503,506],[689,692],[2315,2318],[446,449],[513,516],[525,528],[540,543],[865,868],[2021,2024],[2383,2386]]