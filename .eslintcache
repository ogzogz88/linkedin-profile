[{"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx":"1","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts":"2","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx":"3","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx":"5","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx":"6","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx":"7","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx":"8","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx":"9","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx":"10","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx":"11","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx":"12","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx":"13","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx":"14","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx":"15","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx":"16","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx":"17","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx":"18","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx":"19","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx":"20","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx":"21","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx":"22","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx":"23","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx":"24","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx":"25","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx":"26","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx":"27","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx":"28","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx":"29","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx":"30","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx":"31","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\Footer.tsx":"32","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainDivider.tsx":"33","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterElements.tsx":"34","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\i18n\\config.ts":"35","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftImg.tsx":"36","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftIntro.tsx":"37"},{"size":564,"mtime":1610030030104,"results":"38","hashOfConfig":"39"},{"size":545,"mtime":1608486025945,"results":"40","hashOfConfig":"39"},{"size":269,"mtime":1610650519407,"results":"41","hashOfConfig":"39"},{"size":3780,"mtime":1610727452395,"results":"42","hashOfConfig":"39"},{"size":1329,"mtime":1610634586069,"results":"43","hashOfConfig":"39"},{"size":752,"mtime":1609790793814,"results":"44","hashOfConfig":"39"},{"size":495,"mtime":1610629411524,"results":"45","hashOfConfig":"39"},{"size":3015,"mtime":1610728534309,"results":"46","hashOfConfig":"39"},{"size":712,"mtime":1610635126302,"results":"47","hashOfConfig":"39"},{"size":794,"mtime":1610640998253,"results":"48","hashOfConfig":"39"},{"size":1847,"mtime":1609892491424,"results":"49","hashOfConfig":"39"},{"size":1297,"mtime":1609595486719,"results":"50","hashOfConfig":"39"},{"size":2830,"mtime":1610731866788,"results":"51","hashOfConfig":"39"},{"size":1451,"mtime":1610728974868,"results":"52","hashOfConfig":"39"},{"size":5545,"mtime":1610630031695,"results":"53","hashOfConfig":"39"},{"size":2306,"mtime":1610728550624,"results":"54","hashOfConfig":"39"},{"size":1638,"mtime":1610639036401,"results":"55","hashOfConfig":"39"},{"size":503,"mtime":1610560465999,"results":"56","hashOfConfig":"39"},{"size":1599,"mtime":1610723541971,"results":"57","hashOfConfig":"39"},{"size":944,"mtime":1610277603975,"results":"58","hashOfConfig":"39"},{"size":5900,"mtime":1610563415788,"results":"59","hashOfConfig":"39"},{"size":3376,"mtime":1610560617348,"results":"60","hashOfConfig":"39"},{"size":4070,"mtime":1610560732027,"results":"61","hashOfConfig":"39"},{"size":848,"mtime":1610278816204,"results":"62","hashOfConfig":"39"},{"size":8469,"mtime":1610801045070,"results":"63","hashOfConfig":"39"},{"size":403,"mtime":1609607866856,"results":"64","hashOfConfig":"39"},{"size":3859,"mtime":1610638880123,"results":"65","hashOfConfig":"39"},{"size":2341,"mtime":1610724410717,"results":"66","hashOfConfig":"39"},{"size":3320,"mtime":1610724249747,"results":"67","hashOfConfig":"39"},{"size":4761,"mtime":1610635771304,"results":"68","hashOfConfig":"39"},{"size":3644,"mtime":1610628350401,"results":"69","hashOfConfig":"39"},{"size":4408,"mtime":1610647584485,"results":"70","hashOfConfig":"39"},{"size":556,"mtime":1609882164570,"results":"71","hashOfConfig":"39"},{"size":1735,"mtime":1610648607221,"results":"72","hashOfConfig":"39"},{"size":1992,"mtime":1610566580285,"results":"73","hashOfConfig":"39"},{"size":1152,"mtime":1610724377063,"results":"74","hashOfConfig":"39"},{"size":3592,"mtime":1610635714086,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1uuephu",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"78"},"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx",["166","167"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { TopNav, Image, Input, Flex, } from 'bumbag';\r\nimport { Navlink, NavDivider } from './Navlink';\r\nimport NavText from './NavText';\r\nimport { UserPopover } from './UserPopover';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { NavImage } from './UserPopoverElements'\r\nimport { DarkMode } from '../DarkMode';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\n\r\nexport function Navbar(): JSX.Element {\r\n    const { t, i18n } = useTranslation();\r\n    const navData = i18n.t<any>('NavData', { returnObjects: true });\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL }: any = user;\r\n    return (\r\n        <TopNav margin=\"0 2rem\">\r\n            <TopNav.Section>\r\n                <Navlink keyData={100} href=\"/\" style={{ marginLeft: '0' }}>\r\n                    <Image src=\"/logo.png\" height=\"35px\" />\r\n                </Navlink>\r\n                <Flex alignItems=\"center\">\r\n                    <Input\r\n                        before={<Input.Icon icon=\"solid-search\" />}\r\n                        placeholder={t('placeholder')}\r\n                        marginLeft=\"5px\"\r\n                        size=\"small\"\r\n                        width=\"250px\"\r\n                        marginRight=\"6rem\"\r\n                    />\r\n                </Flex>\r\n            </TopNav.Section>\r\n            <TopNav.Section >\r\n                {navData?.map((navElement: { navHref: string; navIcon: string; navText: React.ReactNode; }, index: number) => {\r\n                    const isNavUser = navElement.navIcon === \"user\";\r\n                    const isNavPlain = navElement.navIcon === \"\";\r\n                    const isNavWork = navElement.navIcon === \"th\";\r\n                    const navUserStyle: React.CSSProperties = { paddingRight: \"1rem\" };\r\n                    const navPlainStyle: React.CSSProperties = {\r\n                        color: '#5d3b09',\r\n                        fontSize: '0.75rem',\r\n                        fontWeight: 'lighter',\r\n                        width: '90px',\r\n                        textAlign: 'center',\r\n                    }\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                            <Navlink\r\n                                keyData={index}\r\n                                href={navElement.navHref}\r\n                                style={\r\n                                    isNavUser ?\r\n                                        navUserStyle :\r\n                                        isNavPlain ?\r\n                                            navPlainStyle :\r\n                                            undefined\r\n                                }\r\n                            >\r\n                                {!isNavUser && <NavIcon aria-label=\"Navlcon\" icon={`solid-${navElement.navIcon}`} />}\r\n                                {isNavUser && <NavImage src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                    alt=\"Profile Picture\" width=\"30px\" />}\r\n\r\n                                <Flex key={index + 1}>\r\n                                    <NavText>{navElement.navText}</NavText>\r\n                                    {isNavUser && <UserPopover />}\r\n                                    {isNavWork && <SideDrawer />}\r\n                                </Flex>\r\n                            </Navlink>\r\n                            {isNavUser && <NavDivider />}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n                <DarkMode />\r\n            </TopNav.Section>\r\n        </TopNav >\r\n    );\r\n}\r\n\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx",["168","169","170"],"import React from 'react';\r\nimport { Drawer, Card, Flex, Text, Box } from 'bumbag';\r\nimport {\r\n    CustomDrawer,\r\n    NavHeader,\r\n    SideDrawerIconContainer,\r\n    NavImage,\r\n    NavText,\r\n    NavSubHeader,\r\n    NavSubText,\r\n} from './SideDrawerElements';\r\nimport { PopoverIcon } from './UserPopoverElements';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function SideDrawer(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const sideDrawerData = i18n.t<any>('sideDrawerData', { returnObjects: true });\r\n    const { innerText, headerText, iconData } = sideDrawerData;\r\n    const { products, services, createPage } = headerText;\r\n\r\n    return (\r\n        <Drawer.State animated>\r\n            <Drawer.Disclosure height=\"5px\" marginTop=\"-7px\">\r\n                <PopoverIcon />\r\n            </Drawer.Disclosure>\r\n            <CustomDrawer placement=\"right\" fade slide hideBackdrop>\r\n                {/* products part */}\r\n                <Card margin=\"1.5rem\" padding=\"2px 0 0 0\">\r\n                    <NavHeader>{products}</NavHeader>\r\n                    <Card margin=\"auto 0\" borderRadius=\"0 0 4px 4px\" padding=\"20px \">\r\n                        <Flex flexWrap=\"wrap\" justifyContent=\"space-between\" maxWidth=\"325px\">\r\n                            {iconData.map((icon: Record<string, string>, index: string) => {\r\n                                return (\r\n                                    <Flex key={index} flexDirection=\"column\">\r\n                                        <SideDrawerIconContainer>\r\n                                            <NavImage alt=\"Linked icon\" src={icon.src} />\r\n                                        </SideDrawerIconContainer>\r\n                                        <NavText>{icon.text}</NavText>\r\n                                    </Flex>\r\n                                );\r\n                            })}\r\n                        </Flex>\r\n                    </Card>\r\n                </Card>\r\n                {/* services part */}\r\n                <Card margin=\"1.5rem\" padding=\"2px 0 0 0\">\r\n                    <NavHeader>{services}</NavHeader>\r\n                    <Card margin=\"auto 0\" padding=\"0.5rem 1rem\" borderRadius=\"0 0 4px 4px\">\r\n                        {innerText.map((data: any, index: any) => {\r\n                            return (\r\n                                <Box key={index}>\r\n                                    <NavSubHeader>{data.header}</NavSubHeader>\r\n                                    <NavSubText>{data.text}</NavSubText>\r\n                                </Box>\r\n                            );\r\n                        })}\r\n                    </Card>\r\n                    <Card margin=\"auto 0\" borderRadius=\"0 0 4px 4px\" padding=\"0.5rem 1.5rem\">\r\n                        <NavSubHeader>\r\n                            {createPage} <Text fontSize=\"1.5rem\">+</Text>\r\n                        </NavSubHeader>\r\n                    </Card>\r\n                </Card>\r\n            </CustomDrawer>\r\n        </Drawer.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx",["171","172","173","174"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\n\r\ntype UserContextType = {\r\n    user: any;\r\n    setUser: React.Dispatch<any>;\r\n};\r\nexport const UserContext = createContext<UserContextType>({\r\n    user: null,\r\n    setUser: (user) => console.warn('no user provider now'),\r\n});\r\n\r\ninterface ProviderProps {\r\n    children: React.ReactNode;\r\n}\r\nexport function UserProvider(props: React.PropsWithChildren<ProviderProps>): JSX.Element {\r\n    const [user, setUser] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        setUser('loading');\r\n        auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                if (auth?.currentUser?.providerData[0]?.providerId === 'google.com') {\r\n                    setUser(userAuth);\r\n                } else {\r\n                    const user = await generateUserDocument(userAuth);\r\n                    setUser(user);\r\n                }\r\n            } else {\r\n                setUser(null);\r\n            }\r\n            // console.log('provider');\r\n            // console.log(auth?.currentUser?.providerData[0]?.providerId);\r\n        });\r\n    }, []);\r\n    return <UserContext.Provider value={{ user, setUser }}>{props.children}</UserContext.Provider>;\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx",["175","176","177","178","179","180","181","182","183","184","185","186","187"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCM7nvbFKElRyhTtAbCWmz5eSHWvG6_ex4',\r\n    authDomain: 'linkedin-profile-358a8.firebaseapp.com',\r\n    projectId: 'linkedin-profile-358a8',\r\n    storageBucket: 'linkedin-profile-358a8.appspot.com',\r\n    messagingSenderId: '674279447289',\r\n    appId: '1:674279447289:web:63424a18728b9ff403e028',\r\n    measurementId: 'G-XZNCK36PGF',\r\n};\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const storage = firebaseApp.storage();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// signin for google Sign In\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = (): any => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n//signout for google Sign Out\r\nexport const logOut = () => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            console.log('logged out');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n};\r\n\r\n// email and password login implementation\r\nexport const generateUserDocument = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email, displayName, photoURL } = user;\r\n\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                photoURL,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    } else {\r\n        try {\r\n            await userRef.update({\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error updating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n//update user data\r\nexport const updateUserData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n    }\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx",["188","189","190"],"import React, { useContext } from 'react';\r\nimport { Text, Box, Popover, Link, Divider, Flex, Button, Stack, Set, Image, applyTheme } from 'bumbag';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { logOut } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const NavText = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'lighter',\r\n            fontSize: '14px',\r\n            display: 'block',\r\n            lineHeight: '2rem',\r\n        },\r\n    },\r\n});\r\nexport const NavHeader = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'bold',\r\n            display: 'block',\r\n            lineHeight: '1.25rem',\r\n            marginTop: '0.5rem',\r\n        },\r\n    },\r\n});\r\nexport const NavButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'light',\r\n            width: '100%',\r\n            fontSize: '14px',\r\n            minHeight: '1rem',\r\n            marginBottom: '1rem',\r\n            borderRadius: '1rem',\r\n            ':focus': {\r\n                boxShadow: 'none!important',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const NavImage = applyTheme(Image, {\r\n    styles: {\r\n        base: {\r\n            borderRadius: '50%',\r\n            width: '50px',\r\n        },\r\n    },\r\n});\r\nexport const PageLink = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: '#545454',\r\n            textDecoration: 'none',\r\n            margin: '0px',\r\n            ':hover': {\r\n                textDecoration: 'none',\r\n                color: '#000',\r\n            },\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const CustomPopover = applyTheme(Popover, {\r\n    styles: {\r\n        base: {\r\n            padding: '0px',\r\n            width: '270px',\r\n            ':focus': {\r\n                color: '#545454',\r\n            },\r\n            ':focus-within': {\r\n                color: '#545454',\r\n            },\r\n            ':hover': {\r\n                color: '#545454',\r\n            },\r\n            ':active': {\r\n                color: '#545454',\r\n            },\r\n            cursor: 'default',\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const PopoverContent: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL, name, lastName, displayName, headline }: any = user;\r\n    const { i18n } = useTranslation();\r\n    const mainProfileLeftData = i18n.t<any>('mainProfileLeftData', { returnObjects: true });\r\n    const userPopoverData = i18n.t<any>('userPopoverData', { returnObjects: true });\r\n    const { userName, userLastName, userHeadline } = mainProfileLeftData[0].basic;\r\n    const { viewProfile, account, settings, help, language, manage, posts, jobPosting, signout } = userPopoverData;\r\n    // display name in necessary when user only sign in with google\r\n    let nameLastName;\r\n    if (name && lastName) {\r\n        nameLastName = `${name} ${lastName}`;\r\n    } else if (displayName) {\r\n        nameLastName = displayName;\r\n    }\r\n    return (\r\n        <Box padding={'0.5rem 0'}>\r\n            <Stack>\r\n                <Flex alignX=\"center\" alignY=\"center\" position=\"relative\">\r\n                    <Box position=\"absolute\" top=\"0\" left=\"0\">\r\n                        <NavImage\r\n                            src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                            alt=\"Profile Picture\"\r\n                        />\r\n                    </Box>\r\n                    <Box marginLeft=\"3.5rem\" fontSize=\"1rem\">\r\n                        <NavHeader marginTop=\"0\" textTransform=\"capitalize\">\r\n                            {nameLastName ? nameLastName : `${userName} ${userLastName}`}\r\n                        </NavHeader>\r\n                        <NavText lineHeight=\"1rem\">{headline ? headline : userHeadline}</NavText>\r\n                    </Box>\r\n                </Flex>\r\n                <Set>\r\n                    <NavButton variant=\"outlined\" palette=\"primary\" width=\"100%\">\r\n                        {viewProfile}\r\n                    </NavButton>\r\n                </Set>\r\n            </Stack>\r\n            <Text.Block>\r\n                <Divider />\r\n                <NavHeader>{account}</NavHeader>\r\n                <NavText>{settings}</NavText>\r\n                <NavText>{help}</NavText>\r\n                <NavText>{language}</NavText>\r\n                <Divider />\r\n                <NavHeader fontWeight=\"bold\">{manage}</NavHeader>\r\n                <NavText>{posts}</NavText>\r\n                <NavText>{jobPosting}</NavText>\r\n                <Divider />\r\n                <PageLink fontWeight=\"normal\" fontSize=\"14px\" alignItems=\"flex-start\" onClick={logOut} href=\"/\">\r\n                    {signout}\r\n                </PageLink>\r\n            </Text.Block>\r\n        </Box>\r\n    );\r\n};\r\nexport const PopoverIcon: React.FC = () => {\r\n    return (\r\n        <NavIcon\r\n            aria-label=\"Navlcon\"\r\n            icon=\"solid-sort-down\"\r\n            margin=\"0\"\r\n            padding=\"0\"\r\n            width=\"25px\"\r\n            height=\"20px\"\r\n            position=\"relative\"\r\n            top=\"-5px\"\r\n        />\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx",["191"],"/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport { Modal, Card, Box, Link, Flex } from 'bumbag';\r\nimport { MainPageIcon } from '../profile/MainProfileLeftElements';\r\nimport { UpdateModalIntroForm } from './UpdateModalIntroForm'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\nexport function UpdateModalIntro(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const modalIntroData = i18n.t<any>('modalIntroData', { returnObjects: true });\r\n    const { title } = modalIntroData;\r\n    return (\r\n        <Modal.State >\r\n            <Modal.Disclosure use={Link} >\r\n                <MainPageIcon src=\"../../assets/icons/pencil-icon.png\" />\r\n            </Modal.Disclosure>\r\n            <Modal>\r\n                <Card>\r\n                    <Flex justifyContent='space-between' borderBottom='1px solid #ccc'>\r\n                        <Box margin={'auto 0 1.5rem'} fontSize={'1.5rem'}>\r\n                            {title}                        </Box>\r\n                        <Modal.Disclosure use={Link} fontSize='1.5rem' color='#666' textDecoration='none'>\r\n                            X\r\n                        </Modal.Disclosure>\r\n                    </Flex>\r\n\r\n                    <Box\r\n                        maxHeight='500px'\r\n                        maxWidth='800px'\r\n                        minWidth='600px'\r\n                        overflowY='scroll'\r\n                        padding='1rem 1rem 1rem 0'\r\n                    >\r\n                        <UpdateModalIntroForm />\r\n                    </Box>\r\n                </Card>\r\n            </Modal>\r\n        </Modal.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx",["192"],"import React from 'react';\r\nimport { Modal, Card, Box, Link, Flex } from 'bumbag';\r\nimport { MainPageIcon } from '../profile/MainProfileLeftElements';\r\nimport { UpdateModalAboutForm } from './UpdateModalAboutForm';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function UpdateModalAbout(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const modalAboutData = i18n.t<any>('modalAboutData', { returnObjects: true });\r\n    const { title } = modalAboutData;\r\n    return (\r\n        <Modal.State>\r\n            <Modal.Disclosure use={Link}>\r\n                <MainPageIcon src=\"../../assets/icons/pencil-icon-secondary.png\" />\r\n            </Modal.Disclosure>\r\n            <Modal>\r\n                <Card>\r\n                    <Flex justifyContent=\"space-between\" borderBottom=\"1px solid #ccc\">\r\n                        <Box margin=\"auto 0 1.5rem\" fontSize=\"1.5rem\">\r\n                            {title}\r\n                        </Box>\r\n                        <Modal.Disclosure use={Link} fontSize=\"1.5rem\" color=\"#666\" textDecoration=\"none\">\r\n                            X\r\n                        </Modal.Disclosure>\r\n                    </Flex>\r\n                    <Box\r\n                        maxHeight=\"500px\"\r\n                        maxWidth=\"800px\"\r\n                        minWidth=\"600px\"\r\n                        overflowY=\"scroll\"\r\n                        padding=\"1rem 1rem 1rem 0\"\r\n                    >\r\n                        <UpdateModalAboutForm />\r\n                    </Box>\r\n                </Card>\r\n            </Modal>\r\n        </Modal.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx",["193","194","195","196","197","198","199","200","201","202","203"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle } from '../../firebase';\r\nimport { auth, generateUserDocument } from '../../firebase';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function SignUp(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const signupData = i18n.t<any>('signupData', { returnObjects: true });\r\n    const {\r\n        signup,\r\n        displayNameT,\r\n        nameT,\r\n        lastNameT,\r\n        emailT,\r\n        passwordT,\r\n        enterDisplayName,\r\n        enterName,\r\n        enterLastName,\r\n        enterEmail,\r\n        enterPass,\r\n        alreadyAccount,\r\n        or,\r\n        signinHere,\r\n        signinWithGoogle,\r\n    } = signupData;\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const createUserWithEmailAndPasswordHandler = async (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            generateUserDocument(user, { email, name, lastName, displayName });\r\n        } catch (error) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n        setDisplayName('');\r\n        setName('');\r\n        setLastName('');\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        } else if (name === 'displayName') {\r\n            setDisplayName(value);\r\n        } else if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'lastName') {\r\n            setLastName(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom=\"1rem\" marginTop=\"2rem\">\r\n                    <Text use=\"strong\" fontSize=\"2rem\">\r\n                        {signup}\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin=\"1rem auto 2rem \" borderBottom=\"1px solid #574feb\" />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin=\"1rem auto\">\r\n                            <Text fontSize=\"1rem\">{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        label={displayNameT}\r\n                        name=\"displayName\"\r\n                        id=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder={enterDisplayName}\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <FieldStack orientation=\"horizontal\">\r\n                        <InputField\r\n                            label={nameT}\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            placeholder={enterName}\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                        <InputField\r\n                            label={lastNameT}\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            placeholder={enterLastName}\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                    </FieldStack>\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label={emailT}\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder={enterEmail}\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label={passwordT}\r\n                        name=\"userPassword\"\r\n                        id=\"userPassword\"\r\n                        value={password}\r\n                        placeholder={enterPass}\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width=\"100%\"\r\n                        textTransform=\"uppercase\"\r\n                        onClick={(event) => {\r\n                            createUserWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        {signup}\r\n                    </Button>\r\n                    <Text.Block margin=\"1rem auto\" textAlign=\"center\">\r\n                        <Text fontSize=\"1rem\">{alreadyAccount}</Text> <Link to=\"/signin\">{signinHere}</Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin=\"1rem auto\" textAlign=\"center\">\r\n                        <Text fontSize=\"1rem\">{or}</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width=\"100%\" onClick={signInWithGoogle}>\r\n                        {signinWithGoogle}\r\n                    </Button>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx",["204","205","206","207","208"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function PasswordReset(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const passwordResetData = i18n.t<any>('passwordResetData', { returnObjects: true });\r\n    const { resetPass, emailT, enterEmail, sendReset, or, goBack, signin, emailSent } = passwordResetData;\r\n    const [email, setEmail] = useState('');\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n    };\r\n    const sendResetEmail = (event: any) => {\r\n        event.preventDefault();\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => {\r\n                    setEmailHasBeenSent(false);\r\n                }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setError('Error resetting password');\r\n            });\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom=\"1rem\" marginTop=\"2rem\">\r\n                    <Text use=\"strong\" fontSize=\"2rem\">\r\n                        {resetPass}\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin=\"1rem auto 2rem \" borderBottom=\"1px solid #574feb\" />\r\n                <FieldStack>\r\n                    {emailHasBeenSent && (\r\n                        <Text.Block margin=\"1rem auto\">\r\n                            <Text fontSize=\"1rem\">{emailSent}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    {error !== null && (\r\n                        <Text.Block margin=\"1rem auto\">\r\n                            <Text fontSize=\"1rem\">{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label={emailT}\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder={enterEmail}\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width=\"100%\"\r\n                        textTransform=\"uppercase\"\r\n                        onClick={(event) => sendResetEmail(event)}\r\n                    >\r\n                        {sendReset}\r\n                    </Button>\r\n                    <Text.Block margin=\"1rem auto\" textAlign=\"center\">\r\n                        <Text fontSize=\"1rem\">{or}</Text>\r\n                    </Text.Block>\r\n                    <Text.Block margin=\"1rem auto\">\r\n                        <Text fontSize=\"1rem\">{goBack}</Text> <Link to=\"/signin\"> &larr; {signin}</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx",["209","210","211","212","213","214","215","216"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle, auth } from '../../firebase';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function SignIn(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const signinData = i18n.t<any>('signinData', { returnObjects: true });\r\n    const {\r\n        signin,\r\n        email,\r\n        password,\r\n        signinWithGoogle,\r\n        or,\r\n        noAccount,\r\n        gotoSignup,\r\n        forgetPass,\r\n        enterEmail,\r\n        enterPass,\r\n    } = signinData;\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const signInWithEmailAndPasswordHandler = (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((error) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', error);\r\n        });\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setUserEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setUserPassword(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom=\"1rem\" marginTop=\"2rem\">\r\n                    <Text use=\"strong\" fontSize=\"2rem\">\r\n                        {signin}\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin=\"1rem auto 2rem \" borderBottom=\"1px solid #574feb\" />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin=\"1rem auto\">\r\n                            <Text fontSize=\"1rem\">{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label={email}\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        placeholder={enterEmail}\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label={password}\r\n                        id=\"userPassword\"\r\n                        name=\"userPassword\"\r\n                        placeholder={enterPass}\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width=\"100%\"\r\n                        textTransform=\"uppercase\"\r\n                        onClick={(event) => {\r\n                            signInWithEmailAndPasswordHandler(event, userEmail, userPassword);\r\n                        }}\r\n                    >\r\n                        {signin}\r\n                    </Button>\r\n                    <Text.Block margin=\"1rem auto\" textAlign={'center'}>\r\n                        <Text fontSize=\"1rem\">{or}</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width=\"100%\" onClick={signInWithGoogle}>\r\n                        {signinWithGoogle}\r\n                    </Button>\r\n                    <Text.Block margin=\"1rem auto\">\r\n                        <Text fontSize=\"1rem\">{noAccount}</Text>\r\n                        <Link to=\"/signUp\"> {gotoSignup} &rarr; </Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin=\"1rem auto\">\r\n                        <Link to=\"/passwordReset\">{forgetPass}</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx",["217","218","219","220"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx",["221","222"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Button, FieldStack, TextareaField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\n\r\ninterface Values {\r\n    about: string;\r\n}\r\nconst UpdateModalAboutSchema = Yup.object().shape({\r\n    about: Yup.string()\r\n        .min(10, 'Too short for your about section! It must be at least 10 characters long.')\r\n        .max(350, 'Too long for your about section! It must be at most 350 characters long.')\r\n        .required('Required'),\r\n});\r\nexport function UpdateModalAboutForm(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const modalAboutFormData = i18n.t<any>('modalAboutFormData', { returnObjects: true });\r\n    const { summaryT, btnSaveT, btnCloseT } = modalAboutFormData;\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        about: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalAboutSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field component={TextareaField.Formik} name=\"about\" label={summaryT} minHeight=\"7rem\" />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your About Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update About info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop=\"1.5rem \">\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius=\"2rem\"\r\n                                padding=\"0 2rem\"\r\n                                margin=\"0 0.5rem\"\r\n                                type=\"submit\"\r\n                            >\r\n                                {btnSaveT}\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>{btnCloseT}</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx",["223","224","225","226","227"],"import React from 'react';\r\nimport { Flex, Card } from 'bumbag';\r\nimport { ProfileEditLink, ProfileTextMd, ProfileTextXs, MainPageIconContainerSec } from './MainProfileLeftElements';\r\nimport { UpdateModalAbout } from '../update/UpdateModalAbout';\r\nimport { MainProfileLeftImg } from './MainProfileLeftImg';\r\nimport { MainProfileLeftIntro } from './MainProfileLeftIntro';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function MainProfileLeft({ user }: any): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const mainProfileLeftData = i18n.t<any>('mainProfileLeftData', { returnObjects: true });\r\n    const { profile, more } = mainProfileLeftData[0].introButtons;\r\n    const {\r\n        photoURL,\r\n        displayName,\r\n        email,\r\n        name,\r\n        lastName,\r\n        headline,\r\n        company,\r\n        education,\r\n        country,\r\n        location,\r\n        industry,\r\n        about,\r\n    }: any = user;\r\n\r\n    return (\r\n        <>\r\n            {/* Intro Card  */}\r\n            <Card padding=\"0\" borderRadius=\"0.5rem\" position=\"relative\">\r\n                <MainProfileLeftImg photoURL={photoURL} profileTxt={profile} moreTxt={more} />\r\n                <MainProfileLeftIntro\r\n                    name={name}\r\n                    lastName={lastName}\r\n                    email={email}\r\n                    headline={headline}\r\n                    displayName={displayName}\r\n                    company={company}\r\n                    education={education}\r\n                    country={country}\r\n                    location={location}\r\n                    industry={industry}\r\n                />\r\n            </Card>\r\n            {/* About Card  */}\r\n            <Card marginTop=\"2rem\" position=\"relative\">\r\n                <Flex>\r\n                    <Flex flexDirection=\"column\">\r\n                        <ProfileTextMd marginBottom=\"1rem\">{mainProfileLeftData[0].about.title}</ProfileTextMd>\r\n                        <ProfileTextXs>{about ? about : mainProfileLeftData[0].about.text}</ProfileTextXs>\r\n                    </Flex>\r\n                </Flex>\r\n                <MainPageIconContainerSec margin=\"0\" position=\"absolute\" right=\"1rem\" top=\"1rem\" padding=\"1.25rem\">\r\n                    <UpdateModalAbout />\r\n                </MainPageIconContainerSec>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx",["228","229","230","231","232"],"import React from 'react';\r\nimport { Card, Box, Flex, Divider, List } from 'bumbag';\r\nimport {\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n    CardToolTip,\r\n    BackgroundImg,\r\n    BackgroundImgContainer,\r\n    ProfileImage,\r\n    IconContainer,\r\n    AlsoViewedTextContainer,\r\n} from './MainProfileRightElements';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function MainProfileRight(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const mainProfileRightData = i18n.t<any>('mainProfileRightData', { returnObjects: true });\r\n\r\n    const { textCard } = mainProfileRightData[0];\r\n    const { alsoViewed } = mainProfileRightData[1];\r\n    return (\r\n        <React.Fragment>\r\n            {/* Info card with two text/link */}\r\n            <Card marginBottom=\"1.5rem\">\r\n                <Flex flexDirection=\"column\">\r\n                    {textCard?.map((item: any, index: any) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <Flex key={index.toString()} justifyContent=\"space-between\">\r\n                                    <ProfileTextSm>{item.text}</ProfileTextSm>\r\n                                    <CardToolTip\r\n                                        // styles base did not work, so gave styling here\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"center\"\r\n                                        cursor=\"pointer\"\r\n                                        alignItems=\"center\"\r\n                                        background=\"#666666\"\r\n                                        fontSize=\"0.8rem\"\r\n                                        borderRadius=\"50%\"\r\n                                        width=\"1rem\"\r\n                                        height=\"1rem\"\r\n                                        content={item.tooltip}\r\n                                        placement=\"bottom\"\r\n                                        fade\r\n                                    >\r\n                                        <ProfileTextXs color=\"#fff\">?</ProfileTextXs>\r\n                                    </CardToolTip>\r\n                                </Flex>\r\n                                {index === 0 && <Divider margin=\"1rem 0\" />}\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </Flex>\r\n            </Card>\r\n            {/* advertisement card with image background */}\r\n            <BackgroundImgContainer marginBottom=\"24px\">\r\n                <BackgroundImg src=\"../../assets/photos/see-jobs.jpg\" />\r\n            </BackgroundImgContainer>\r\n            {/* people also viewed card */}\r\n            <Card>\r\n                <Box marginBottom=\"1rem\">\r\n                    <ProfileTextMd>{alsoViewed?.title}</ProfileTextMd>\r\n                </Box>\r\n                {alsoViewed?.data.map((item: any, index: any) => {\r\n                    return (\r\n                        <Flex key={index} justifyContent=\"flex-start\" marginTop=\"0.7rem\">\r\n                            <ProfileImage src={item.imgSrc} alt=\"Also viewed profile image\" alignSelf=\"top\" />\r\n                            <AlsoViewedTextContainer>\r\n                                <Flex flexDirection=\"column\">\r\n                                    <ProfileTextSm>{item.name}</ProfileTextSm>\r\n                                    <List\r\n                                        listStyleType=\"disc\"\r\n                                        listStylePosition=\"inside\"\r\n                                        fontWeight=\"300\"\r\n                                        fontSize=\"0.8rem\"\r\n                                    >\r\n                                        <List.Item fontSize=\"0.5rem\">\r\n                                            <ProfileTextSm fontWeight={300} marginLeft=\"-4px\">\r\n                                                {item.order}\r\n                                            </ProfileTextSm>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                    <ProfileTextSm fontWeight=\"400\">{item.headline}</ProfileTextSm>\r\n                                </Flex>\r\n                                <IconContainer>\r\n                                    <NavIcon aria-label=\"Navlcon\" icon=\"solid-user\" />\r\n                                    <ProfileTextSm>+</ProfileTextSm>\r\n                                </IconContainer>\r\n                            </AlsoViewedTextContainer>\r\n                        </Flex>\r\n                    );\r\n                })}\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\Footer.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainDivider.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\i18n\\config.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftImg.tsx",["233"],"import React from 'react';\r\nimport { Set } from 'bumbag';\r\nimport {\r\n    ProfileImg,\r\n    BackgroundImg,\r\n    ProfileEditLink,\r\n    MainPageIconContainer,\r\n    AddButton,\r\n    MoreButton,\r\n} from './MainProfileLeftElements';\r\nimport { UpdateModalIntro } from '../update/UpdateModalIntro';\r\n\r\ninterface leftImg {\r\n    profileTxt: string;\r\n    moreTxt: string;\r\n    photoURL: string;\r\n}\r\nexport const MainProfileLeftImg: React.FC<leftImg> = ({ profileTxt, moreTxt, photoURL }: leftImg) => {\r\n    return (\r\n        <React.Fragment>\r\n            <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" />\r\n            <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n            <Set justifyContent=\"flex-end\" marginTop=\"0.3rem\">\r\n                <AddButton size=\"small\" palette=\"primary\">\r\n                    {profileTxt}\r\n                </AddButton>\r\n                <MoreButton size=\"small\">{moreTxt}</MoreButton>\r\n                <MainPageIconContainer padding=\"1.25rem\">\r\n                    <UpdateModalIntro />\r\n                </MainPageIconContainer>\r\n            </Set>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftIntro.tsx",["234"],"import React from 'react';\r\nimport { Columns, Flex } from 'bumbag';\r\nimport {\r\n    MainPageIcon,\r\n    MainPageIconContainer,\r\n    ProfileTextLg,\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n} from './MainProfileLeftElements';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface LeftIntro {\r\n    name: string;\r\n    lastName: string;\r\n    displayName: string;\r\n    email: string;\r\n    headline: string;\r\n    industry: string;\r\n    location: string;\r\n    country: string;\r\n    company: string;\r\n    education: string;\r\n}\r\nexport const MainProfileLeftIntro: React.FC<LeftIntro> = ({\r\n    name,\r\n    lastName,\r\n    displayName,\r\n    email,\r\n    headline,\r\n    industry,\r\n    location,\r\n    country,\r\n    company,\r\n    education,\r\n}: LeftIntro) => {\r\n    const { i18n } = useTranslation();\r\n    const mainProfileLeftData = i18n.t<any>('mainProfileLeftData', { returnObjects: true });\r\n    const {\r\n        userName,\r\n        userLastName,\r\n        userEmail,\r\n        userHeadline,\r\n        userIndustry,\r\n        userLocation,\r\n        userCountry,\r\n        userCompany,\r\n        userEducation,\r\n    } = mainProfileLeftData[0].basic;\r\n    // display name in necessary when user only sgin in with google\r\n    let nameLastName;\r\n    if (name && lastName) {\r\n        nameLastName = `${name} ${lastName}`;\r\n    } else if (displayName) {\r\n        nameLastName = displayName;\r\n    }\r\n    return (\r\n        <Columns marginTop=\"0.25rem\" paddingBottom=\"1rem\">\r\n            <Columns.Column spread={8}>\r\n                <Flex flexDirection=\"column\" marginLeft=\"1.5rem\">\r\n                    <ProfileTextLg textTransform=\"capitalize\">\r\n                        {nameLastName ? nameLastName : `${userName} ${userLastName}`}\r\n                    </ProfileTextLg>\r\n                    <ProfileTextSm>{email ? email : userEmail}</ProfileTextSm>\r\n                    <ProfileTextMd>{headline ? headline : userHeadline}</ProfileTextMd>\r\n                    <ProfileTextMd>{industry ? industry : userIndustry}</ProfileTextMd>\r\n                    <ProfileTextSm>\r\n                        {location ? location : userLocation}, {country ? country : userCountry}\r\n                    </ProfileTextSm>\r\n                </Flex>\r\n            </Columns.Column>\r\n            {/* company and education at intro */}\r\n            <Columns.Column spread={4}>\r\n                <Flex flexDirection=\"column\" paddingRight=\"0.5rem\">\r\n                    <Flex alignItems=\"center\">\r\n                        <MainPageIconContainer\r\n                            marginRight=\"0.6rem\"\r\n                            marginBottom=\"0.6rem\"\r\n                            borderRadius=\"0%\"\r\n                            background=\"#eee\"\r\n                        >\r\n                            <MainPageIcon width=\"2rem\" height=\"2rem\" src=\"../../assets/icons/company-icon.png\" />\r\n                        </MainPageIconContainer>\r\n                        <ProfileTextXs fontWeight=\"bold\">{company ? company : userCompany} </ProfileTextXs>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\">\r\n                        <MainPageIconContainer marginRight=\"0.6rem\" borderRadius=\"0%\" background=\"#eee\">\r\n                            <MainPageIcon width=\"2rem\" height=\"2rem\" src=\"../../assets/icons/education-icon.png\" />\r\n                        </MainPageIconContainer>\r\n                        <ProfileTextXs fontWeight=\"bold\">{education ? education : userEducation} </ProfileTextXs>\r\n                    </Flex>\r\n                </Flex>\r\n            </Columns.Column>\r\n        </Columns>\r\n    );\r\n};\r\n",{"ruleId":"235","severity":1,"message":"236","line":19,"column":28,"nodeType":"237","messageId":"238","endLine":19,"endColumn":31,"suggestions":"239"},{"ruleId":"235","severity":1,"message":"236","line":21,"column":25,"nodeType":"237","messageId":"238","endLine":21,"endColumn":28,"suggestions":"240"},{"ruleId":"235","severity":1,"message":"236","line":17,"column":35,"nodeType":"237","messageId":"238","endLine":17,"endColumn":38,"suggestions":"241"},{"ruleId":"235","severity":1,"message":"236","line":49,"column":47,"nodeType":"237","messageId":"238","endLine":49,"endColumn":50,"suggestions":"242"},{"ruleId":"235","severity":1,"message":"236","line":49,"column":59,"nodeType":"237","messageId":"238","endLine":49,"endColumn":62,"suggestions":"243"},{"ruleId":"235","severity":1,"message":"236","line":5,"column":11,"nodeType":"237","messageId":"238","endLine":5,"endColumn":14,"suggestions":"244"},{"ruleId":"235","severity":1,"message":"236","line":6,"column":29,"nodeType":"237","messageId":"238","endLine":6,"endColumn":32,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":10,"column":15,"nodeType":"248","messageId":"249","endLine":10,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":17,"column":38,"nodeType":"237","messageId":"238","endLine":17,"endColumn":41,"suggestions":"250"},{"ruleId":"235","severity":1,"message":"236","line":24,"column":37,"nodeType":"237","messageId":"238","endLine":24,"endColumn":40,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":28,"column":23,"nodeType":"254","messageId":"255","endLine":28,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":39,"column":37,"nodeType":"254","messageId":"255","endLine":39,"endColumn":79},{"ruleId":"252","severity":1,"message":"256","line":39,"column":44,"nodeType":"248","messageId":"257","endLine":39,"endColumn":53},{"ruleId":"235","severity":1,"message":"236","line":39,"column":50,"nodeType":"237","messageId":"238","endLine":39,"endColumn":53,"suggestions":"258"},{"ruleId":"252","severity":1,"message":"259","line":39,"column":55,"nodeType":"248","messageId":"257","endLine":39,"endColumn":75},{"ruleId":"235","severity":1,"message":"236","line":39,"column":72,"nodeType":"237","messageId":"238","endLine":39,"endColumn":75,"suggestions":"260"},{"ruleId":"252","severity":1,"message":"253","line":68,"column":31,"nodeType":"254","messageId":"255","endLine":68,"endColumn":73},{"ruleId":"252","severity":1,"message":"256","line":68,"column":38,"nodeType":"248","messageId":"257","endLine":68,"endColumn":47},{"ruleId":"235","severity":1,"message":"236","line":68,"column":44,"nodeType":"237","messageId":"238","endLine":68,"endColumn":47,"suggestions":"261"},{"ruleId":"252","severity":1,"message":"259","line":68,"column":49,"nodeType":"248","messageId":"257","endLine":68,"endColumn":69},{"ruleId":"235","severity":1,"message":"236","line":68,"column":66,"nodeType":"237","messageId":"238","endLine":68,"endColumn":69,"suggestions":"262"},{"ruleId":"235","severity":1,"message":"236","line":82,"column":37,"nodeType":"237","messageId":"238","endLine":82,"endColumn":40,"suggestions":"263"},{"ruleId":"235","severity":1,"message":"236","line":105,"column":64,"nodeType":"237","messageId":"238","endLine":105,"endColumn":67,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"236","line":107,"column":40,"nodeType":"237","messageId":"238","endLine":107,"endColumn":43,"suggestions":"265"},{"ruleId":"235","severity":1,"message":"236","line":108,"column":36,"nodeType":"237","messageId":"238","endLine":108,"endColumn":39,"suggestions":"266"},{"ruleId":"235","severity":1,"message":"236","line":12,"column":35,"nodeType":"237","messageId":"238","endLine":12,"endColumn":38,"suggestions":"267"},{"ruleId":"235","severity":1,"message":"236","line":9,"column":35,"nodeType":"237","messageId":"238","endLine":9,"endColumn":38,"suggestions":"268"},{"ruleId":"235","severity":1,"message":"236","line":11,"column":31,"nodeType":"237","messageId":"238","endLine":11,"endColumn":34,"suggestions":"269"},{"ruleId":"235","severity":1,"message":"236","line":34,"column":40,"nodeType":"237","messageId":"238","endLine":34,"endColumn":43,"suggestions":"270"},{"ruleId":"235","severity":1,"message":"236","line":35,"column":65,"nodeType":"237","messageId":"238","endLine":35,"endColumn":68,"suggestions":"271"},{"ruleId":"235","severity":1,"message":"236","line":35,"column":77,"nodeType":"237","messageId":"238","endLine":35,"endColumn":80,"suggestions":"272"},{"ruleId":"235","severity":1,"message":"236","line":35,"column":92,"nodeType":"237","messageId":"238","endLine":35,"endColumn":95,"suggestions":"273"},{"ruleId":"235","severity":1,"message":"236","line":50,"column":37,"nodeType":"237","messageId":"238","endLine":50,"endColumn":40,"suggestions":"274"},{"ruleId":"235","severity":1,"message":"236","line":86,"column":43,"nodeType":"237","messageId":"238","endLine":86,"endColumn":46,"suggestions":"275"},{"ruleId":"235","severity":1,"message":"236","line":95,"column":47,"nodeType":"237","messageId":"238","endLine":95,"endColumn":50,"suggestions":"276"},{"ruleId":"235","severity":1,"message":"236","line":103,"column":47,"nodeType":"237","messageId":"238","endLine":103,"endColumn":50,"suggestions":"277"},{"ruleId":"235","severity":1,"message":"236","line":113,"column":43,"nodeType":"237","messageId":"238","endLine":113,"endColumn":46,"suggestions":"278"},{"ruleId":"235","severity":1,"message":"236","line":122,"column":43,"nodeType":"237","messageId":"238","endLine":122,"endColumn":46,"suggestions":"279"},{"ruleId":"235","severity":1,"message":"236","line":10,"column":38,"nodeType":"237","messageId":"238","endLine":10,"endColumn":41,"suggestions":"280"},{"ruleId":"235","severity":1,"message":"236","line":14,"column":40,"nodeType":"237","messageId":"238","endLine":14,"endColumn":43,"suggestions":"281"},{"ruleId":"235","severity":1,"message":"236","line":15,"column":37,"nodeType":"237","messageId":"238","endLine":15,"endColumn":40,"suggestions":"282"},{"ruleId":"235","severity":1,"message":"236","line":21,"column":36,"nodeType":"237","messageId":"238","endLine":21,"endColumn":39,"suggestions":"283"},{"ruleId":"235","severity":1,"message":"236","line":61,"column":43,"nodeType":"237","messageId":"238","endLine":61,"endColumn":46,"suggestions":"284"},{"ruleId":"235","severity":1,"message":"236","line":10,"column":31,"nodeType":"237","messageId":"238","endLine":10,"endColumn":34,"suggestions":"285"},{"ruleId":"235","severity":1,"message":"236","line":25,"column":40,"nodeType":"237","messageId":"238","endLine":25,"endColumn":43,"suggestions":"286"},{"ruleId":"235","severity":1,"message":"236","line":26,"column":55,"nodeType":"237","messageId":"238","endLine":26,"endColumn":58,"suggestions":"287"},{"ruleId":"235","severity":1,"message":"236","line":26,"column":67,"nodeType":"237","messageId":"238","endLine":26,"endColumn":70,"suggestions":"288"},{"ruleId":"235","severity":1,"message":"236","line":26,"column":82,"nodeType":"237","messageId":"238","endLine":26,"endColumn":85,"suggestions":"289"},{"ruleId":"235","severity":1,"message":"236","line":33,"column":37,"nodeType":"237","messageId":"238","endLine":33,"endColumn":40,"suggestions":"290"},{"ruleId":"235","severity":1,"message":"236","line":62,"column":43,"nodeType":"237","messageId":"238","endLine":62,"endColumn":46,"suggestions":"291"},{"ruleId":"235","severity":1,"message":"236","line":70,"column":43,"nodeType":"237","messageId":"238","endLine":70,"endColumn":46,"suggestions":"292"},{"ruleId":"246","severity":1,"message":"293","line":2,"column":73,"nodeType":"248","messageId":"249","endLine":2,"endColumn":78},{"ruleId":"235","severity":1,"message":"236","line":68,"column":39,"nodeType":"237","messageId":"238","endLine":68,"endColumn":42,"suggestions":"294"},{"ruleId":"235","severity":1,"message":"236","line":100,"column":36,"nodeType":"237","messageId":"238","endLine":100,"endColumn":39,"suggestions":"295"},{"ruleId":"235","severity":1,"message":"236","line":109,"column":23,"nodeType":"237","messageId":"238","endLine":109,"endColumn":26,"suggestions":"296"},{"ruleId":"235","severity":1,"message":"236","line":31,"column":39,"nodeType":"237","messageId":"238","endLine":31,"endColumn":42,"suggestions":"297"},{"ruleId":"235","severity":1,"message":"236","line":40,"column":23,"nodeType":"237","messageId":"238","endLine":40,"endColumn":26,"suggestions":"298"},{"ruleId":"246","severity":1,"message":"299","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":25},{"ruleId":"252","severity":1,"message":"300","line":9,"column":33,"nodeType":"301","messageId":"302","endLine":9,"endColumn":46},{"ruleId":"235","severity":1,"message":"236","line":9,"column":43,"nodeType":"237","messageId":"238","endLine":9,"endColumn":46,"suggestions":"303"},{"ruleId":"235","severity":1,"message":"236","line":11,"column":40,"nodeType":"237","messageId":"238","endLine":11,"endColumn":43,"suggestions":"304"},{"ruleId":"235","severity":1,"message":"236","line":26,"column":8,"nodeType":"237","messageId":"238","endLine":26,"endColumn":11,"suggestions":"305"},{"ruleId":"235","severity":1,"message":"236","line":19,"column":41,"nodeType":"237","messageId":"238","endLine":19,"endColumn":44,"suggestions":"306"},{"ruleId":"235","severity":1,"message":"236","line":28,"column":43,"nodeType":"237","messageId":"238","endLine":28,"endColumn":46,"suggestions":"307"},{"ruleId":"235","severity":1,"message":"236","line":28,"column":55,"nodeType":"237","messageId":"238","endLine":28,"endColumn":58,"suggestions":"308"},{"ruleId":"235","severity":1,"message":"236","line":66,"column":46,"nodeType":"237","messageId":"238","endLine":66,"endColumn":49,"suggestions":"309"},{"ruleId":"235","severity":1,"message":"236","line":66,"column":58,"nodeType":"237","messageId":"238","endLine":66,"endColumn":61,"suggestions":"310"},{"ruleId":"246","severity":1,"message":"299","line":6,"column":5,"nodeType":"248","messageId":"249","endLine":6,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":38,"column":40,"nodeType":"237","messageId":"238","endLine":38,"endColumn":43,"suggestions":"311"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["312","313"],["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],"@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar",["326","327"],["328","329"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","anyTypedArg",["330","331"],"Argument 'additionalData' should be typed with a non-any type.",["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],["386","387"],["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],"'Alert' is defined but never used.",["398","399"],["400","401"],["402","403"],["404","405"],["406","407"],"'ProfileEditLink' is defined but never used.","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],["420","421"],["422","423"],["424","425"],{"messageId":"426","fix":"427","desc":"428"},{"messageId":"429","fix":"430","desc":"431"},{"messageId":"426","fix":"432","desc":"428"},{"messageId":"429","fix":"433","desc":"431"},{"messageId":"426","fix":"434","desc":"428"},{"messageId":"429","fix":"435","desc":"431"},{"messageId":"426","fix":"436","desc":"428"},{"messageId":"429","fix":"437","desc":"431"},{"messageId":"426","fix":"438","desc":"428"},{"messageId":"429","fix":"439","desc":"431"},{"messageId":"426","fix":"440","desc":"428"},{"messageId":"429","fix":"441","desc":"431"},{"messageId":"426","fix":"442","desc":"428"},{"messageId":"429","fix":"443","desc":"431"},{"messageId":"426","fix":"444","desc":"428"},{"messageId":"429","fix":"445","desc":"431"},{"messageId":"426","fix":"446","desc":"428"},{"messageId":"429","fix":"447","desc":"431"},{"messageId":"426","fix":"448","desc":"428"},{"messageId":"429","fix":"449","desc":"431"},{"messageId":"426","fix":"450","desc":"428"},{"messageId":"429","fix":"451","desc":"431"},{"messageId":"426","fix":"452","desc":"428"},{"messageId":"429","fix":"453","desc":"431"},{"messageId":"426","fix":"454","desc":"428"},{"messageId":"429","fix":"455","desc":"431"},{"messageId":"426","fix":"456","desc":"428"},{"messageId":"429","fix":"457","desc":"431"},{"messageId":"426","fix":"458","desc":"428"},{"messageId":"429","fix":"459","desc":"431"},{"messageId":"426","fix":"460","desc":"428"},{"messageId":"429","fix":"461","desc":"431"},{"messageId":"426","fix":"462","desc":"428"},{"messageId":"429","fix":"463","desc":"431"},{"messageId":"426","fix":"464","desc":"428"},{"messageId":"429","fix":"465","desc":"431"},{"messageId":"426","fix":"466","desc":"428"},{"messageId":"429","fix":"467","desc":"431"},{"messageId":"426","fix":"468","desc":"428"},{"messageId":"429","fix":"469","desc":"431"},{"messageId":"426","fix":"470","desc":"428"},{"messageId":"429","fix":"471","desc":"431"},{"messageId":"426","fix":"472","desc":"428"},{"messageId":"429","fix":"473","desc":"431"},{"messageId":"426","fix":"474","desc":"428"},{"messageId":"429","fix":"475","desc":"431"},{"messageId":"426","fix":"476","desc":"428"},{"messageId":"429","fix":"477","desc":"431"},{"messageId":"426","fix":"478","desc":"428"},{"messageId":"429","fix":"479","desc":"431"},{"messageId":"426","fix":"480","desc":"428"},{"messageId":"429","fix":"481","desc":"431"},{"messageId":"426","fix":"482","desc":"428"},{"messageId":"429","fix":"483","desc":"431"},{"messageId":"426","fix":"484","desc":"428"},{"messageId":"429","fix":"485","desc":"431"},{"messageId":"426","fix":"486","desc":"428"},{"messageId":"429","fix":"487","desc":"431"},{"messageId":"426","fix":"488","desc":"428"},{"messageId":"429","fix":"489","desc":"431"},{"messageId":"426","fix":"490","desc":"428"},{"messageId":"429","fix":"491","desc":"431"},{"messageId":"426","fix":"492","desc":"428"},{"messageId":"429","fix":"493","desc":"431"},{"messageId":"426","fix":"494","desc":"428"},{"messageId":"429","fix":"495","desc":"431"},{"messageId":"426","fix":"496","desc":"428"},{"messageId":"429","fix":"497","desc":"431"},{"messageId":"426","fix":"498","desc":"428"},{"messageId":"429","fix":"499","desc":"431"},{"messageId":"426","fix":"500","desc":"428"},{"messageId":"429","fix":"501","desc":"431"},{"messageId":"426","fix":"502","desc":"428"},{"messageId":"429","fix":"503","desc":"431"},{"messageId":"426","fix":"504","desc":"428"},{"messageId":"429","fix":"505","desc":"431"},{"messageId":"426","fix":"506","desc":"428"},{"messageId":"429","fix":"507","desc":"431"},{"messageId":"426","fix":"508","desc":"428"},{"messageId":"429","fix":"509","desc":"431"},{"messageId":"426","fix":"510","desc":"428"},{"messageId":"429","fix":"511","desc":"431"},{"messageId":"426","fix":"512","desc":"428"},{"messageId":"429","fix":"513","desc":"431"},{"messageId":"426","fix":"514","desc":"428"},{"messageId":"429","fix":"515","desc":"431"},{"messageId":"426","fix":"516","desc":"428"},{"messageId":"429","fix":"517","desc":"431"},{"messageId":"426","fix":"518","desc":"428"},{"messageId":"429","fix":"519","desc":"431"},{"messageId":"426","fix":"520","desc":"428"},{"messageId":"429","fix":"521","desc":"431"},{"messageId":"426","fix":"522","desc":"428"},{"messageId":"429","fix":"523","desc":"431"},{"messageId":"426","fix":"524","desc":"428"},{"messageId":"429","fix":"525","desc":"431"},{"messageId":"426","fix":"526","desc":"428"},{"messageId":"429","fix":"527","desc":"431"},{"messageId":"426","fix":"528","desc":"428"},{"messageId":"429","fix":"529","desc":"431"},{"messageId":"426","fix":"530","desc":"428"},{"messageId":"429","fix":"531","desc":"431"},{"messageId":"426","fix":"532","desc":"428"},{"messageId":"429","fix":"533","desc":"431"},{"messageId":"426","fix":"534","desc":"428"},{"messageId":"429","fix":"535","desc":"431"},{"messageId":"426","fix":"536","desc":"428"},{"messageId":"429","fix":"537","desc":"431"},{"messageId":"426","fix":"538","desc":"428"},{"messageId":"429","fix":"539","desc":"431"},{"messageId":"426","fix":"540","desc":"428"},{"messageId":"429","fix":"541","desc":"431"},{"messageId":"426","fix":"542","desc":"428"},{"messageId":"429","fix":"543","desc":"431"},"suggestUnknown",{"range":"544","text":"545"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"544","text":"546"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"547","text":"545"},{"range":"547","text":"546"},{"range":"548","text":"545"},{"range":"548","text":"546"},{"range":"549","text":"545"},{"range":"549","text":"546"},{"range":"550","text":"545"},{"range":"550","text":"546"},{"range":"551","text":"545"},{"range":"551","text":"546"},{"range":"552","text":"545"},{"range":"552","text":"546"},{"range":"553","text":"545"},{"range":"553","text":"546"},{"range":"554","text":"545"},{"range":"554","text":"546"},{"range":"555","text":"545"},{"range":"555","text":"546"},{"range":"556","text":"545"},{"range":"556","text":"546"},{"range":"557","text":"545"},{"range":"557","text":"546"},{"range":"558","text":"545"},{"range":"558","text":"546"},{"range":"559","text":"545"},{"range":"559","text":"546"},{"range":"560","text":"545"},{"range":"560","text":"546"},{"range":"561","text":"545"},{"range":"561","text":"546"},{"range":"562","text":"545"},{"range":"562","text":"546"},{"range":"563","text":"545"},{"range":"563","text":"546"},{"range":"564","text":"545"},{"range":"564","text":"546"},{"range":"565","text":"545"},{"range":"565","text":"546"},{"range":"566","text":"545"},{"range":"566","text":"546"},{"range":"567","text":"545"},{"range":"567","text":"546"},{"range":"568","text":"545"},{"range":"568","text":"546"},{"range":"569","text":"545"},{"range":"569","text":"546"},{"range":"570","text":"545"},{"range":"570","text":"546"},{"range":"571","text":"545"},{"range":"571","text":"546"},{"range":"572","text":"545"},{"range":"572","text":"546"},{"range":"573","text":"545"},{"range":"573","text":"546"},{"range":"574","text":"545"},{"range":"574","text":"546"},{"range":"575","text":"545"},{"range":"575","text":"546"},{"range":"576","text":"545"},{"range":"576","text":"546"},{"range":"577","text":"545"},{"range":"577","text":"546"},{"range":"578","text":"545"},{"range":"578","text":"546"},{"range":"579","text":"545"},{"range":"579","text":"546"},{"range":"580","text":"545"},{"range":"580","text":"546"},{"range":"581","text":"545"},{"range":"581","text":"546"},{"range":"582","text":"545"},{"range":"582","text":"546"},{"range":"583","text":"545"},{"range":"583","text":"546"},{"range":"584","text":"545"},{"range":"584","text":"546"},{"range":"585","text":"545"},{"range":"585","text":"546"},{"range":"586","text":"545"},{"range":"586","text":"546"},{"range":"587","text":"545"},{"range":"587","text":"546"},{"range":"588","text":"545"},{"range":"588","text":"546"},{"range":"589","text":"545"},{"range":"589","text":"546"},{"range":"590","text":"545"},{"range":"590","text":"546"},{"range":"591","text":"545"},{"range":"591","text":"546"},{"range":"592","text":"545"},{"range":"592","text":"546"},{"range":"593","text":"545"},{"range":"593","text":"546"},{"range":"594","text":"545"},{"range":"594","text":"546"},{"range":"595","text":"545"},{"range":"595","text":"546"},{"range":"596","text":"545"},{"range":"596","text":"546"},{"range":"597","text":"545"},{"range":"597","text":"546"},{"range":"598","text":"545"},{"range":"598","text":"546"},{"range":"599","text":"545"},{"range":"599","text":"546"},{"range":"600","text":"545"},{"range":"600","text":"546"},{"range":"601","text":"545"},{"range":"601","text":"546"},{"range":"602","text":"545"},{"range":"602","text":"546"},[679,682],"unknown","never",[793,796],[481,484],[2249,2252],[2261,2264],[165,168],[199,202],[548,551],[899,902],[1289,1292],[1311,1314],[2156,2159],[2178,2181],[2534,2537],[2752,2755],[2844,2847],[2934,2937],[435,438],[392,395],[486,489],[1163,1166],[1240,1243],[1252,1255],[1267,1270],[1774,1777],[3161,3164],[3578,3581],[3960,3963],[4380,4383],[4775,4778],[426,429],[741,744],[790,793],[976,979],[2552,2555],[430,433],[856,859],[923,926],[935,938],[950,953],[1275,1278],[2418,2421],[2770,2773],[3100,3103],[3980,3983],[4318,4321],[1143,1146],[1541,1544],[465,468],[565,568],[928,931],[558,561],[941,944],[953,956],[2996,2999],[3008,3011],[850,853]]