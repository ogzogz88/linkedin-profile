[{"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx":"1","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts":"2","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx":"3","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx":"5","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx":"6","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx":"7","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx":"8","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx":"9","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx":"10","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx":"11","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx":"12","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx":"13","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx":"14","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx":"15","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx":"16","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx":"17","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx":"18","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx":"19","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx":"20","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx":"21","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx":"22","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx":"23","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx":"24","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx":"25","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx":"26","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx":"27","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx":"28","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx":"29","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImageForm.tsx":"30","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx":"31","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx":"32","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx":"33","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx":"34","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightData.tsx":"35","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerData.tsx":"36","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\Footer.tsx":"37","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainDivider.tsx":"38","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterElements.tsx":"39","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\i18n\\config.ts":"40","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftImg.tsx":"41","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftIntro.tsx":"42"},{"size":564,"mtime":1610030030104,"results":"43","hashOfConfig":"44"},{"size":545,"mtime":1608486025945,"results":"45","hashOfConfig":"44"},{"size":311,"mtime":1609011530055,"results":"46","hashOfConfig":"44"},{"size":3663,"mtime":1610208703087,"results":"47","hashOfConfig":"44"},{"size":1301,"mtime":1609788427662,"results":"48","hashOfConfig":"44"},{"size":752,"mtime":1609790793814,"results":"49","hashOfConfig":"44"},{"size":495,"mtime":1609012165540,"results":"50","hashOfConfig":"44"},{"size":3271,"mtime":1610291041457,"results":"51","hashOfConfig":"44"},{"size":760,"mtime":1609870031950,"results":"52","hashOfConfig":"44"},{"size":626,"mtime":1608857185535,"results":"53","hashOfConfig":"44"},{"size":1847,"mtime":1609892491424,"results":"54","hashOfConfig":"44"},{"size":1297,"mtime":1609595486719,"results":"55","hashOfConfig":"44"},{"size":3233,"mtime":1609374315168,"results":"56","hashOfConfig":"44"},{"size":212,"mtime":1609595768798,"results":"57","hashOfConfig":"44"},{"size":5871,"mtime":1610227243403,"results":"58","hashOfConfig":"44"},{"size":2148,"mtime":1609852491076,"results":"59","hashOfConfig":"44"},{"size":1451,"mtime":1610038932978,"results":"60","hashOfConfig":"44"},{"size":640,"mtime":1609288487918,"results":"61","hashOfConfig":"44"},{"size":1414,"mtime":1609783874449,"results":"62","hashOfConfig":"44"},{"size":1570,"mtime":1609783077972,"results":"63","hashOfConfig":"44"},{"size":944,"mtime":1610277603975,"results":"64","hashOfConfig":"44"},{"size":1452,"mtime":1609595733036,"results":"65","hashOfConfig":"44"},{"size":5930,"mtime":1610281980363,"results":"66","hashOfConfig":"44"},{"size":3408,"mtime":1610282584631,"results":"67","hashOfConfig":"44"},{"size":4099,"mtime":1610280988091,"results":"68","hashOfConfig":"44"},{"size":848,"mtime":1610278816204,"results":"69","hashOfConfig":"44"},{"size":7893,"mtime":1610038964649,"results":"70","hashOfConfig":"44"},{"size":403,"mtime":1609607866856,"results":"71","hashOfConfig":"44"},{"size":3608,"mtime":1609609115733,"results":"72","hashOfConfig":"44"},{"size":3789,"mtime":1609609898363,"results":"73","hashOfConfig":"44"},{"size":2503,"mtime":1610283470132,"results":"74","hashOfConfig":"44"},{"size":3320,"mtime":1609886883470,"results":"75","hashOfConfig":"44"},{"size":4715,"mtime":1610209447949,"results":"76","hashOfConfig":"44"},{"size":3729,"mtime":1609887661933,"results":"77","hashOfConfig":"44"},{"size":1743,"mtime":1609848889840,"results":"78","hashOfConfig":"44"},{"size":1405,"mtime":1609852341237,"results":"79","hashOfConfig":"44"},{"size":4215,"mtime":1610208769907,"results":"80","hashOfConfig":"44"},{"size":556,"mtime":1609882164570,"results":"81","hashOfConfig":"44"},{"size":1675,"mtime":1610206728856,"results":"82","hashOfConfig":"44"},{"size":1991,"mtime":1610207358976,"results":"83","hashOfConfig":"44"},{"size":1204,"mtime":1610283105311,"results":"84","hashOfConfig":"44"},{"size":4021,"mtime":1610283304139,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"15bsiaf",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx",["183","184"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { TopNav, Image, Input, Flex, } from 'bumbag';\r\nimport { Navlink, NavDivider } from './Navlink';\r\nimport NavText from './NavText';\r\nimport { UserPopover } from './UserPopover';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { NavImage } from './UserPopoverElements'\r\nimport { DarkMode } from '../DarkMode';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\n\r\nexport function Navbar(): JSX.Element {\r\n    const { t, i18n } = useTranslation();\r\n    const navData = i18n.t<any>('NavData', { returnObjects: true });\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL }: any = user;\r\n    return (\r\n        <TopNav margin={'0 2rem'}>\r\n            <TopNav.Section>\r\n                <Navlink key={10} href=\"/\" style={{ marginLeft: '0' }}>\r\n                    <Image src=\"/logo.png\" height=\"35px\" />\r\n                </Navlink>\r\n                <Flex style={{ alignItems: 'center' }}>\r\n                    <Input\r\n                        before={<Input.Icon icon=\"solid-search\" />}\r\n                        placeholder={t('placeholder')}\r\n                        style={{ marginLeft: '5px' }}\r\n                        size=\"small\"\r\n                        width=\"250px\"\r\n                        marginRight=\"6rem\"\r\n                    />\r\n                </Flex>\r\n            </TopNav.Section>\r\n            <TopNav.Section >\r\n                {navData?.map((navElement: { navHref: string; navIcon: string; navText: React.ReactNode; }, index: number) => {\r\n                    return (\r\n                        <>\r\n                            <Navlink\r\n                                key={index}\r\n                                href={navElement.navHref}\r\n                                style={\r\n                                    navElement.navIcon === 'user' ?\r\n                                        { paddingRight: '1rem' } :\r\n                                        navElement.navIcon === '' ?\r\n                                            {\r\n                                                color: '#5d3b09',\r\n                                                fontSize: '0.75rem',\r\n                                                fontWeight: 'lighter',\r\n                                                width: '90px',\r\n                                                textAlign: 'center',\r\n                                            } :\r\n                                            undefined\r\n                                }\r\n                            >\r\n                                {navElement.navIcon !== 'user' && <NavIcon aria-label=\"Navlcon\" icon={`solid-${navElement.navIcon}`} />}\r\n                                {navElement.navIcon === 'user' && <NavImage src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                    alt=\"Profile Picture\" width={'30px'} />}\r\n\r\n                                <Flex>\r\n                                    <NavText>{navElement.navText}</NavText>\r\n                                    {navElement.navIcon === 'user' && <UserPopover />}\r\n                                    {navElement.navIcon === 'th' && <SideDrawer />}\r\n                                </Flex>\r\n\r\n                            </Navlink>\r\n                            {navElement.navIcon === 'user' && <NavDivider />}\r\n                        </>\r\n                    );\r\n                })}\r\n                <DarkMode />\r\n            </TopNav.Section>\r\n        </TopNav >\r\n    );\r\n}\r\n\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx",["185","186","187"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx",["188"],"import React, { useState } from 'react';\r\nimport { Switch, useColorMode } from 'bumbag';\r\n\r\nexport function DarkMode(): JSX.Element {\r\n    const [checked, setChecked] = useState(true);\r\n    const { colorMode, setColorMode } = useColorMode();\r\n    const handleChange = (e: any) => {\r\n        setChecked(e.target.checked);\r\n        colorMode === 'default' ? setColorMode('dark') : setColorMode('default');\r\n    };\r\n    return (\r\n        <Switch\r\n            colorMode={colorMode}\r\n            style={{ marginLeft: '0.5rem' }}\r\n            checked={checked}\r\n            onChange={(e) => handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx",["189","190","191","192"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\n\r\ntype UserContextType = {\r\n    user: any;\r\n    setUser: React.Dispatch<any>;\r\n};\r\nexport const UserContext = createContext<UserContextType>({\r\n    user: null,\r\n    setUser: (user) => console.warn('no user provider now'),\r\n});\r\n\r\ninterface ProviderProps {\r\n    children: React.ReactNode;\r\n}\r\nexport function UserProvider(props: React.PropsWithChildren<ProviderProps>): JSX.Element {\r\n    const [user, setUser] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        setUser('loading');\r\n        auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                if (auth?.currentUser?.providerData[0]?.providerId === 'google.com') {\r\n                    setUser(userAuth);\r\n                } else {\r\n                    const user = await generateUserDocument(userAuth);\r\n                    setUser(user);\r\n                }\r\n            } else {\r\n                setUser(null);\r\n            }\r\n            // console.log('provider');\r\n            // console.log(auth?.currentUser?.providerData[0]?.providerId);\r\n        });\r\n    }, []);\r\n    return <UserContext.Provider value={{ user, setUser }}>{props.children}</UserContext.Provider>;\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCM7nvbFKElRyhTtAbCWmz5eSHWvG6_ex4',\r\n    authDomain: 'linkedin-profile-358a8.firebaseapp.com',\r\n    projectId: 'linkedin-profile-358a8',\r\n    storageBucket: 'linkedin-profile-358a8.appspot.com',\r\n    messagingSenderId: '674279447289',\r\n    appId: '1:674279447289:web:63424a18728b9ff403e028',\r\n    measurementId: 'G-XZNCK36PGF',\r\n};\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const storage = firebaseApp.storage();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// signin for google Sign In\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = (): any => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n//signout for google Sign Out\r\nexport const logOut = () => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            console.log('logged out');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n};\r\n\r\n// email and password login implementation\r\nexport const generateUserDocument = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email, displayName, photoURL } = user;\r\n\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                photoURL,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    } else {\r\n        try {\r\n            await userRef.update({\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error updating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n//update user data\r\nexport const updateUserData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\n//update image data\r\nexport const updateImageData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n    }\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx",["211","212","213"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { Text, Box, Popover, Link, Divider, Flex, Button, Stack, Set, Image, applyTheme } from 'bumbag';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { logOut } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const NavText = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'lighter',\r\n            fontSize: '14px',\r\n            display: 'block',\r\n            lineHeight: '2rem',\r\n        },\r\n    },\r\n});\r\nexport const NavHeader = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'bold',\r\n            display: 'block',\r\n            lineHeight: '1.25rem',\r\n            marginTop: '0.5rem',\r\n        },\r\n    },\r\n});\r\nexport const NavButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'light',\r\n            width: '100%',\r\n            fontSize: '14px',\r\n            minHeight: '1rem',\r\n            marginBottom: '1rem',\r\n            borderRadius: '1rem',\r\n            ':focus': {\r\n                boxShadow: 'none!important',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const NavImage = applyTheme(Image, {\r\n    styles: {\r\n        base: {\r\n            borderRadius: '50%',\r\n            width: '50px',\r\n        },\r\n    },\r\n});\r\nexport const PageLink = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: '#545454',\r\n            textDecoration: 'none',\r\n            margin: '0px',\r\n            ':hover': {\r\n                textDecoration: 'none',\r\n                color: '#000',\r\n            },\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const CustomPopover = applyTheme(Popover, {\r\n    styles: {\r\n        base: {\r\n            padding: '0px',\r\n            width: '270px',\r\n            ':focus': {\r\n                color: '#545454',\r\n            },\r\n            ':focus-within': {\r\n                color: '#545454',\r\n            },\r\n            ':hover': {\r\n                color: '#545454',\r\n            },\r\n            ':active': {\r\n                color: '#545454',\r\n            },\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const PopoverContent: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL, name, lastName, displayName, headline }: any = user;\r\n    const { i18n } = useTranslation();\r\n    const mainProfileLeftData = i18n.t<any>('mainProfileLeftData', { returnObjects: true });\r\n    const userPopoverData = i18n.t<any>('userPopoverData', { returnObjects: true })\r\n    const {\r\n        userName,\r\n        userLastName,\r\n        userHeadline\r\n    } = mainProfileLeftData[0].basic;\r\n    const {\r\n        viewProfile,\r\n        account,\r\n        settings,\r\n        help,\r\n        language,\r\n        manage,\r\n        posts,\r\n        jobPosting,\r\n        signout } = userPopoverData;\r\n    // display name in necessary when user only sgin in with google\r\n    let nameLastName;\r\n    if (name && lastName) {\r\n        nameLastName = `${name} ${lastName}`;\r\n    } else if (displayName) {\r\n        nameLastName = displayName;\r\n    }\r\n    return (\r\n        <Box padding={'0.5rem 0'}>\r\n            <Stack>\r\n                <Box>\r\n                    <Flex alignX=\"center\" alignY=\"center\" style={{ position: 'relative' }}>\r\n                        <Box style={{ position: 'absolute', top: 0, left: 0 }}>\r\n                            <NavImage\r\n                                src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                alt=\"Profile Picture\"\r\n                            />\r\n                        </Box>\r\n                        <Box style={{ marginLeft: '3.5rem', fontSize: '1rem' }}>\r\n                            <NavHeader style={{ marginTop: '0', textTransform: 'capitalize' }}>\r\n                                {nameLastName ? nameLastName : `${userName} ${userLastName}`}\r\n                            </NavHeader>\r\n                            <NavText style={{ lineHeight: '1rem' }}>{headline ? headline : userHeadline}</NavText>\r\n                        </Box>\r\n                    </Flex>\r\n                </Box>\r\n                <Set>\r\n                    <NavButton variant=\"outlined\" palette=\"primary\" width=\"100%\">\r\n                        {viewProfile}                    </NavButton>\r\n                </Set>\r\n            </Stack>\r\n            <Text.Block>\r\n                <Divider />\r\n                <NavHeader>{account}</NavHeader>\r\n                <NavText>{settings}</NavText>\r\n                <NavText>{help}</NavText>\r\n                <NavText>{language}</NavText>\r\n                <Divider />\r\n                <NavHeader fontWeight=\"bold\">{manage}</NavHeader>\r\n                <NavText>{posts}</NavText>\r\n                <NavText>{jobPosting}</NavText>\r\n                <Divider />\r\n                <PageLink fontWeight={'normal'} fontSize={'14px'} alignItems={'flex-start'} onClick={logOut} href='/'>{signout}</PageLink>\r\n            </Text.Block>\r\n        </Box>\r\n    );\r\n};\r\nexport const PopoverIcon: React.FC = () => {\r\n    return (\r\n        <NavIcon\r\n            aria-label=\"Navlcon\"\r\n            icon=\"solid-sort-down\"\r\n            style={{\r\n                margin: 0,\r\n                padding: 0,\r\n                width: '25px',\r\n                height: '20px',\r\n                position: 'relative',\r\n                top: '-5px',\r\n            }}\r\n        />\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx",["214","215","216","217","218","219","220","221","222","223","224"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx",["225","226","227","228","229"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx",["230","231","232","233","234","235","236","237"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx",["238","239"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Card, Button, FieldStack, InputField, Flex, applyTheme, Alert } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { ProfileImg, BackgroundImg, MainPageIconContainerSec } from '../profile/MainProfileLeftElements';\r\nimport { UpdateModalImage } from './UpdateModalImage';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\n\r\nconst ModalButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n    type: 'submit',\r\n});\r\ninterface Values {\r\n    name: string;\r\n    lastName: string;\r\n    headline: string;\r\n    company: string;\r\n    education: string;\r\n    country: string;\r\n    location: string;\r\n    industry: string;\r\n}\r\nconst UpdateModalIntroSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .min(2, 'Too short for your name! It must be at least 2 characters long.')\r\n        .max(50, 'Too long for your name! It must be at most 50 characters long.')\r\n        .required('Required'),\r\n    lastName: Yup.string()\r\n        .min(2, 'Too short for your last name! It must be at least 2 characters long.')\r\n        .max(50, 'Too long for your last name! It must be at most 50 characters long.')\r\n        .required('Required'),\r\n    headline: Yup.string()\r\n        .min(5, 'Too short for your headline! It must be at least 5 characters long.')\r\n        .max(250, 'Too long for your headline! It must be at most 250 characters long.')\r\n        .required('Required'),\r\n    company: Yup.string()\r\n        .min(2, 'Too short for your company! It must be at least 2 characters long.')\r\n        .max(150, 'Too long for your company! It must be at most 150 characters long.'),\r\n    education: Yup.string()\r\n        .min(2, 'Too short for your education! It must be at least 2 characters long.')\r\n        .max(250, 'Too long for your education! It must be at most 250 characters long.'),\r\n    country: Yup.string()\r\n        .min(2, 'Too short for your country! It must be at least 2 characters long.')\r\n        .max(100, 'Too long for your country! It must be at most 100 characters long.')\r\n        .required('Required'),\r\n    location: Yup.string()\r\n        .min(2, 'Too short for your location! It must be at least 2 characters long.')\r\n        .max(100, 'Too long for your location! It must be at most 100 characters long.'),\r\n    industry: Yup.string()\r\n        .min(2, 'Too short for your industry! It must be at least 2 characters long.')\r\n        .max(250, 'Too long for your industry! It must be at most 250 characters long.')\r\n        .required('Required'),\r\n    // email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport const UpdateModalIntroForm: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL } = user;\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        name: '',\r\n        lastName: '',\r\n        headline: '',\r\n        company: '',\r\n        education: '',\r\n        country: '',\r\n        location: '',\r\n        industry: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalIntroSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Card\r\n                            style={{\r\n                                padding: 0,\r\n                                borderRadius: '0.5rem 05.rem 0 0',\r\n                                position: 'relative',\r\n                                marginBottom: '6rem',\r\n                                height: '170px',\r\n                            }}\r\n                        >\r\n                            <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" width={'100%'} />\r\n                            <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n                            <MainPageIconContainerSec\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    left: '7.5rem',\r\n                                    bottom: '-4rem',\r\n                                    background: '#fff',\r\n                                    boxShadow: '0 0 4px 0px #aaa',\r\n                                }}\r\n                            >\r\n                                <UpdateModalImage />\r\n                            </MainPageIconContainerSec>\r\n                        </Card>\r\n                        <FieldStack orientation=\"horizontal\">\r\n                            <Field component={InputField.Formik} name=\"name\" label=\"First name\" isRequired />\r\n                            <Field component={InputField.Formik} name=\"lastName\" label=\"Last name\" isRequired />\r\n                        </FieldStack>\r\n                        <Field component={InputField.Formik} name=\"headline\" label=\"Headline\" isRequired />\r\n                        <Field component={InputField.Formik} name=\"company\" label=\"Company\" />\r\n                        <Field component={InputField.Formik} name=\"education\" label=\"Education\" />\r\n                        <Field component={InputField.Formik} name=\"country\" label=\"Country\" isRequired />\r\n                        <Field component={InputField.Formik} name=\"location\" label=\"Location\" />\r\n                        <Field component={InputField.Formik} name=\"industry\" label=\"Industry\" isRequired />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your About Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update About info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx",["240"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Button, FieldStack, TextareaField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\n\r\ninterface Values {\r\n    about: string;\r\n}\r\nconst UpdateModalAboutSchema = Yup.object().shape({\r\n    about: Yup.string()\r\n        .min(10, 'Too short for your about section! It must be at least 10 characters long.')\r\n        .max(350, 'Too long for your about section! It must be at most 350 characters long.')\r\n        .required('Required'),\r\n});\r\nexport function UpdateModalAboutForm(): JSX.Element {\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        about: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalAboutSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field component={TextareaField.Formik} name=\"about\" label=\"Summary\" minHeight={'7rem'} />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your Intro Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update Intro info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImageForm.tsx",["241","242","243"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Button, FieldStack, InputField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateImageData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { storage } from '../../firebase';\r\nimport { UpdateMessage } from './UpdateMessage';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\ninterface Values {\r\n    photoURL: string;\r\n}\r\nexport function UpdateModalImageForm(): JSX.Element {\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n\r\n    const initialValues: Values = {\r\n        photoURL: '',\r\n    };\r\n    const onFileChange = async (e: any) => {\r\n        const file = e.target.files[0];\r\n        const storageRef = storage.ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateImageData(user, { photoURL: fileUrl });\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field\r\n                            component={InputField.Formik}\r\n                            name=\"photoURL\"\r\n                            label=\"Photo\"\r\n                            type={'file'}\r\n                            onChange={onFileChange}\r\n                        />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your photo.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update photo, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx",["244","245","246","247"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx",["248","249","250","251","252"],"import React from 'react';\r\nimport { Card, Box, Flex, Divider, List } from 'bumbag';\r\nimport {\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n    CardToolTip,\r\n    BackgroundImg,\r\n    BackgroundImgContainer,\r\n    ProfileImage,\r\n    IconContainer,\r\n    AlsoViewedTextContainer,\r\n} from './MainProfileRightElements';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function MainProfileRight(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const mainProfileRightData = i18n.t<any>('mainProfileRightData', { returnObjects: true });\r\n\r\n    const { textCard } = mainProfileRightData[0];\r\n    const { alsoViewed } = mainProfileRightData[1];\r\n    return (\r\n        <>\r\n            {/* Info card with two text/link */}\r\n            <Card marginBottom={'1.5rem'}>\r\n                <Flex flexDirection={'column'}>\r\n                    {textCard?.map((item: any, index: any) => {\r\n                        return (\r\n                            <>\r\n                                <Flex key={index.toString()} justifyContent={'space-between'}>\r\n                                    <ProfileTextSm>{item.text}</ProfileTextSm>\r\n                                    <CardToolTip\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            justifyContent: 'center',\r\n                                            cursor: 'pointer',\r\n                                            alignItems: 'center',\r\n                                            background: '#666666',\r\n                                            borderRadius: '50%',\r\n                                            width: '1rem',\r\n                                            height: '1rem',\r\n                                        }}\r\n                                        content={item.tooltip}\r\n                                        placement=\"bottom\"\r\n                                        fade\r\n                                    >\r\n                                        <ProfileTextXs color=\"#fff\">?</ProfileTextXs>\r\n                                    </CardToolTip>\r\n                                </Flex>\r\n                                {index === 0 && <Divider margin={'1rem 0'} />}\r\n                            </>\r\n                        );\r\n                    })}\r\n                </Flex>\r\n            </Card>\r\n            {/* advertisement card with image background */}\r\n            <BackgroundImgContainer marginBottom={'24px'}>\r\n                <BackgroundImg src=\"../../assets/photos/see-jobs.jpg\" />\r\n            </BackgroundImgContainer>\r\n            {/* people also viewed card */}\r\n            <Card>\r\n                <Box marginBottom={'1rem'}>\r\n                    <ProfileTextMd>{alsoViewed?.title}</ProfileTextMd>\r\n                </Box>\r\n                {alsoViewed?.data.map((item: any, index: any) => {\r\n                    return (\r\n                        <Flex key={index} justifyContent={'flex-start'} marginTop={'0.7rem'}>\r\n                            <ProfileImage src={item.imgSrc} alt=\"Also viewed profile image\" alignSelf={'top'} />\r\n                            <AlsoViewedTextContainer>\r\n                                <Flex flexDirection={'column'}>\r\n                                    <ProfileTextSm>{item.name}</ProfileTextSm>\r\n                                    <List\r\n                                        listStyleType=\"disc\"\r\n                                        listStylePosition=\"inside\"\r\n                                        fontWeight={'300'}\r\n                                        fontSize={'0.8rem'}\r\n                                    >\r\n                                        <List.Item fontSize={'0.5rem'}>\r\n                                            <ProfileTextSm fontWeight={300} marginLeft=\"-4px\">\r\n                                                {item.order}\r\n                                            </ProfileTextSm>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                    <ProfileTextSm fontWeight={'400'}>{item.headline}</ProfileTextSm>\r\n                                </Flex>\r\n                                <IconContainer>\r\n                                    <NavIcon aria-label=\"Navlcon\" icon={'solid-user'} />\r\n                                    <ProfileTextSm>+</ProfileTextSm>\r\n                                </IconContainer>\r\n                            </AlsoViewedTextContainer>\r\n                        </Flex>\r\n                    );\r\n                })}\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightData.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\Footer.tsx",["253","254","255","256","257","258","259","260"],"import React, { useState } from 'react';\r\nimport { Columns, Box, Flex, Image, DropdownMenu, Button } from 'bumbag';\r\nimport { FooterLinkSm, FooterLinkMd } from './FooterElements';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { LangItem } from './FooterElements';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport function Footer(): JSX.Element {\r\n    const { i18n } = useTranslation();\r\n    const footerData = i18n.t<any>('footerData', { returnObjects: true });\r\n    const { links, logoSrc, specialLinks } = footerData;\r\n    const languages: any = {\r\n        en: 'English',\r\n        tr: 'Türkçe',\r\n    };\r\n    const langData = [\r\n        { key: 'en', name: 'English' },\r\n        { key: 'tr', name: 'Turkish' },\r\n    ];\r\n    const localLng: any = localStorage.getItem('i18nextLng');\r\n    const initialLang = localLng ? localLng : 'en';\r\n    const [lang, setLang] = useState(initialLang);\r\n    const handleClick = (event: any) => {\r\n        const lang = event.currentTarget.dataset.value;\r\n        setLang(lang);\r\n        i18n.changeLanguage(lang);\r\n    };\r\n    return (\r\n        <Columns margin={'1rem 2rem 0'} paddingBottom={'2rem'}>\r\n            <Columns.Column spread={12} padding={'0'} marginBottom={'0.5rem'}>\r\n                <Flex>\r\n                    <Image style={{ width: '80px' }} src={logoSrc} />\r\n                </Flex>\r\n            </Columns.Column>\r\n            <Columns.Column spread={6} padding={'0'}>\r\n                <Flex flexWrap={'wrap'}>\r\n                    {links.map((link: any, index: any) => {\r\n                        return (\r\n                            <Box style={{ width: '170px', margin: '0.2rem 0' }} key={index}>\r\n                                <FooterLinkSm>{link}</FooterLinkSm>\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Flex>\r\n            </Columns.Column>\r\n            <Columns.Column spread={3} padding={'0'}>\r\n                {specialLinks.map((link: any, index: any) => {\r\n                    return (\r\n                        <Flex key={index} marginBottom={'0.8rem'}>\r\n                            <NavIcon\r\n                                aria-label=\"Footer navlcon\"\r\n                                icon={`solid-${link.navIcon}`}\r\n                                fontSize={'1.2rem'}\r\n                                marginRight={'0.3rem'}\r\n                            />\r\n                            <Flex flexDirection={'column'}>\r\n                                <FooterLinkMd>{link.title}</FooterLinkMd>\r\n                                <FooterLinkSm fontWeight={'300'}>{link.text}</FooterLinkSm>\r\n                            </Flex>\r\n                        </Flex>\r\n                    );\r\n                })}\r\n            </Columns.Column>\r\n            <Columns.Column spread={3} padding={'0'}>\r\n                <Box>\r\n                    <DropdownMenu\r\n                        menu={\r\n                            <React.Fragment>\r\n                                {langData.map((language, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <LangItem\r\n                                                language={language}\r\n                                                chosenLang={lang}\r\n                                                key={index}\r\n                                                handleClick={(event) => handleClick(event)}\r\n                                            />\r\n                                        </>\r\n                                    );\r\n                                })}\r\n                            </React.Fragment>\r\n                        }\r\n                    >\r\n                        <Button\r\n                            iconAfter=\"solid-sort-down\"\r\n                            size=\"small\"\r\n                            width={'100%'}\r\n                            justifyContent={'space-between'}\r\n                        >\r\n                            {languages[lang]}\r\n                        </Button>\r\n                    </DropdownMenu>\r\n                </Box>\r\n            </Columns.Column>\r\n        </Columns>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainDivider.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterElements.tsx",["261"],"import React from 'react';\r\nimport { Link, DropdownMenu, applyTheme } from 'bumbag';\r\n\r\nexport const FooterLinkXs = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            fontSize: '0.65rem',\r\n            color: '#56687a',\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const FooterLinkSm = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            fontSize: '0.75rem',\r\n            color: '#56687a',\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const FooterLinkMd = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            fontSize: '1rem',\r\n            color: '#56687a',\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\ninterface LangItemInterface {\r\n    language: { key: string; name: string };\r\n    chosenLang: string;\r\n    key: number;\r\n    handleClick: (event: any) => void;\r\n}\r\nexport const LangItem: React.FC<LangItemInterface> = ({\r\n    chosenLang,\r\n    language,\r\n    key,\r\n    handleClick,\r\n}: LangItemInterface) => {\r\n    return (\r\n        <DropdownMenu.Item\r\n            key={key}\r\n            data-value={language.key}\r\n            onClick={(event) => handleClick(event)}\r\n            background={chosenLang === language.key ? '#574feb' : ''}\r\n            color={chosenLang === language.key ? '#fff' : ''}\r\n        >\r\n            {language.name}\r\n        </DropdownMenu.Item>\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\i18n\\config.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftImg.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftIntro.tsx",["262"],{"ruleId":"263","severity":1,"message":"264","line":19,"column":28,"nodeType":"265","messageId":"266","endLine":19,"endColumn":31,"suggestions":"267"},{"ruleId":"263","severity":1,"message":"264","line":21,"column":25,"nodeType":"265","messageId":"266","endLine":21,"endColumn":28,"suggestions":"268"},{"ruleId":"263","severity":1,"message":"264","line":17,"column":35,"nodeType":"265","messageId":"266","endLine":17,"endColumn":38,"suggestions":"269"},{"ruleId":"263","severity":1,"message":"264","line":53,"column":47,"nodeType":"265","messageId":"266","endLine":53,"endColumn":50,"suggestions":"270"},{"ruleId":"263","severity":1,"message":"264","line":53,"column":59,"nodeType":"265","messageId":"266","endLine":53,"endColumn":62,"suggestions":"271"},{"ruleId":"263","severity":1,"message":"264","line":7,"column":30,"nodeType":"265","messageId":"266","endLine":7,"endColumn":33,"suggestions":"272"},{"ruleId":"263","severity":1,"message":"264","line":5,"column":11,"nodeType":"265","messageId":"266","endLine":5,"endColumn":14,"suggestions":"273"},{"ruleId":"263","severity":1,"message":"264","line":6,"column":29,"nodeType":"265","messageId":"266","endLine":6,"endColumn":32,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":10,"column":15,"nodeType":"277","messageId":"278","endLine":10,"endColumn":19},{"ruleId":"263","severity":1,"message":"264","line":17,"column":38,"nodeType":"265","messageId":"266","endLine":17,"endColumn":41,"suggestions":"279"},{"ruleId":"263","severity":1,"message":"264","line":24,"column":37,"nodeType":"265","messageId":"266","endLine":24,"endColumn":40,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":28,"column":23,"nodeType":"283","messageId":"284","endLine":28,"endColumn":28},{"ruleId":"281","severity":1,"message":"282","line":39,"column":37,"nodeType":"283","messageId":"284","endLine":39,"endColumn":79},{"ruleId":"281","severity":1,"message":"285","line":39,"column":44,"nodeType":"277","messageId":"286","endLine":39,"endColumn":53},{"ruleId":"263","severity":1,"message":"264","line":39,"column":50,"nodeType":"265","messageId":"266","endLine":39,"endColumn":53,"suggestions":"287"},{"ruleId":"281","severity":1,"message":"288","line":39,"column":55,"nodeType":"277","messageId":"286","endLine":39,"endColumn":75},{"ruleId":"263","severity":1,"message":"264","line":39,"column":72,"nodeType":"265","messageId":"266","endLine":39,"endColumn":75,"suggestions":"289"},{"ruleId":"281","severity":1,"message":"282","line":68,"column":31,"nodeType":"283","messageId":"284","endLine":68,"endColumn":73},{"ruleId":"281","severity":1,"message":"285","line":68,"column":38,"nodeType":"277","messageId":"286","endLine":68,"endColumn":47},{"ruleId":"263","severity":1,"message":"264","line":68,"column":44,"nodeType":"265","messageId":"266","endLine":68,"endColumn":47,"suggestions":"290"},{"ruleId":"281","severity":1,"message":"288","line":68,"column":49,"nodeType":"277","messageId":"286","endLine":68,"endColumn":69},{"ruleId":"263","severity":1,"message":"264","line":68,"column":66,"nodeType":"265","messageId":"266","endLine":68,"endColumn":69,"suggestions":"291"},{"ruleId":"281","severity":1,"message":"282","line":82,"column":32,"nodeType":"283","messageId":"284","endLine":82,"endColumn":74},{"ruleId":"281","severity":1,"message":"285","line":82,"column":39,"nodeType":"277","messageId":"286","endLine":82,"endColumn":48},{"ruleId":"263","severity":1,"message":"264","line":82,"column":45,"nodeType":"265","messageId":"266","endLine":82,"endColumn":48,"suggestions":"292"},{"ruleId":"281","severity":1,"message":"288","line":82,"column":50,"nodeType":"277","messageId":"286","endLine":82,"endColumn":70},{"ruleId":"263","severity":1,"message":"264","line":82,"column":67,"nodeType":"265","messageId":"266","endLine":82,"endColumn":70,"suggestions":"293"},{"ruleId":"263","severity":1,"message":"264","line":95,"column":37,"nodeType":"265","messageId":"266","endLine":95,"endColumn":40,"suggestions":"294"},{"ruleId":"263","severity":1,"message":"264","line":105,"column":64,"nodeType":"265","messageId":"266","endLine":105,"endColumn":67,"suggestions":"295"},{"ruleId":"263","severity":1,"message":"264","line":107,"column":40,"nodeType":"265","messageId":"266","endLine":107,"endColumn":43,"suggestions":"296"},{"ruleId":"263","severity":1,"message":"264","line":108,"column":36,"nodeType":"265","messageId":"266","endLine":108,"endColumn":39,"suggestions":"297"},{"ruleId":"263","severity":1,"message":"264","line":11,"column":31,"nodeType":"265","messageId":"266","endLine":11,"endColumn":34,"suggestions":"298"},{"ruleId":"263","severity":1,"message":"264","line":34,"column":40,"nodeType":"265","messageId":"266","endLine":34,"endColumn":43,"suggestions":"299"},{"ruleId":"263","severity":1,"message":"264","line":35,"column":65,"nodeType":"265","messageId":"266","endLine":35,"endColumn":68,"suggestions":"300"},{"ruleId":"263","severity":1,"message":"264","line":35,"column":77,"nodeType":"265","messageId":"266","endLine":35,"endColumn":80,"suggestions":"301"},{"ruleId":"263","severity":1,"message":"264","line":35,"column":92,"nodeType":"265","messageId":"266","endLine":35,"endColumn":95,"suggestions":"302"},{"ruleId":"263","severity":1,"message":"264","line":50,"column":37,"nodeType":"265","messageId":"266","endLine":50,"endColumn":40,"suggestions":"303"},{"ruleId":"263","severity":1,"message":"264","line":85,"column":43,"nodeType":"265","messageId":"266","endLine":85,"endColumn":46,"suggestions":"304"},{"ruleId":"263","severity":1,"message":"264","line":94,"column":47,"nodeType":"265","messageId":"266","endLine":94,"endColumn":50,"suggestions":"305"},{"ruleId":"263","severity":1,"message":"264","line":102,"column":47,"nodeType":"265","messageId":"266","endLine":102,"endColumn":50,"suggestions":"306"},{"ruleId":"263","severity":1,"message":"264","line":112,"column":43,"nodeType":"265","messageId":"266","endLine":112,"endColumn":46,"suggestions":"307"},{"ruleId":"263","severity":1,"message":"264","line":121,"column":43,"nodeType":"265","messageId":"266","endLine":121,"endColumn":46,"suggestions":"308"},{"ruleId":"263","severity":1,"message":"264","line":10,"column":38,"nodeType":"265","messageId":"266","endLine":10,"endColumn":41,"suggestions":"309"},{"ruleId":"263","severity":1,"message":"264","line":14,"column":40,"nodeType":"265","messageId":"266","endLine":14,"endColumn":43,"suggestions":"310"},{"ruleId":"263","severity":1,"message":"264","line":15,"column":37,"nodeType":"265","messageId":"266","endLine":15,"endColumn":40,"suggestions":"311"},{"ruleId":"263","severity":1,"message":"264","line":21,"column":36,"nodeType":"265","messageId":"266","endLine":21,"endColumn":39,"suggestions":"312"},{"ruleId":"263","severity":1,"message":"264","line":61,"column":43,"nodeType":"265","messageId":"266","endLine":61,"endColumn":46,"suggestions":"313"},{"ruleId":"263","severity":1,"message":"264","line":10,"column":31,"nodeType":"265","messageId":"266","endLine":10,"endColumn":34,"suggestions":"314"},{"ruleId":"263","severity":1,"message":"264","line":25,"column":40,"nodeType":"265","messageId":"266","endLine":25,"endColumn":43,"suggestions":"315"},{"ruleId":"263","severity":1,"message":"264","line":26,"column":55,"nodeType":"265","messageId":"266","endLine":26,"endColumn":58,"suggestions":"316"},{"ruleId":"263","severity":1,"message":"264","line":26,"column":67,"nodeType":"265","messageId":"266","endLine":26,"endColumn":70,"suggestions":"317"},{"ruleId":"263","severity":1,"message":"264","line":26,"column":82,"nodeType":"265","messageId":"266","endLine":26,"endColumn":85,"suggestions":"318"},{"ruleId":"263","severity":1,"message":"264","line":33,"column":37,"nodeType":"265","messageId":"266","endLine":33,"endColumn":40,"suggestions":"319"},{"ruleId":"263","severity":1,"message":"264","line":62,"column":43,"nodeType":"265","messageId":"266","endLine":62,"endColumn":46,"suggestions":"320"},{"ruleId":"263","severity":1,"message":"264","line":70,"column":43,"nodeType":"265","messageId":"266","endLine":70,"endColumn":46,"suggestions":"321"},{"ruleId":"275","severity":1,"message":"322","line":2,"column":73,"nodeType":"277","messageId":"278","endLine":2,"endColumn":78},{"ruleId":"263","severity":1,"message":"264","line":82,"column":23,"nodeType":"265","messageId":"266","endLine":82,"endColumn":26,"suggestions":"323"},{"ruleId":"263","severity":1,"message":"264","line":36,"column":23,"nodeType":"265","messageId":"266","endLine":36,"endColumn":26,"suggestions":"324"},{"ruleId":"263","severity":1,"message":"264","line":29,"column":36,"nodeType":"265","messageId":"266","endLine":29,"endColumn":39,"suggestions":"325"},{"ruleId":"275","severity":1,"message":"326","line":36,"column":36,"nodeType":"277","messageId":"278","endLine":36,"endColumn":50},{"ruleId":"263","severity":1,"message":"264","line":38,"column":23,"nodeType":"265","messageId":"266","endLine":38,"endColumn":26,"suggestions":"327"},{"ruleId":"281","severity":1,"message":"328","line":16,"column":33,"nodeType":"329","messageId":"330","endLine":16,"endColumn":46},{"ruleId":"263","severity":1,"message":"264","line":16,"column":43,"nodeType":"265","messageId":"266","endLine":16,"endColumn":46,"suggestions":"331"},{"ruleId":"263","severity":1,"message":"264","line":18,"column":40,"nodeType":"265","messageId":"266","endLine":18,"endColumn":43,"suggestions":"332"},{"ruleId":"263","severity":1,"message":"264","line":33,"column":8,"nodeType":"265","messageId":"266","endLine":33,"endColumn":11,"suggestions":"333"},{"ruleId":"263","severity":1,"message":"264","line":19,"column":41,"nodeType":"265","messageId":"266","endLine":19,"endColumn":44,"suggestions":"334"},{"ruleId":"263","severity":1,"message":"264","line":28,"column":43,"nodeType":"265","messageId":"266","endLine":28,"endColumn":46,"suggestions":"335"},{"ruleId":"263","severity":1,"message":"264","line":28,"column":55,"nodeType":"265","messageId":"266","endLine":28,"endColumn":58,"suggestions":"336"},{"ruleId":"263","severity":1,"message":"264","line":66,"column":46,"nodeType":"265","messageId":"266","endLine":66,"endColumn":49,"suggestions":"337"},{"ruleId":"263","severity":1,"message":"264","line":66,"column":58,"nodeType":"265","messageId":"266","endLine":66,"endColumn":61,"suggestions":"338"},{"ruleId":"263","severity":1,"message":"264","line":10,"column":31,"nodeType":"265","messageId":"266","endLine":10,"endColumn":34,"suggestions":"339"},{"ruleId":"263","severity":1,"message":"264","line":12,"column":22,"nodeType":"265","messageId":"266","endLine":12,"endColumn":25,"suggestions":"340"},{"ruleId":"263","severity":1,"message":"264","line":20,"column":21,"nodeType":"265","messageId":"266","endLine":20,"endColumn":24,"suggestions":"341"},{"ruleId":"263","severity":1,"message":"264","line":23,"column":33,"nodeType":"265","messageId":"266","endLine":23,"endColumn":36,"suggestions":"342"},{"ruleId":"263","severity":1,"message":"264","line":37,"column":39,"nodeType":"265","messageId":"266","endLine":37,"endColumn":42,"suggestions":"343"},{"ruleId":"263","severity":1,"message":"264","line":37,"column":51,"nodeType":"265","messageId":"266","endLine":37,"endColumn":54,"suggestions":"344"},{"ruleId":"263","severity":1,"message":"264","line":47,"column":42,"nodeType":"265","messageId":"266","endLine":47,"endColumn":45,"suggestions":"345"},{"ruleId":"263","severity":1,"message":"264","line":47,"column":54,"nodeType":"265","messageId":"266","endLine":47,"endColumn":57,"suggestions":"346"},{"ruleId":"263","severity":1,"message":"264","line":56,"column":26,"nodeType":"265","messageId":"266","endLine":56,"endColumn":29,"suggestions":"347"},{"ruleId":"263","severity":1,"message":"264","line":38,"column":40,"nodeType":"265","messageId":"266","endLine":38,"endColumn":43,"suggestions":"348"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["349","350"],["351","352"],["353","354"],["355","356"],["357","358"],["359","360"],["361","362"],["363","364"],"@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar",["365","366"],["367","368"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","anyTypedArg",["369","370"],"Argument 'additionalData' should be typed with a non-any type.",["371","372"],["373","374"],["375","376"],["377","378"],["379","380"],["381","382"],["383","384"],["385","386"],["387","388"],["389","390"],["391","392"],["393","394"],["395","396"],["397","398"],["399","400"],["401","402"],["403","404"],["405","406"],["407","408"],["409","410"],["411","412"],["413","414"],["415","416"],["417","418"],["419","420"],["421","422"],["423","424"],["425","426"],["427","428"],["429","430"],["431","432"],["433","434"],["435","436"],"'Alert' is defined but never used.",["437","438"],["439","440"],["441","442"],"'values' is defined but never used.",["443","444"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["445","446"],["447","448"],["449","450"],["451","452"],["453","454"],["455","456"],["457","458"],["459","460"],["461","462"],["463","464"],["465","466"],["467","468"],["469","470"],["471","472"],["473","474"],["475","476"],["477","478"],["479","480"],{"messageId":"481","fix":"482","desc":"483"},{"messageId":"484","fix":"485","desc":"486"},{"messageId":"481","fix":"487","desc":"483"},{"messageId":"484","fix":"488","desc":"486"},{"messageId":"481","fix":"489","desc":"483"},{"messageId":"484","fix":"490","desc":"486"},{"messageId":"481","fix":"491","desc":"483"},{"messageId":"484","fix":"492","desc":"486"},{"messageId":"481","fix":"493","desc":"483"},{"messageId":"484","fix":"494","desc":"486"},{"messageId":"481","fix":"495","desc":"483"},{"messageId":"484","fix":"496","desc":"486"},{"messageId":"481","fix":"497","desc":"483"},{"messageId":"484","fix":"498","desc":"486"},{"messageId":"481","fix":"499","desc":"483"},{"messageId":"484","fix":"500","desc":"486"},{"messageId":"481","fix":"501","desc":"483"},{"messageId":"484","fix":"502","desc":"486"},{"messageId":"481","fix":"503","desc":"483"},{"messageId":"484","fix":"504","desc":"486"},{"messageId":"481","fix":"505","desc":"483"},{"messageId":"484","fix":"506","desc":"486"},{"messageId":"481","fix":"507","desc":"483"},{"messageId":"484","fix":"508","desc":"486"},{"messageId":"481","fix":"509","desc":"483"},{"messageId":"484","fix":"510","desc":"486"},{"messageId":"481","fix":"511","desc":"483"},{"messageId":"484","fix":"512","desc":"486"},{"messageId":"481","fix":"513","desc":"483"},{"messageId":"484","fix":"514","desc":"486"},{"messageId":"481","fix":"515","desc":"483"},{"messageId":"484","fix":"516","desc":"486"},{"messageId":"481","fix":"517","desc":"483"},{"messageId":"484","fix":"518","desc":"486"},{"messageId":"481","fix":"519","desc":"483"},{"messageId":"484","fix":"520","desc":"486"},{"messageId":"481","fix":"521","desc":"483"},{"messageId":"484","fix":"522","desc":"486"},{"messageId":"481","fix":"523","desc":"483"},{"messageId":"484","fix":"524","desc":"486"},{"messageId":"481","fix":"525","desc":"483"},{"messageId":"484","fix":"526","desc":"486"},{"messageId":"481","fix":"527","desc":"483"},{"messageId":"484","fix":"528","desc":"486"},{"messageId":"481","fix":"529","desc":"483"},{"messageId":"484","fix":"530","desc":"486"},{"messageId":"481","fix":"531","desc":"483"},{"messageId":"484","fix":"532","desc":"486"},{"messageId":"481","fix":"533","desc":"483"},{"messageId":"484","fix":"534","desc":"486"},{"messageId":"481","fix":"535","desc":"483"},{"messageId":"484","fix":"536","desc":"486"},{"messageId":"481","fix":"537","desc":"483"},{"messageId":"484","fix":"538","desc":"486"},{"messageId":"481","fix":"539","desc":"483"},{"messageId":"484","fix":"540","desc":"486"},{"messageId":"481","fix":"541","desc":"483"},{"messageId":"484","fix":"542","desc":"486"},{"messageId":"481","fix":"543","desc":"483"},{"messageId":"484","fix":"544","desc":"486"},{"messageId":"481","fix":"545","desc":"483"},{"messageId":"484","fix":"546","desc":"486"},{"messageId":"481","fix":"547","desc":"483"},{"messageId":"484","fix":"548","desc":"486"},{"messageId":"481","fix":"549","desc":"483"},{"messageId":"484","fix":"550","desc":"486"},{"messageId":"481","fix":"551","desc":"483"},{"messageId":"484","fix":"552","desc":"486"},{"messageId":"481","fix":"553","desc":"483"},{"messageId":"484","fix":"554","desc":"486"},{"messageId":"481","fix":"555","desc":"483"},{"messageId":"484","fix":"556","desc":"486"},{"messageId":"481","fix":"557","desc":"483"},{"messageId":"484","fix":"558","desc":"486"},{"messageId":"481","fix":"559","desc":"483"},{"messageId":"484","fix":"560","desc":"486"},{"messageId":"481","fix":"561","desc":"483"},{"messageId":"484","fix":"562","desc":"486"},{"messageId":"481","fix":"563","desc":"483"},{"messageId":"484","fix":"564","desc":"486"},{"messageId":"481","fix":"565","desc":"483"},{"messageId":"484","fix":"566","desc":"486"},{"messageId":"481","fix":"567","desc":"483"},{"messageId":"484","fix":"568","desc":"486"},{"messageId":"481","fix":"569","desc":"483"},{"messageId":"484","fix":"570","desc":"486"},{"messageId":"481","fix":"571","desc":"483"},{"messageId":"484","fix":"572","desc":"486"},{"messageId":"481","fix":"573","desc":"483"},{"messageId":"484","fix":"574","desc":"486"},{"messageId":"481","fix":"575","desc":"483"},{"messageId":"484","fix":"576","desc":"486"},{"messageId":"481","fix":"577","desc":"483"},{"messageId":"484","fix":"578","desc":"486"},{"messageId":"481","fix":"579","desc":"483"},{"messageId":"484","fix":"580","desc":"486"},{"messageId":"481","fix":"581","desc":"483"},{"messageId":"484","fix":"582","desc":"486"},{"messageId":"481","fix":"583","desc":"483"},{"messageId":"484","fix":"584","desc":"486"},{"messageId":"481","fix":"585","desc":"483"},{"messageId":"484","fix":"586","desc":"486"},{"messageId":"481","fix":"587","desc":"483"},{"messageId":"484","fix":"588","desc":"486"},{"messageId":"481","fix":"589","desc":"483"},{"messageId":"484","fix":"590","desc":"486"},{"messageId":"481","fix":"591","desc":"483"},{"messageId":"484","fix":"592","desc":"486"},{"messageId":"481","fix":"593","desc":"483"},{"messageId":"484","fix":"594","desc":"486"},{"messageId":"481","fix":"595","desc":"483"},{"messageId":"484","fix":"596","desc":"486"},{"messageId":"481","fix":"597","desc":"483"},{"messageId":"484","fix":"598","desc":"486"},{"messageId":"481","fix":"599","desc":"483"},{"messageId":"484","fix":"600","desc":"486"},{"messageId":"481","fix":"601","desc":"483"},{"messageId":"484","fix":"602","desc":"486"},{"messageId":"481","fix":"603","desc":"483"},{"messageId":"484","fix":"604","desc":"486"},{"messageId":"481","fix":"605","desc":"483"},{"messageId":"484","fix":"606","desc":"486"},{"messageId":"481","fix":"607","desc":"483"},{"messageId":"484","fix":"608","desc":"486"},{"messageId":"481","fix":"609","desc":"483"},{"messageId":"484","fix":"610","desc":"486"},{"messageId":"481","fix":"611","desc":"483"},{"messageId":"484","fix":"612","desc":"486"},{"messageId":"481","fix":"613","desc":"483"},{"messageId":"484","fix":"614","desc":"486"},{"messageId":"481","fix":"615","desc":"483"},{"messageId":"484","fix":"616","desc":"486"},"suggestUnknown",{"range":"617","text":"618"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"617","text":"619"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"620","text":"618"},{"range":"620","text":"619"},{"range":"621","text":"618"},{"range":"621","text":"619"},{"range":"622","text":"618"},{"range":"622","text":"619"},{"range":"623","text":"618"},{"range":"623","text":"619"},{"range":"624","text":"618"},{"range":"624","text":"619"},{"range":"625","text":"618"},{"range":"625","text":"619"},{"range":"626","text":"618"},{"range":"626","text":"619"},{"range":"627","text":"618"},{"range":"627","text":"619"},{"range":"628","text":"618"},{"range":"628","text":"619"},{"range":"629","text":"618"},{"range":"629","text":"619"},{"range":"630","text":"618"},{"range":"630","text":"619"},{"range":"631","text":"618"},{"range":"631","text":"619"},{"range":"632","text":"618"},{"range":"632","text":"619"},{"range":"633","text":"618"},{"range":"633","text":"619"},{"range":"634","text":"618"},{"range":"634","text":"619"},{"range":"635","text":"618"},{"range":"635","text":"619"},{"range":"636","text":"618"},{"range":"636","text":"619"},{"range":"637","text":"618"},{"range":"637","text":"619"},{"range":"638","text":"618"},{"range":"638","text":"619"},{"range":"639","text":"618"},{"range":"639","text":"619"},{"range":"640","text":"618"},{"range":"640","text":"619"},{"range":"641","text":"618"},{"range":"641","text":"619"},{"range":"642","text":"618"},{"range":"642","text":"619"},{"range":"643","text":"618"},{"range":"643","text":"619"},{"range":"644","text":"618"},{"range":"644","text":"619"},{"range":"645","text":"618"},{"range":"645","text":"619"},{"range":"646","text":"618"},{"range":"646","text":"619"},{"range":"647","text":"618"},{"range":"647","text":"619"},{"range":"648","text":"618"},{"range":"648","text":"619"},{"range":"649","text":"618"},{"range":"649","text":"619"},{"range":"650","text":"618"},{"range":"650","text":"619"},{"range":"651","text":"618"},{"range":"651","text":"619"},{"range":"652","text":"618"},{"range":"652","text":"619"},{"range":"653","text":"618"},{"range":"653","text":"619"},{"range":"654","text":"618"},{"range":"654","text":"619"},{"range":"655","text":"618"},{"range":"655","text":"619"},{"range":"656","text":"618"},{"range":"656","text":"619"},{"range":"657","text":"618"},{"range":"657","text":"619"},{"range":"658","text":"618"},{"range":"658","text":"619"},{"range":"659","text":"618"},{"range":"659","text":"619"},{"range":"660","text":"618"},{"range":"660","text":"619"},{"range":"661","text":"618"},{"range":"661","text":"619"},{"range":"662","text":"618"},{"range":"662","text":"619"},{"range":"663","text":"618"},{"range":"663","text":"619"},{"range":"664","text":"618"},{"range":"664","text":"619"},{"range":"665","text":"618"},{"range":"665","text":"619"},{"range":"666","text":"618"},{"range":"666","text":"619"},{"range":"667","text":"618"},{"range":"667","text":"619"},{"range":"668","text":"618"},{"range":"668","text":"619"},{"range":"669","text":"618"},{"range":"669","text":"619"},{"range":"670","text":"618"},{"range":"670","text":"619"},{"range":"671","text":"618"},{"range":"671","text":"619"},{"range":"672","text":"618"},{"range":"672","text":"619"},{"range":"673","text":"618"},{"range":"673","text":"619"},{"range":"674","text":"618"},{"range":"674","text":"619"},{"range":"675","text":"618"},{"range":"675","text":"619"},{"range":"676","text":"618"},{"range":"676","text":"619"},{"range":"677","text":"618"},{"range":"677","text":"619"},{"range":"678","text":"618"},{"range":"678","text":"619"},{"range":"679","text":"618"},{"range":"679","text":"619"},{"range":"680","text":"618"},{"range":"680","text":"619"},{"range":"681","text":"618"},{"range":"681","text":"619"},{"range":"682","text":"618"},{"range":"682","text":"619"},{"range":"683","text":"618"},{"range":"683","text":"619"},{"range":"684","text":"618"},{"range":"684","text":"619"},[679,682],"unknown","never",[793,796],[470,473],[2475,2478],[2487,2490],[272,275],[165,168],[199,202],[548,551],[899,902],[1289,1292],[1311,1314],[2156,2159],[2178,2181],[2561,2564],[2583,2586],[2937,2940],[2760,2763],[2852,2855],[2942,2945],[486,489],[1163,1166],[1240,1243],[1252,1255],[1267,1270],[1774,1777],[3173,3176],[3590,3593],[3972,3975],[4392,4395],[4787,4790],[426,429],[741,744],[790,793],[976,979],[2570,2573],[430,433],[856,859],[923,926],[935,938],[950,953],[1275,1278],[2432,2435],[2784,2787],[3538,3541],[1293,1296],[998,1001],[1336,1339],[528,531],[628,631],[991,994],[558,561],[931,934],[943,946],[2946,2949],[2958,2961],[435,438],[560,563],[758,761],[938,941],[1519,1522],[1531,1534],[1980,1983],[1992,1995],[1139,1142],[850,853]]