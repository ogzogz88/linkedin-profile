[{"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx":"1","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts":"2","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx":"3","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx":"5","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx":"6","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx":"7","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx":"8","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx":"9","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx":"10","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx":"11","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx":"12","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx":"13","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx":"14","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx":"15","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx":"16","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx":"17","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx":"18","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx":"19","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx":"20","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx":"21","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx":"22","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx":"23","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx":"24","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx":"25","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx":"26","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx":"27","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx":"28","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx":"29","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx":"30","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImageForm.tsx":"31","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx":"32","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx":"33","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftData.tsx":"34","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx":"35","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx":"36","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightData.tsx":"37","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerData.tsx":"38"},{"size":540,"mtime":1608998287134,"results":"39","hashOfConfig":"40"},{"size":545,"mtime":1608486025945,"results":"41","hashOfConfig":"40"},{"size":311,"mtime":1609011530055,"results":"42","hashOfConfig":"40"},{"size":3494,"mtime":1609787967152,"results":"43","hashOfConfig":"40"},{"size":1301,"mtime":1609788427662,"results":"44","hashOfConfig":"40"},{"size":752,"mtime":1609790793814,"results":"45","hashOfConfig":"40"},{"size":806,"mtime":1609082645004,"results":"46","hashOfConfig":"40"},{"size":495,"mtime":1609012165540,"results":"47","hashOfConfig":"40"},{"size":3049,"mtime":1609852371428,"results":"48","hashOfConfig":"40"},{"size":800,"mtime":1609843484639,"results":"49","hashOfConfig":"40"},{"size":626,"mtime":1608857185535,"results":"50","hashOfConfig":"40"},{"size":1522,"mtime":1609841290455,"results":"51","hashOfConfig":"40"},{"size":1297,"mtime":1609595486719,"results":"52","hashOfConfig":"40"},{"size":3233,"mtime":1609374315168,"results":"53","hashOfConfig":"40"},{"size":212,"mtime":1609595768798,"results":"54","hashOfConfig":"40"},{"size":5275,"mtime":1609841197176,"results":"55","hashOfConfig":"40"},{"size":2148,"mtime":1609852491076,"results":"56","hashOfConfig":"40"},{"size":1452,"mtime":1609789866135,"results":"57","hashOfConfig":"40"},{"size":640,"mtime":1609288487918,"results":"58","hashOfConfig":"40"},{"size":1414,"mtime":1609783874449,"results":"59","hashOfConfig":"40"},{"size":1570,"mtime":1609783077972,"results":"60","hashOfConfig":"40"},{"size":910,"mtime":1609782759945,"results":"61","hashOfConfig":"40"},{"size":1452,"mtime":1609595733036,"results":"62","hashOfConfig":"40"},{"size":5459,"mtime":1609592989567,"results":"63","hashOfConfig":"40"},{"size":3170,"mtime":1609593004274,"results":"64","hashOfConfig":"40"},{"size":3708,"mtime":1609591426559,"results":"65","hashOfConfig":"40"},{"size":656,"mtime":1609591335932,"results":"66","hashOfConfig":"40"},{"size":7844,"mtime":1609783100966,"results":"67","hashOfConfig":"40"},{"size":403,"mtime":1609607866856,"results":"68","hashOfConfig":"40"},{"size":3608,"mtime":1609609115733,"results":"69","hashOfConfig":"40"},{"size":3789,"mtime":1609609898363,"results":"70","hashOfConfig":"40"},{"size":5638,"mtime":1609784076042,"results":"71","hashOfConfig":"40"},{"size":3324,"mtime":1609852184445,"results":"72","hashOfConfig":"40"},{"size":564,"mtime":1609782999597,"results":"73","hashOfConfig":"40"},{"size":4544,"mtime":1609853850411,"results":"74","hashOfConfig":"40"},{"size":3754,"mtime":1609853922016,"results":"75","hashOfConfig":"40"},{"size":1743,"mtime":1609848889840,"results":"76","hashOfConfig":"40"},{"size":1405,"mtime":1609852341237,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"15bsiaf",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx",["166"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { TopNav, Image, Input, Flex, } from 'bumbag';\r\nimport { Navlink, NavDivider } from './Navlink';\r\nimport NavText from './NavText';\r\nimport { UserPopover } from './UserPopover';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { navData } from './NavData';\r\nimport { NavImage } from './UserPopoverElements'\r\nimport { DarkMode } from '../DarkMode';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\n\r\n\r\nfunction Navbar(): JSX.Element {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL }: any = user;\r\n    return (\r\n        <TopNav margin={'0 2rem'}>\r\n            <TopNav.Section>\r\n                <Navlink key={10} href=\"/\" style={{ marginLeft: '0' }}>\r\n                    <Image src=\"/logo.png\" height=\"35px\" />\r\n                </Navlink>\r\n                <Flex style={{ alignItems: 'center' }}>\r\n                    <Input\r\n                        before={<Input.Icon icon=\"solid-search\" />}\r\n                        placeholder=\"Search\"\r\n                        style={{ marginLeft: '5px' }}\r\n                        size=\"small\"\r\n                        width=\"250px\"\r\n                        marginRight=\"6rem\"\r\n                    />\r\n                </Flex>\r\n            </TopNav.Section>\r\n            <TopNav.Section >\r\n                {navData.map((navElement, index) => {\r\n                    return (\r\n                        <>\r\n                            <Navlink\r\n                                key={index}\r\n                                href={navElement.navHref}\r\n                                style={\r\n                                    navElement.navIcon === 'user' ?\r\n                                        { paddingRight: '1rem' } :\r\n                                        navElement.navIcon === '' ?\r\n                                            {\r\n                                                color: '#5d3b09',\r\n                                                fontSize: '0.75rem',\r\n                                                fontWeight: 'lighter',\r\n                                                width: '90px',\r\n                                                textAlign: 'center',\r\n                                            } :\r\n                                            undefined\r\n                                }\r\n                            >\r\n                                {navElement.navIcon !== 'user' && <NavIcon aria-label=\"Navlcon\" icon={`solid-${navElement.navIcon}`} />}\r\n                                {navElement.navIcon === 'user' && <NavImage src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                    alt=\"Profile Picture\" width={'30px'} />}\r\n\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <NavText>{navElement.navText}</NavText>\r\n                                    {navElement.navIcon === 'user' && <UserPopover />}\r\n                                    {navElement.navIcon === 'th' && <SideDrawer />}\r\n                                </div>\r\n                            </Navlink>\r\n                            {navElement.navIcon === 'user' && <NavDivider />}\r\n                        </>\r\n                    );\r\n                })}\r\n                <DarkMode />\r\n            </TopNav.Section>\r\n        </TopNav >\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx",["167","168"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx",["169"],"import React, { useState } from 'react';\r\nimport { Switch, useColorMode } from 'bumbag';\r\n\r\nexport function DarkMode(): JSX.Element {\r\n    const [checked, setChecked] = useState(true);\r\n    const { colorMode, setColorMode } = useColorMode();\r\n    const handleChange = (e: any) => {\r\n        setChecked(e.target.checked);\r\n        colorMode === 'default' ? setColorMode('dark') : setColorMode('default');\r\n    };\r\n    return (\r\n        <Switch\r\n            colorMode={colorMode}\r\n            style={{ marginLeft: '0.5rem' }}\r\n            checked={checked}\r\n            onChange={(e) => handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx",["170","171","172","173"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\n\r\ntype UserContextType = {\r\n    user: any;\r\n    setUser: React.Dispatch<any>;\r\n};\r\nexport const UserContext = createContext<UserContextType>({\r\n    user: null,\r\n    setUser: (user) => console.warn('no user provider now'),\r\n});\r\n\r\ninterface ProviderProps {\r\n    children: React.ReactNode;\r\n}\r\nexport function UserProvider(props: React.PropsWithChildren<ProviderProps>): JSX.Element {\r\n    const [user, setUser] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        setUser('loading');\r\n        auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                if (auth?.currentUser?.providerData[0]?.providerId === 'google.com') {\r\n                    setUser(userAuth);\r\n                } else {\r\n                    const user = await generateUserDocument(userAuth);\r\n                    setUser(user);\r\n                }\r\n            } else {\r\n                setUser(null);\r\n            }\r\n            // console.log('provider');\r\n            // console.log(auth?.currentUser?.providerData[0]?.providerId);\r\n        });\r\n    }, []);\r\n    return <UserContext.Provider value={{ user, setUser }}>{props.children}</UserContext.Provider>;\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCM7nvbFKElRyhTtAbCWmz5eSHWvG6_ex4',\r\n    authDomain: 'linkedin-profile-358a8.firebaseapp.com',\r\n    projectId: 'linkedin-profile-358a8',\r\n    storageBucket: 'linkedin-profile-358a8.appspot.com',\r\n    messagingSenderId: '674279447289',\r\n    appId: '1:674279447289:web:63424a18728b9ff403e028',\r\n    measurementId: 'G-XZNCK36PGF',\r\n};\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const storage = firebaseApp.storage();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// signin for google Sign In\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = (): any => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n//signout for google Sign Out\r\nexport const logOut = () => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            console.log('logged out');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n};\r\n\r\n// email and password login implementation\r\nexport const generateUserDocument = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email, displayName, photoURL } = user;\r\n\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                photoURL,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    } else {\r\n        try {\r\n            await userRef.update({\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error updating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n//update user data\r\nexport const updateUserData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\n//update image data\r\nexport const updateImageData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n    }\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx",["192","193"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx",["194","195","196","197","198","199","200","201","202","203"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle } from '../../firebase';\r\nimport { auth, generateUserDocument } from '../../firebase';\r\n\r\nexport function SignUp(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const createUserWithEmailAndPasswordHandler = async (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            generateUserDocument(user, { email, name, lastName, displayName });\r\n        } catch (error) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n        setDisplayName('');\r\n        setName('');\r\n        setLastName('');\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        } else if (name === 'displayName') {\r\n            setDisplayName(value);\r\n        } else if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'lastName') {\r\n            setLastName(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Sign Up\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        label=\"Display name\"\r\n                        name=\"displayName\"\r\n                        id=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder=\"Enter your display name\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <FieldStack orientation=\"horizontal\">\r\n                        <InputField\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Enter your  name\"\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                        <InputField\r\n                            label=\"Last name\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            placeholder=\"Enter your last name\"\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                    </FieldStack>\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"userPassword\"\r\n                        id=\"userPassword\"\r\n                        value={password}\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => {\r\n                            createUserWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Already have an account?</Text> <Link to=\"/signin\">Sign in here</Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                        Sign In With Google\r\n                    </Button>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx",["204","205","206","207"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport function PasswordReset(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n    };\r\n    const sendResetEmail = (event: any) => {\r\n        event.preventDefault();\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => {\r\n                    setEmailHasBeenSent(false);\r\n                }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setError('Error resetting password');\r\n            });\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Reset Your Password\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {emailHasBeenSent && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>An email has been sent to you!</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => sendResetEmail(event)}\r\n                    >\r\n                        Send me a reset link\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>Go Back to Sign In?</Text> <Link to=\"/signin\"> &larr; Sign In</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx",["208","209","210","211","212","213","214"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle, auth } from '../../firebase';\r\n\r\nexport function SignIn(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const signInWithEmailAndPasswordHandler = (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((error) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', error);\r\n        });\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Sign In\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"userPassword\"\r\n                        name=\"userPassword\"\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => {\r\n                            signInWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>Dont have an account?</Text>{' '}\r\n                        <Link to=\"/signUp\">Go to Sign Up &rarr; </Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Link to=\"/passwordReset\">Forgot Password?</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx",["215","216"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Card, Button, FieldStack, InputField, Flex, applyTheme, Alert } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { ProfileImg, BackgroundImg, MainPageIconContainerSec } from '../profile/MainProfileLeftElements';\r\nimport { UpdateModalImage } from './UpdateModalImage';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\n\r\nconst ModalButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n    type: 'submit',\r\n});\r\ninterface Values {\r\n    name: string;\r\n    lastName: string;\r\n    headline: string;\r\n    company: string;\r\n    education: string;\r\n    country: string;\r\n    location: string;\r\n    industry: string;\r\n}\r\nconst UpdateModalIntroSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .min(2, 'Too short for your name! It must be at least 2 characters long.')\r\n        .max(50, 'Too long for your name! It must be at most 50 characters long.')\r\n        .required('Required'),\r\n    lastName: Yup.string()\r\n        .min(2, 'Too short for your last name! It must be at least 2 characters long.')\r\n        .max(50, 'Too long for your last name! It must be at most 50 characters long.')\r\n        .required('Required'),\r\n    headline: Yup.string()\r\n        .min(5, 'Too short for your headline! It must be at least 5 characters long.')\r\n        .max(250, 'Too long for your headline! It must be at most 250 characters long.')\r\n        .required('Required'),\r\n    company: Yup.string()\r\n        .min(2, 'Too short for your company! It must be at least 2 characters long.')\r\n        .max(150, 'Too long for your company! It must be at most 150 characters long.'),\r\n    education: Yup.string()\r\n        .min(2, 'Too short for your education! It must be at least 2 characters long.')\r\n        .max(250, 'Too long for your education! It must be at most 250 characters long.'),\r\n    country: Yup.string()\r\n        .min(2, 'Too short for your country! It must be at least 2 characters long.')\r\n        .max(100, 'Too long for your country! It must be at most 100 characters long.')\r\n        .required('Required'),\r\n    location: Yup.string()\r\n        .min(2, 'Too short for your location! It must be at least 2 characters long.')\r\n        .max(100, 'Too long for your location! It must be at most 100 characters long.'),\r\n    industry: Yup.string()\r\n        .min(2, 'Too short for your industry! It must be at least 2 characters long.')\r\n        .max(250, 'Too long for your industry! It must be at most 250 characters long.')\r\n        .required('Required'),\r\n    // email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\nexport function UpdateModalIntroForm(): JSX.Element {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL } = user;\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        name: '',\r\n        lastName: '',\r\n        headline: '',\r\n        company: '',\r\n        education: '',\r\n        country: '',\r\n        location: '',\r\n        industry: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalIntroSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Card\r\n                            style={{\r\n                                padding: 0,\r\n                                borderRadius: '0.5rem 05.rem 0 0',\r\n                                position: 'relative',\r\n                                marginBottom: '6rem',\r\n                                height: '170px',\r\n                            }}\r\n                        >\r\n                            <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" width={'100%'} />\r\n                            <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n                            <MainPageIconContainerSec\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    left: '7.5rem',\r\n                                    bottom: '-4rem',\r\n                                    background: '#fff',\r\n                                    boxShadow: '0 0 4px 0px #aaa',\r\n                                }}\r\n                            >\r\n                                <UpdateModalImage />\r\n                            </MainPageIconContainerSec>\r\n                        </Card>\r\n                        <FieldStack orientation=\"horizontal\">\r\n                            <Field component={InputField.Formik} name=\"name\" label=\"First name\" isRequired />\r\n                            <Field component={InputField.Formik} name=\"lastName\" label=\"Last name\" isRequired />\r\n                        </FieldStack>\r\n                        <Field component={InputField.Formik} name=\"headline\" label=\"Headline\" isRequired />\r\n                        <Field component={InputField.Formik} name=\"company\" label=\"Company\" />\r\n                        <Field component={InputField.Formik} name=\"education\" label=\"Education\" />\r\n                        <Field component={InputField.Formik} name=\"country\" label=\"Country\" isRequired />\r\n                        <Field component={InputField.Formik} name=\"location\" label=\"Location\" />\r\n                        <Field component={InputField.Formik} name=\"industry\" label=\"Industry\" isRequired />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your About Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update About info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx",["217"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Button, FieldStack, TextareaField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\n\r\ninterface Values {\r\n    about: string;\r\n}\r\nconst UpdateModalAboutSchema = Yup.object().shape({\r\n    about: Yup.string()\r\n        .min(10, 'Too short for your about section! It must be at least 10 characters long.')\r\n        .max(350, 'Too long for your about section! It must be at most 350 characters long.')\r\n        .required('Required'),\r\n});\r\nexport function UpdateModalAboutForm(): JSX.Element {\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        about: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalAboutSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field component={TextareaField.Formik} name=\"about\" label=\"Summary\" minHeight={'7rem'} />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your Intro Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update Intro info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImageForm.tsx",["218","219","220"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Button, FieldStack, InputField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateImageData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { storage } from '../../firebase';\r\nimport { UpdateMessage } from './UpdateMessage';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\ninterface Values {\r\n    photoURL: string;\r\n}\r\nexport function UpdateModalImageForm(): JSX.Element {\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n\r\n    const initialValues: Values = {\r\n        photoURL: '',\r\n    };\r\n    const onFileChange = async (e: any) => {\r\n        const file = e.target.files[0];\r\n        const storageRef = storage.ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateImageData(user, { photoURL: fileUrl });\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field\r\n                            component={InputField.Formik}\r\n                            name=\"photoURL\"\r\n                            label=\"Photo\"\r\n                            type={'file'}\r\n                            onChange={onFileChange}\r\n                        />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your photo.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update photo, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx",["221","222","223"],"/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport { Columns, Flex, Card, Set } from 'bumbag';\r\nimport {\r\n    ProfileImg,\r\n    BackgroundImg,\r\n    ProfileEditLink,\r\n    MainPageIcon,\r\n    MainPageIconContainer,\r\n    AddButton,\r\n    MoreButton,\r\n    ProfileTextLg,\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n    MainPageIconContainerSec,\r\n} from './MainProfileLeftElements';\r\nimport { data } from './MainProfileLeftData';\r\nimport { UpdateModalIntro } from '../update/UpdateModalIntro';\r\nimport { UpdateModalAbout } from '../update/UpdateModalAbout';\r\n\r\nexport function MainProfileLeft({ user }: any): JSX.Element {\r\n    const {\r\n        photoURL,\r\n        displayName,\r\n        email,\r\n        name,\r\n        lastName,\r\n        headline,\r\n        company,\r\n        education,\r\n        country,\r\n        location,\r\n        industry,\r\n        about,\r\n    }: any = user;\r\n\r\n    return (\r\n        <>\r\n            {/* Intro Card  */}\r\n            <Card style={{ padding: 0, borderRadius: '0.5rem', position: 'relative' }}>\r\n                <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" />\r\n                {/* <ProfileImg src=\"../../assets/photos/ogz.jpg\" /> */}\r\n                <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n                <Set style={{ justifyContent: 'flex-end', marginTop: '0.3rem' }}>\r\n                    <AddButton size=\"small\" palette=\"primary\">\r\n                        Add profile section\r\n                    </AddButton>\r\n                    <MoreButton size=\"small\">More...</MoreButton>\r\n                    <ProfileEditLink>\r\n                        <MainPageIconContainer>\r\n                            <UpdateModalIntro />\r\n                        </MainPageIconContainer>\r\n                    </ProfileEditLink>\r\n                </Set>\r\n                <Columns style={{ marginTop: '0.25rem', paddingBottom: '1rem' }}>\r\n                    <Columns.Column spread={8}>\r\n                        <Flex flexDirection=\"column\" marginLeft=\"1.5rem\">\r\n                            <ProfileTextLg textTransform={'capitalize'}>\r\n                                {name && lastName\r\n                                    ? `${name} ${lastName}`\r\n                                    : displayName\r\n                                        ? displayName\r\n                                        : `${data[0].basic.name} ${data[0].basic.lastname}`}\r\n                            </ProfileTextLg>\r\n                            <ProfileTextSm>{email ? email : data[0].basic.email}</ProfileTextSm>\r\n                            <ProfileTextMd>{headline ? headline : data[0].basic.headline}</ProfileTextMd>\r\n                            <ProfileTextMd>{industry ? industry : data[0].basic.industry}</ProfileTextMd>\r\n                            <ProfileTextSm>\r\n                                {location ? location : data[0].basic.city}, {country ? country : data[0].basic.country}\r\n                            </ProfileTextSm>\r\n                        </Flex>\r\n                    </Columns.Column>\r\n                    <Columns.Column spread={4}>\r\n                        <Flex flexDirection=\"column\">\r\n                            <Flex style={{ alignItems: 'center' }}>\r\n                                <MainPageIconContainer\r\n                                    style={{\r\n                                        marginRight: '0.3rem',\r\n                                        marginBottom: '0.3rem',\r\n                                        borderRadius: '0%',\r\n                                        background: '#eee',\r\n                                    }}\r\n                                >\r\n                                    <MainPageIcon src=\"../../assets/icons/company-icon.png\" />\r\n                                </MainPageIconContainer>\r\n                                <ProfileTextXs fontWeight=\"bold\">\r\n                                    {company ? company : data[0].basic.company}{' '}\r\n                                </ProfileTextXs>\r\n                            </Flex>\r\n                            <Flex style={{ alignItems: 'center' }}>\r\n                                <MainPageIconContainer\r\n                                    style={{ marginRight: '0.3rem', borderRadius: '0%', background: '#eee' }}\r\n                                >\r\n                                    <MainPageIcon src=\"../../assets/icons/education-icon.png\" />\r\n                                </MainPageIconContainer>\r\n                                <ProfileTextXs fontWeight=\"bold\">\r\n                                    {education ? education : data[0].basic.education}{' '}\r\n                                </ProfileTextXs>\r\n                            </Flex>\r\n                        </Flex>\r\n                    </Columns.Column>\r\n                </Columns>\r\n            </Card>\r\n            {/* About Card  */}\r\n            <Card style={{ marginTop: '2rem', position: 'relative' }}>\r\n                <Flex>\r\n                    <Flex flexDirection=\"column\">\r\n                        <ProfileTextMd marginBottom=\"1rem\">{data[0].about.title}</ProfileTextMd>\r\n                        <ProfileTextXs>{about ? about : data[0].about.text}</ProfileTextXs>\r\n                    </Flex>\r\n                </Flex>\r\n                <ProfileEditLink style={{ position: 'absolute', right: '1rem', top: '1rem' }}>\r\n                    <MainPageIconContainerSec margin={'0px'}>\r\n                        <UpdateModalAbout />\r\n                    </MainPageIconContainerSec>\r\n                </ProfileEditLink>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx",["224","225","226","227","228","229"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx",["230","231","232","233"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerData.tsx",[],{"ruleId":"234","severity":1,"message":"235","line":18,"column":25,"nodeType":"236","messageId":"237","endLine":18,"endColumn":28,"suggestions":"238"},{"ruleId":"234","severity":1,"message":"235","line":48,"column":52,"nodeType":"236","messageId":"237","endLine":48,"endColumn":55,"suggestions":"239"},{"ruleId":"234","severity":1,"message":"235","line":48,"column":64,"nodeType":"236","messageId":"237","endLine":48,"endColumn":67,"suggestions":"240"},{"ruleId":"234","severity":1,"message":"235","line":7,"column":30,"nodeType":"236","messageId":"237","endLine":7,"endColumn":33,"suggestions":"241"},{"ruleId":"234","severity":1,"message":"235","line":5,"column":11,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14,"suggestions":"242"},{"ruleId":"234","severity":1,"message":"235","line":6,"column":29,"nodeType":"236","messageId":"237","endLine":6,"endColumn":32,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":10,"column":15,"nodeType":"246","messageId":"247","endLine":10,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":17,"column":38,"nodeType":"236","messageId":"237","endLine":17,"endColumn":41,"suggestions":"248"},{"ruleId":"234","severity":1,"message":"235","line":24,"column":37,"nodeType":"236","messageId":"237","endLine":24,"endColumn":40,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":28,"column":23,"nodeType":"252","messageId":"253","endLine":28,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":39,"column":37,"nodeType":"252","messageId":"253","endLine":39,"endColumn":79},{"ruleId":"250","severity":1,"message":"254","line":39,"column":44,"nodeType":"246","messageId":"255","endLine":39,"endColumn":53},{"ruleId":"234","severity":1,"message":"235","line":39,"column":50,"nodeType":"236","messageId":"237","endLine":39,"endColumn":53,"suggestions":"256"},{"ruleId":"250","severity":1,"message":"257","line":39,"column":55,"nodeType":"246","messageId":"255","endLine":39,"endColumn":75},{"ruleId":"234","severity":1,"message":"235","line":39,"column":72,"nodeType":"236","messageId":"237","endLine":39,"endColumn":75,"suggestions":"258"},{"ruleId":"250","severity":1,"message":"251","line":68,"column":31,"nodeType":"252","messageId":"253","endLine":68,"endColumn":73},{"ruleId":"250","severity":1,"message":"254","line":68,"column":38,"nodeType":"246","messageId":"255","endLine":68,"endColumn":47},{"ruleId":"234","severity":1,"message":"235","line":68,"column":44,"nodeType":"236","messageId":"237","endLine":68,"endColumn":47,"suggestions":"259"},{"ruleId":"250","severity":1,"message":"257","line":68,"column":49,"nodeType":"246","messageId":"255","endLine":68,"endColumn":69},{"ruleId":"234","severity":1,"message":"235","line":68,"column":66,"nodeType":"236","messageId":"237","endLine":68,"endColumn":69,"suggestions":"260"},{"ruleId":"250","severity":1,"message":"251","line":82,"column":32,"nodeType":"252","messageId":"253","endLine":82,"endColumn":74},{"ruleId":"250","severity":1,"message":"254","line":82,"column":39,"nodeType":"246","messageId":"255","endLine":82,"endColumn":48},{"ruleId":"234","severity":1,"message":"235","line":82,"column":45,"nodeType":"236","messageId":"237","endLine":82,"endColumn":48,"suggestions":"261"},{"ruleId":"250","severity":1,"message":"257","line":82,"column":50,"nodeType":"246","messageId":"255","endLine":82,"endColumn":70},{"ruleId":"234","severity":1,"message":"235","line":82,"column":67,"nodeType":"236","messageId":"237","endLine":82,"endColumn":70,"suggestions":"262"},{"ruleId":"234","severity":1,"message":"235","line":95,"column":37,"nodeType":"236","messageId":"237","endLine":95,"endColumn":40,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"235","line":97,"column":64,"nodeType":"236","messageId":"237","endLine":97,"endColumn":67,"suggestions":"264"},{"ruleId":"234","severity":1,"message":"235","line":145,"column":38,"nodeType":"236","messageId":"237","endLine":145,"endColumn":41,"suggestions":"265"},{"ruleId":"234","severity":1,"message":"235","line":14,"column":40,"nodeType":"236","messageId":"237","endLine":14,"endColumn":43,"suggestions":"266"},{"ruleId":"234","severity":1,"message":"235","line":15,"column":65,"nodeType":"236","messageId":"237","endLine":15,"endColumn":68,"suggestions":"267"},{"ruleId":"234","severity":1,"message":"235","line":15,"column":77,"nodeType":"236","messageId":"237","endLine":15,"endColumn":80,"suggestions":"268"},{"ruleId":"234","severity":1,"message":"235","line":15,"column":92,"nodeType":"236","messageId":"237","endLine":15,"endColumn":95,"suggestions":"269"},{"ruleId":"234","severity":1,"message":"235","line":30,"column":37,"nodeType":"236","messageId":"237","endLine":30,"endColumn":40,"suggestions":"270"},{"ruleId":"234","severity":1,"message":"235","line":65,"column":43,"nodeType":"236","messageId":"237","endLine":65,"endColumn":46,"suggestions":"271"},{"ruleId":"234","severity":1,"message":"235","line":74,"column":47,"nodeType":"236","messageId":"237","endLine":74,"endColumn":50,"suggestions":"272"},{"ruleId":"234","severity":1,"message":"235","line":82,"column":47,"nodeType":"236","messageId":"237","endLine":82,"endColumn":50,"suggestions":"273"},{"ruleId":"234","severity":1,"message":"235","line":92,"column":43,"nodeType":"236","messageId":"237","endLine":92,"endColumn":46,"suggestions":"274"},{"ruleId":"234","severity":1,"message":"235","line":101,"column":43,"nodeType":"236","messageId":"237","endLine":101,"endColumn":46,"suggestions":"275"},{"ruleId":"234","severity":1,"message":"235","line":10,"column":40,"nodeType":"236","messageId":"237","endLine":10,"endColumn":43,"suggestions":"276"},{"ruleId":"234","severity":1,"message":"235","line":11,"column":37,"nodeType":"236","messageId":"237","endLine":11,"endColumn":40,"suggestions":"277"},{"ruleId":"234","severity":1,"message":"235","line":17,"column":36,"nodeType":"236","messageId":"237","endLine":17,"endColumn":39,"suggestions":"278"},{"ruleId":"234","severity":1,"message":"235","line":57,"column":43,"nodeType":"236","messageId":"237","endLine":57,"endColumn":46,"suggestions":"279"},{"ruleId":"234","severity":1,"message":"235","line":10,"column":40,"nodeType":"236","messageId":"237","endLine":10,"endColumn":43,"suggestions":"280"},{"ruleId":"234","severity":1,"message":"235","line":11,"column":55,"nodeType":"236","messageId":"237","endLine":11,"endColumn":58,"suggestions":"281"},{"ruleId":"234","severity":1,"message":"235","line":11,"column":67,"nodeType":"236","messageId":"237","endLine":11,"endColumn":70,"suggestions":"282"},{"ruleId":"234","severity":1,"message":"235","line":11,"column":82,"nodeType":"236","messageId":"237","endLine":11,"endColumn":85,"suggestions":"283"},{"ruleId":"234","severity":1,"message":"235","line":18,"column":37,"nodeType":"236","messageId":"237","endLine":18,"endColumn":40,"suggestions":"284"},{"ruleId":"234","severity":1,"message":"235","line":48,"column":43,"nodeType":"236","messageId":"237","endLine":48,"endColumn":46,"suggestions":"285"},{"ruleId":"234","severity":1,"message":"235","line":56,"column":43,"nodeType":"236","messageId":"237","endLine":56,"endColumn":46,"suggestions":"286"},{"ruleId":"244","severity":1,"message":"287","line":2,"column":73,"nodeType":"246","messageId":"247","endLine":2,"endColumn":78},{"ruleId":"234","severity":1,"message":"235","line":80,"column":23,"nodeType":"236","messageId":"237","endLine":80,"endColumn":26,"suggestions":"288"},{"ruleId":"234","severity":1,"message":"235","line":36,"column":23,"nodeType":"236","messageId":"237","endLine":36,"endColumn":26,"suggestions":"289"},{"ruleId":"234","severity":1,"message":"235","line":29,"column":36,"nodeType":"236","messageId":"237","endLine":29,"endColumn":39,"suggestions":"290"},{"ruleId":"244","severity":1,"message":"291","line":36,"column":36,"nodeType":"246","messageId":"247","endLine":36,"endColumn":50},{"ruleId":"234","severity":1,"message":"235","line":38,"column":23,"nodeType":"236","messageId":"237","endLine":38,"endColumn":26,"suggestions":"292"},{"ruleId":"250","severity":1,"message":"293","line":22,"column":33,"nodeType":"294","messageId":"295","endLine":22,"endColumn":46},{"ruleId":"234","severity":1,"message":"235","line":22,"column":43,"nodeType":"236","messageId":"237","endLine":22,"endColumn":46,"suggestions":"296"},{"ruleId":"234","severity":1,"message":"235","line":36,"column":8,"nodeType":"236","messageId":"237","endLine":36,"endColumn":11,"suggestions":"297"},{"ruleId":"234","severity":1,"message":"235","line":18,"column":25,"nodeType":"236","messageId":"237","endLine":18,"endColumn":28,"suggestions":"298"},{"ruleId":"234","severity":1,"message":"235","line":19,"column":27,"nodeType":"236","messageId":"237","endLine":19,"endColumn":30,"suggestions":"299"},{"ruleId":"234","severity":1,"message":"235","line":25,"column":42,"nodeType":"236","messageId":"237","endLine":25,"endColumn":45,"suggestions":"300"},{"ruleId":"234","severity":1,"message":"235","line":25,"column":54,"nodeType":"236","messageId":"237","endLine":25,"endColumn":57,"suggestions":"301"},{"ruleId":"234","severity":1,"message":"235","line":63,"column":45,"nodeType":"236","messageId":"237","endLine":63,"endColumn":48,"suggestions":"302"},{"ruleId":"234","severity":1,"message":"235","line":63,"column":57,"nodeType":"236","messageId":"237","endLine":63,"endColumn":60,"suggestions":"303"},{"ruleId":"244","severity":1,"message":"304","line":1,"column":35,"nodeType":"246","messageId":"247","endLine":1,"endColumn":41},{"ruleId":"244","severity":1,"message":"305","line":1,"column":43,"nodeType":"246","messageId":"247","endLine":1,"endColumn":47},{"ruleId":"244","severity":1,"message":"306","line":1,"column":49,"nodeType":"246","messageId":"247","endLine":1,"endColumn":53},{"ruleId":"244","severity":1,"message":"307","line":1,"column":55,"nodeType":"246","messageId":"247","endLine":1,"endColumn":58},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["308","309"],["310","311"],["312","313"],["314","315"],["316","317"],["318","319"],"@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar",["320","321"],["322","323"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","anyTypedArg",["324","325"],"Argument 'additionalData' should be typed with a non-any type.",["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],"'Alert' is defined but never used.",["384","385"],["386","387"],["388","389"],"'values' is defined but never used.",["390","391"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["392","393"],["394","395"],["396","397"],["398","399"],["400","401"],["402","403"],["404","405"],["406","407"],"'Button' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'Box' is defined but never used.",{"messageId":"408","fix":"409","desc":"410"},{"messageId":"411","fix":"412","desc":"413"},{"messageId":"408","fix":"414","desc":"410"},{"messageId":"411","fix":"415","desc":"413"},{"messageId":"408","fix":"416","desc":"410"},{"messageId":"411","fix":"417","desc":"413"},{"messageId":"408","fix":"418","desc":"410"},{"messageId":"411","fix":"419","desc":"413"},{"messageId":"408","fix":"420","desc":"410"},{"messageId":"411","fix":"421","desc":"413"},{"messageId":"408","fix":"422","desc":"410"},{"messageId":"411","fix":"423","desc":"413"},{"messageId":"408","fix":"424","desc":"410"},{"messageId":"411","fix":"425","desc":"413"},{"messageId":"408","fix":"426","desc":"410"},{"messageId":"411","fix":"427","desc":"413"},{"messageId":"408","fix":"428","desc":"410"},{"messageId":"411","fix":"429","desc":"413"},{"messageId":"408","fix":"430","desc":"410"},{"messageId":"411","fix":"431","desc":"413"},{"messageId":"408","fix":"432","desc":"410"},{"messageId":"411","fix":"433","desc":"413"},{"messageId":"408","fix":"434","desc":"410"},{"messageId":"411","fix":"435","desc":"413"},{"messageId":"408","fix":"436","desc":"410"},{"messageId":"411","fix":"437","desc":"413"},{"messageId":"408","fix":"438","desc":"410"},{"messageId":"411","fix":"439","desc":"413"},{"messageId":"408","fix":"440","desc":"410"},{"messageId":"411","fix":"441","desc":"413"},{"messageId":"408","fix":"442","desc":"410"},{"messageId":"411","fix":"443","desc":"413"},{"messageId":"408","fix":"444","desc":"410"},{"messageId":"411","fix":"445","desc":"413"},{"messageId":"408","fix":"446","desc":"410"},{"messageId":"411","fix":"447","desc":"413"},{"messageId":"408","fix":"448","desc":"410"},{"messageId":"411","fix":"449","desc":"413"},{"messageId":"408","fix":"450","desc":"410"},{"messageId":"411","fix":"451","desc":"413"},{"messageId":"408","fix":"452","desc":"410"},{"messageId":"411","fix":"453","desc":"413"},{"messageId":"408","fix":"454","desc":"410"},{"messageId":"411","fix":"455","desc":"413"},{"messageId":"408","fix":"456","desc":"410"},{"messageId":"411","fix":"457","desc":"413"},{"messageId":"408","fix":"458","desc":"410"},{"messageId":"411","fix":"459","desc":"413"},{"messageId":"408","fix":"460","desc":"410"},{"messageId":"411","fix":"461","desc":"413"},{"messageId":"408","fix":"462","desc":"410"},{"messageId":"411","fix":"463","desc":"413"},{"messageId":"408","fix":"464","desc":"410"},{"messageId":"411","fix":"465","desc":"413"},{"messageId":"408","fix":"466","desc":"410"},{"messageId":"411","fix":"467","desc":"413"},{"messageId":"408","fix":"468","desc":"410"},{"messageId":"411","fix":"469","desc":"413"},{"messageId":"408","fix":"470","desc":"410"},{"messageId":"411","fix":"471","desc":"413"},{"messageId":"408","fix":"472","desc":"410"},{"messageId":"411","fix":"473","desc":"413"},{"messageId":"408","fix":"474","desc":"410"},{"messageId":"411","fix":"475","desc":"413"},{"messageId":"408","fix":"476","desc":"410"},{"messageId":"411","fix":"477","desc":"413"},{"messageId":"408","fix":"478","desc":"410"},{"messageId":"411","fix":"479","desc":"413"},{"messageId":"408","fix":"480","desc":"410"},{"messageId":"411","fix":"481","desc":"413"},{"messageId":"408","fix":"482","desc":"410"},{"messageId":"411","fix":"483","desc":"413"},{"messageId":"408","fix":"484","desc":"410"},{"messageId":"411","fix":"485","desc":"413"},{"messageId":"408","fix":"486","desc":"410"},{"messageId":"411","fix":"487","desc":"413"},{"messageId":"408","fix":"488","desc":"410"},{"messageId":"411","fix":"489","desc":"413"},{"messageId":"408","fix":"490","desc":"410"},{"messageId":"411","fix":"491","desc":"413"},{"messageId":"408","fix":"492","desc":"410"},{"messageId":"411","fix":"493","desc":"413"},{"messageId":"408","fix":"494","desc":"410"},{"messageId":"411","fix":"495","desc":"413"},{"messageId":"408","fix":"496","desc":"410"},{"messageId":"411","fix":"497","desc":"413"},{"messageId":"408","fix":"498","desc":"410"},{"messageId":"411","fix":"499","desc":"413"},{"messageId":"408","fix":"500","desc":"410"},{"messageId":"411","fix":"501","desc":"413"},{"messageId":"408","fix":"502","desc":"410"},{"messageId":"411","fix":"503","desc":"413"},{"messageId":"408","fix":"504","desc":"410"},{"messageId":"411","fix":"505","desc":"413"},{"messageId":"408","fix":"506","desc":"410"},{"messageId":"411","fix":"507","desc":"413"},{"messageId":"408","fix":"508","desc":"410"},{"messageId":"411","fix":"509","desc":"413"},{"messageId":"408","fix":"510","desc":"410"},{"messageId":"411","fix":"511","desc":"413"},"suggestUnknown",{"range":"512","text":"513"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"512","text":"514"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"515","text":"513"},{"range":"515","text":"514"},{"range":"516","text":"513"},{"range":"516","text":"514"},{"range":"517","text":"513"},{"range":"517","text":"514"},{"range":"518","text":"513"},{"range":"518","text":"514"},{"range":"519","text":"513"},{"range":"519","text":"514"},{"range":"520","text":"513"},{"range":"520","text":"514"},{"range":"521","text":"513"},{"range":"521","text":"514"},{"range":"522","text":"513"},{"range":"522","text":"514"},{"range":"523","text":"513"},{"range":"523","text":"514"},{"range":"524","text":"513"},{"range":"524","text":"514"},{"range":"525","text":"513"},{"range":"525","text":"514"},{"range":"526","text":"513"},{"range":"526","text":"514"},{"range":"527","text":"513"},{"range":"527","text":"514"},{"range":"528","text":"513"},{"range":"528","text":"514"},{"range":"529","text":"513"},{"range":"529","text":"514"},{"range":"530","text":"513"},{"range":"530","text":"514"},{"range":"531","text":"513"},{"range":"531","text":"514"},{"range":"532","text":"513"},{"range":"532","text":"514"},{"range":"533","text":"513"},{"range":"533","text":"514"},{"range":"534","text":"513"},{"range":"534","text":"514"},{"range":"535","text":"513"},{"range":"535","text":"514"},{"range":"536","text":"513"},{"range":"536","text":"514"},{"range":"537","text":"513"},{"range":"537","text":"514"},{"range":"538","text":"513"},{"range":"538","text":"514"},{"range":"539","text":"513"},{"range":"539","text":"514"},{"range":"540","text":"513"},{"range":"540","text":"514"},{"range":"541","text":"513"},{"range":"541","text":"514"},{"range":"542","text":"513"},{"range":"542","text":"514"},{"range":"543","text":"513"},{"range":"543","text":"514"},{"range":"544","text":"513"},{"range":"544","text":"514"},{"range":"545","text":"513"},{"range":"545","text":"514"},{"range":"546","text":"513"},{"range":"546","text":"514"},{"range":"547","text":"513"},{"range":"547","text":"514"},{"range":"548","text":"513"},{"range":"548","text":"514"},{"range":"549","text":"513"},{"range":"549","text":"514"},{"range":"550","text":"513"},{"range":"550","text":"514"},{"range":"551","text":"513"},{"range":"551","text":"514"},{"range":"552","text":"513"},{"range":"552","text":"514"},{"range":"553","text":"513"},{"range":"553","text":"514"},{"range":"554","text":"513"},{"range":"554","text":"514"},{"range":"555","text":"513"},{"range":"555","text":"514"},{"range":"556","text":"513"},{"range":"556","text":"514"},{"range":"557","text":"513"},{"range":"557","text":"514"},{"range":"558","text":"513"},{"range":"558","text":"514"},{"range":"559","text":"513"},{"range":"559","text":"514"},{"range":"560","text":"513"},{"range":"560","text":"514"},{"range":"561","text":"513"},{"range":"561","text":"514"},{"range":"562","text":"513"},{"range":"562","text":"514"},{"range":"563","text":"513"},{"range":"563","text":"514"},[660,663],"unknown","never",[2244,2247],[2256,2259],[272,275],[165,168],[199,202],[548,551],[899,902],[1289,1292],[1311,1314],[2156,2159],[2178,2181],[2561,2564],[2583,2586],[2937,2940],[2605,2608],[4905,4908],[653,656],[730,733],[742,745],[757,760],[1264,1267],[2669,2672],[3092,3095],[3481,3484],[3906,3909],[4310,4313],[454,457],[503,506],[689,692],[2315,2318],[446,449],[513,516],[525,528],[540,543],[865,868],[2021,2024],[2383,2386],[3490,3493],[1293,1296],[998,1001],[1336,1339],[636,639],[897,900],[501,504],[543,546],[769,772],[781,784],[2771,2774],[2783,2786]]