[{"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx":"1","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts":"2","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx":"3","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx":"5","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx":"6","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx":"7","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx":"8","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx":"9","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx":"10","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx":"11","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx":"12","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx":"13","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx":"14","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx":"15","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx":"16","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx":"17","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx":"18","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx":"19","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx":"20","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx":"21","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx":"22","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx":"23","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx":"24","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx":"25","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx":"26","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx":"27","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx":"28","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx":"29","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx":"30","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImageForm.tsx":"31","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx":"32","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx":"33","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftData.tsx":"34","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx":"35","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx":"36","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightData.tsx":"37","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerData.tsx":"38","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\Footer.tsx":"39","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainDivider.tsx":"40","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterData.tsx":"41","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterElements.tsx":"42"},{"size":540,"mtime":1608998287134,"results":"43","hashOfConfig":"44"},{"size":545,"mtime":1608486025945,"results":"45","hashOfConfig":"44"},{"size":311,"mtime":1609011530055,"results":"46","hashOfConfig":"44"},{"size":3477,"mtime":1609868079375,"results":"47","hashOfConfig":"44"},{"size":1301,"mtime":1609788427662,"results":"48","hashOfConfig":"44"},{"size":752,"mtime":1609790793814,"results":"49","hashOfConfig":"44"},{"size":806,"mtime":1609082645004,"results":"50","hashOfConfig":"44"},{"size":495,"mtime":1609012165540,"results":"51","hashOfConfig":"44"},{"size":3049,"mtime":1609852371428,"results":"52","hashOfConfig":"44"},{"size":760,"mtime":1609870031950,"results":"53","hashOfConfig":"44"},{"size":626,"mtime":1608857185535,"results":"54","hashOfConfig":"44"},{"size":1847,"mtime":1609892491424,"results":"55","hashOfConfig":"44"},{"size":1297,"mtime":1609595486719,"results":"56","hashOfConfig":"44"},{"size":3233,"mtime":1609374315168,"results":"57","hashOfConfig":"44"},{"size":212,"mtime":1609595768798,"results":"58","hashOfConfig":"44"},{"size":5419,"mtime":1609856108005,"results":"59","hashOfConfig":"44"},{"size":2148,"mtime":1609852491076,"results":"60","hashOfConfig":"44"},{"size":1452,"mtime":1609789866135,"results":"61","hashOfConfig":"44"},{"size":640,"mtime":1609288487918,"results":"62","hashOfConfig":"44"},{"size":1414,"mtime":1609783874449,"results":"63","hashOfConfig":"44"},{"size":1570,"mtime":1609783077972,"results":"64","hashOfConfig":"44"},{"size":1086,"mtime":1609868629659,"results":"65","hashOfConfig":"44"},{"size":1452,"mtime":1609595733036,"results":"66","hashOfConfig":"44"},{"size":5459,"mtime":1609592989567,"results":"67","hashOfConfig":"44"},{"size":3170,"mtime":1609593004274,"results":"68","hashOfConfig":"44"},{"size":3708,"mtime":1609591426559,"results":"69","hashOfConfig":"44"},{"size":656,"mtime":1609591335932,"results":"70","hashOfConfig":"44"},{"size":7844,"mtime":1609884591691,"results":"71","hashOfConfig":"44"},{"size":403,"mtime":1609607866856,"results":"72","hashOfConfig":"44"},{"size":3608,"mtime":1609609115733,"results":"73","hashOfConfig":"44"},{"size":3789,"mtime":1609609898363,"results":"74","hashOfConfig":"44"},{"size":5708,"mtime":1609886939911,"results":"75","hashOfConfig":"44"},{"size":3320,"mtime":1609886883470,"results":"76","hashOfConfig":"44"},{"size":564,"mtime":1609782999597,"results":"77","hashOfConfig":"44"},{"size":4544,"mtime":1609853850411,"results":"78","hashOfConfig":"44"},{"size":3729,"mtime":1609887661933,"results":"79","hashOfConfig":"44"},{"size":1743,"mtime":1609848889840,"results":"80","hashOfConfig":"44"},{"size":1405,"mtime":1609852341237,"results":"81","hashOfConfig":"44"},{"size":3691,"mtime":1609894663149,"results":"82","hashOfConfig":"44"},{"size":556,"mtime":1609882164570,"results":"83","hashOfConfig":"44"},{"size":817,"mtime":1609883422577,"results":"84","hashOfConfig":"44"},{"size":950,"mtime":1609883940026,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"15bsiaf",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx",["184"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { TopNav, Image, Input, Flex, } from 'bumbag';\r\nimport { Navlink, NavDivider } from './Navlink';\r\nimport NavText from './NavText';\r\nimport { UserPopover } from './UserPopover';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { navData } from './NavData';\r\nimport { NavImage } from './UserPopoverElements'\r\nimport { DarkMode } from '../DarkMode';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\n\r\n\r\nexport function Navbar(): JSX.Element {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL }: any = user;\r\n    return (\r\n        <TopNav margin={'0 2rem'}>\r\n            <TopNav.Section>\r\n                <Navlink key={10} href=\"/\" style={{ marginLeft: '0' }}>\r\n                    <Image src=\"/logo.png\" height=\"35px\" />\r\n                </Navlink>\r\n                <Flex style={{ alignItems: 'center' }}>\r\n                    <Input\r\n                        before={<Input.Icon icon=\"solid-search\" />}\r\n                        placeholder=\"Search\"\r\n                        style={{ marginLeft: '5px' }}\r\n                        size=\"small\"\r\n                        width=\"250px\"\r\n                        marginRight=\"6rem\"\r\n                    />\r\n                </Flex>\r\n            </TopNav.Section>\r\n            <TopNav.Section >\r\n                {navData.map((navElement, index) => {\r\n                    return (\r\n                        <>\r\n                            <Navlink\r\n                                key={index}\r\n                                href={navElement.navHref}\r\n                                style={\r\n                                    navElement.navIcon === 'user' ?\r\n                                        { paddingRight: '1rem' } :\r\n                                        navElement.navIcon === '' ?\r\n                                            {\r\n                                                color: '#5d3b09',\r\n                                                fontSize: '0.75rem',\r\n                                                fontWeight: 'lighter',\r\n                                                width: '90px',\r\n                                                textAlign: 'center',\r\n                                            } :\r\n                                            undefined\r\n                                }\r\n                            >\r\n                                {navElement.navIcon !== 'user' && <NavIcon aria-label=\"Navlcon\" icon={`solid-${navElement.navIcon}`} />}\r\n                                {navElement.navIcon === 'user' && <NavImage src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                    alt=\"Profile Picture\" width={'30px'} />}\r\n\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <NavText>{navElement.navText}</NavText>\r\n                                    {navElement.navIcon === 'user' && <UserPopover />}\r\n                                    {navElement.navIcon === 'th' && <SideDrawer />}\r\n                                </div>\r\n                            </Navlink>\r\n                            {navElement.navIcon === 'user' && <NavDivider />}\r\n                        </>\r\n                    );\r\n                })}\r\n                <DarkMode />\r\n            </TopNav.Section>\r\n        </TopNav >\r\n    );\r\n}\r\n\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx",["185","186"],"import React from 'react';\r\nimport { Drawer, Card, Flex } from 'bumbag';\r\nimport {\r\n    CustomDrawer,\r\n    NavHeader,\r\n    SideDrawerIconContainer,\r\n    NavImage,\r\n    NavText,\r\n    NavSubHeader,\r\n    NavSubText,\r\n} from './SideDrawerElements';\r\nimport { sideDrawerData, iconData } from './SideDrawerData';\r\nimport { PopoverIcon } from './UserPopoverElements';\r\n\r\nexport function SideDrawer(): JSX.Element {\r\n    return (\r\n        <Drawer.State animated>\r\n            <Drawer.Disclosure style={{ height: '5px', marginTop: '-7px' }}>\r\n                <PopoverIcon />\r\n            </Drawer.Disclosure>\r\n            <CustomDrawer placement=\"right\" style={{ marginTop: '58px', borderRadius: '8px 8px 0 0' }} fade slide>\r\n                <Card style={{ margin: '1.5rem', padding: '2px 0 0 0' }}>\r\n                    <NavHeader>Visit More Linkedin Products</NavHeader>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px', padding: '20px ' }}>\r\n                        <Flex\r\n                            style={{\r\n                                flexWrap: 'wrap',\r\n                                justifyContent: 'space-between',\r\n                                maxWidth: '325px',\r\n                            }}\r\n                        >\r\n                            {iconData.map((icon, index) => {\r\n                                return (\r\n                                    <Flex key={index} style={{ flexDirection: 'column' }}>\r\n                                        <SideDrawerIconContainer>\r\n                                            <NavImage alt=\"Linked icon\" src={icon.src} />\r\n                                        </SideDrawerIconContainer>\r\n                                        <NavText>{icon.text}</NavText>\r\n                                    </Flex>\r\n                                );\r\n                            })}\r\n                        </Flex>\r\n                    </Card>\r\n                </Card>\r\n                <Card style={{ margin: '1.5rem', padding: '2px 0 0 0' }}>\r\n                    <NavHeader>LinkedIn Business Services</NavHeader>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px' }}>\r\n                        {sideDrawerData.map((data: any, index: any) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <NavSubHeader>{data.header}</NavSubHeader>\r\n                                    <NavSubText>{data.text}</NavSubText>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Card>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px', padding: '0.5rem 1.5rem' }}>\r\n                        <NavSubHeader>\r\n                            Create a Company Page <span style={{ fontSize: '1.5rem' }}>+</span>\r\n                        </NavSubHeader>\r\n                    </Card>\r\n                </Card>\r\n            </CustomDrawer>\r\n        </Drawer.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx",["187"],"import React, { useState } from 'react';\r\nimport { Switch, useColorMode } from 'bumbag';\r\n\r\nexport function DarkMode(): JSX.Element {\r\n    const [checked, setChecked] = useState(true);\r\n    const { colorMode, setColorMode } = useColorMode();\r\n    const handleChange = (e: any) => {\r\n        setChecked(e.target.checked);\r\n        colorMode === 'default' ? setColorMode('dark') : setColorMode('default');\r\n    };\r\n    return (\r\n        <Switch\r\n            colorMode={colorMode}\r\n            style={{ marginLeft: '0.5rem' }}\r\n            checked={checked}\r\n            onChange={(e) => handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx",["188","189","190","191"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\n\r\ntype UserContextType = {\r\n    user: any;\r\n    setUser: React.Dispatch<any>;\r\n};\r\nexport const UserContext = createContext<UserContextType>({\r\n    user: null,\r\n    setUser: (user) => console.warn('no user provider now'),\r\n});\r\n\r\ninterface ProviderProps {\r\n    children: React.ReactNode;\r\n}\r\nexport function UserProvider(props: React.PropsWithChildren<ProviderProps>): JSX.Element {\r\n    const [user, setUser] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        setUser('loading');\r\n        auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                if (auth?.currentUser?.providerData[0]?.providerId === 'google.com') {\r\n                    setUser(userAuth);\r\n                } else {\r\n                    const user = await generateUserDocument(userAuth);\r\n                    setUser(user);\r\n                }\r\n            } else {\r\n                setUser(null);\r\n            }\r\n            // console.log('provider');\r\n            // console.log(auth?.currentUser?.providerData[0]?.providerId);\r\n        });\r\n    }, []);\r\n    return <UserContext.Provider value={{ user, setUser }}>{props.children}</UserContext.Provider>;\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCM7nvbFKElRyhTtAbCWmz5eSHWvG6_ex4',\r\n    authDomain: 'linkedin-profile-358a8.firebaseapp.com',\r\n    projectId: 'linkedin-profile-358a8',\r\n    storageBucket: 'linkedin-profile-358a8.appspot.com',\r\n    messagingSenderId: '674279447289',\r\n    appId: '1:674279447289:web:63424a18728b9ff403e028',\r\n    measurementId: 'G-XZNCK36PGF',\r\n};\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const storage = firebaseApp.storage();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// signin for google Sign In\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = (): any => {\r\n    auth.signInWithPopup(provider);\r\n};\r\n//signout for google Sign Out\r\nexport const logOut = () => {\r\n    auth.signOut()\r\n        .then(() => {\r\n            console.log('logged out');\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        });\r\n};\r\n\r\n// email and password login implementation\r\nexport const generateUserDocument = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email, displayName, photoURL } = user;\r\n\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                photoURL,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    } else {\r\n        try {\r\n            await userRef.update({\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error updating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n//update user data\r\nexport const updateUserData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\n//update image data\r\nexport const updateImageData = async (user: any, additionalData?: any) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    try {\r\n        await userRef.update({\r\n            ...additionalData,\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating user document', error);\r\n    }\r\n\r\n    return getUserDocument(user.uid);\r\n};\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n    }\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx",["210","211"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { Text, Box, Popover, Link, Divider, Flex, Button, Stack, Set, Image, applyTheme } from 'bumbag';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { logOut } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { data } from '../profile/MainProfileLeftData';\r\n\r\nexport const NavText = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'lighter',\r\n            fontSize: '14px',\r\n            display: 'block',\r\n            lineHeight: '2rem',\r\n        },\r\n    },\r\n});\r\nexport const NavHeader = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'bold',\r\n            display: 'block',\r\n            lineHeight: '1.25rem',\r\n            marginTop: '0.5rem',\r\n        },\r\n    },\r\n});\r\nexport const NavButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'light',\r\n            width: '100%',\r\n            fontSize: '14px',\r\n            minHeight: '1rem',\r\n            marginBottom: '1rem',\r\n            borderRadius: '1rem',\r\n            ':focus': {\r\n                boxShadow: 'none!important',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const NavImage = applyTheme(Image, {\r\n    styles: {\r\n        base: {\r\n            borderRadius: '50%',\r\n            width: '50px',\r\n        },\r\n    },\r\n});\r\nexport const PageLink = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: '#545454',\r\n            textDecoration: 'none',\r\n            margin: '0px',\r\n            ':hover': {\r\n                textDecoration: 'none',\r\n                color: '#000',\r\n            },\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const CustomPopover = applyTheme(Popover, {\r\n    styles: {\r\n        base: {\r\n            padding: '0px',\r\n            width: '270px',\r\n            ':focus': {\r\n                color: '#545454',\r\n            },\r\n            ':focus-within': {\r\n                color: '#545454',\r\n            },\r\n            ':hover': {\r\n                color: '#545454',\r\n            },\r\n            ':active': {\r\n                color: '#545454',\r\n            },\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const PopoverContent: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL, name, lastName, displayName, headline }: any = user;\r\n    return (\r\n        <Box>\r\n            <Stack>\r\n                <Box>\r\n                    <Flex alignX=\"center\" alignY=\"center\" style={{ position: 'relative' }}>\r\n                        <Box style={{ position: 'absolute', top: 0, left: 0 }}>\r\n                            <NavImage\r\n                                src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                alt=\"Profile Picture\"\r\n                            />\r\n                        </Box>\r\n                        <Box style={{ marginLeft: '3.5rem', fontSize: '1rem' }}>\r\n                            <NavHeader style={{ marginTop: '0', textTransform: 'capitalize' }}>\r\n                                {name && lastName\r\n                                    ? `${name} ${lastName}`\r\n                                    : displayName\r\n                                        ? displayName\r\n                                        : // eslint-disable-next-line prettier/prettier\r\n                                        `${data[0].basic.name} ${data[0].basic.lastname}`}\r\n                            </NavHeader>\r\n                            <NavText style={{ lineHeight: '1rem' }}>{headline ? headline : data[0].basic.headline}</NavText>\r\n                        </Box>\r\n                    </Flex>\r\n                </Box>\r\n                <Set>\r\n                    <NavButton variant=\"outlined\" palette=\"primary\" width=\"100%\">\r\n                        View Profile\r\n                    </NavButton>\r\n                </Set>\r\n            </Stack>\r\n\r\n            <Text.Block>\r\n                <Divider />\r\n                <NavHeader>Account</NavHeader>\r\n                <NavText>Settings & Privacy</NavText>\r\n                <NavText>Help</NavText>\r\n                <NavText>Language</NavText>\r\n                <Divider />\r\n                <NavHeader fontWeight=\"bold\">Manage</NavHeader>\r\n                <NavText>Posts & Activity</NavText>\r\n                <NavText>Job Posting Account</NavText>\r\n                <Divider />\r\n                <PageLink fontWeight={'normal'} fontSize={'14px'} alignItems={'flex-start'} onClick={logOut} href='/'>Sign Out</PageLink>\r\n            </Text.Block>\r\n        </Box>\r\n    );\r\n};\r\nexport const PopoverIcon: React.FC | any = () => {\r\n    return (\r\n        <NavIcon\r\n            aria-label=\"Navlcon\"\r\n            icon=\"solid-sort-down\"\r\n            style={{\r\n                margin: 0,\r\n                padding: 0,\r\n                width: '25px',\r\n                height: '20px',\r\n                position: 'relative',\r\n                top: '-5px',\r\n            }}\r\n        />\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAbout.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageContent.tsx",["212"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainPageLogin.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignUp.tsx",["213","214","215","216","217","218","219","220","221","222"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle } from '../../firebase';\r\nimport { auth, generateUserDocument } from '../../firebase';\r\n\r\nexport function SignUp(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const createUserWithEmailAndPasswordHandler = async (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            generateUserDocument(user, { email, name, lastName, displayName });\r\n        } catch (error) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n        setDisplayName('');\r\n        setName('');\r\n        setLastName('');\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        } else if (name === 'displayName') {\r\n            setDisplayName(value);\r\n        } else if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'lastName') {\r\n            setLastName(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Sign Up\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        label=\"Display name\"\r\n                        name=\"displayName\"\r\n                        id=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder=\"Enter your display name\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <FieldStack orientation=\"horizontal\">\r\n                        <InputField\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={name}\r\n                            placeholder=\"Enter your  name\"\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                        <InputField\r\n                            label=\"Last name\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            placeholder=\"Enter your last name\"\r\n                            onChange={(event: any) => onChangeHandler(event)}\r\n                        />\r\n                    </FieldStack>\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"userPassword\"\r\n                        id=\"userPassword\"\r\n                        value={password}\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => {\r\n                            createUserWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Already have an account?</Text> <Link to=\"/signin\">Sign in here</Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                        Sign In With Google\r\n                    </Button>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\PasswordReset.tsx",["223","224","225","226"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport function PasswordReset(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n    };\r\n    const sendResetEmail = (event: any) => {\r\n        event.preventDefault();\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => {\r\n                    setEmailHasBeenSent(false);\r\n                }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setError('Error resetting password');\r\n            });\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Reset Your Password\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {emailHasBeenSent && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>An email has been sent to you!</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => sendResetEmail(event)}\r\n                    >\r\n                        Send me a reset link\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>Go Back to Sign In?</Text> <Link to=\"/signin\"> &larr; Sign In</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\SignIn.tsx",["227","228","229","230","231","232","233"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginWrapper } from './LoginWrapper';\r\nimport { signInWithGoogle, auth } from '../../firebase';\r\n\r\nexport function SignIn(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const signInWithEmailAndPasswordHandler = (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((error) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', error);\r\n        });\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    return (\r\n        <LoginWrapper>\r\n            <Box>\r\n                <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                    <Text use=\"strong\" fontSize={'2rem'}>\r\n                        Sign In\r\n                    </Text>\r\n                </Text.Block>\r\n                <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n                <FieldStack>\r\n                    {error !== null && (\r\n                        <Text.Block margin={'1rem auto'}>\r\n                            <Text fontSize={'1rem'}>{error}</Text>\r\n                        </Text.Block>\r\n                    )}\r\n                    <InputField\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"userEmail\"\r\n                        id=\"userEmail\"\r\n                        placeholder=\"Enter your email\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"userPassword\"\r\n                        name=\"userPassword\"\r\n                        placeholder=\"Enter your password\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <Button\r\n                        palette=\"primary\"\r\n                        width={'100%'}\r\n                        textTransform={'uppercase'}\r\n                        onClick={(event) => {\r\n                            signInWithEmailAndPasswordHandler(event, email, password);\r\n                        }}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                        <Text fontSize={'1rem'}>Or</Text>\r\n                    </Text.Block>\r\n                    <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                        Sign In With Google\r\n                    </Button>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>Dont have an account?</Text>{' '}\r\n                        <Link to=\"/signUp\">Go to Sign Up &rarr; </Link>\r\n                    </Text.Block>\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Link to=\"/passwordReset\">Forgot Password?</Link>\r\n                    </Text.Block>\r\n                </FieldStack>\r\n            </Box>\r\n        </LoginWrapper>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\login\\LoginWrapper.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntroForm.tsx",["234","235"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Card, Button, FieldStack, InputField, Flex, applyTheme, Alert } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { ProfileImg, BackgroundImg, MainPageIconContainerSec } from '../profile/MainProfileLeftElements';\r\nimport { UpdateModalImage } from './UpdateModalImage';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\n\r\nconst ModalButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n    type: 'submit',\r\n});\r\ninterface Values {\r\n    name: string;\r\n    lastName: string;\r\n    headline: string;\r\n    company: string;\r\n    education: string;\r\n    country: string;\r\n    location: string;\r\n    industry: string;\r\n}\r\nconst UpdateModalIntroSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .min(2, 'Too short for your name! It must be at least 2 characters long.')\r\n        .max(50, 'Too long for your name! It must be at most 50 characters long.')\r\n        .required('Required'),\r\n    lastName: Yup.string()\r\n        .min(2, 'Too short for your last name! It must be at least 2 characters long.')\r\n        .max(50, 'Too long for your last name! It must be at most 50 characters long.')\r\n        .required('Required'),\r\n    headline: Yup.string()\r\n        .min(5, 'Too short for your headline! It must be at least 5 characters long.')\r\n        .max(250, 'Too long for your headline! It must be at most 250 characters long.')\r\n        .required('Required'),\r\n    company: Yup.string()\r\n        .min(2, 'Too short for your company! It must be at least 2 characters long.')\r\n        .max(150, 'Too long for your company! It must be at most 150 characters long.'),\r\n    education: Yup.string()\r\n        .min(2, 'Too short for your education! It must be at least 2 characters long.')\r\n        .max(250, 'Too long for your education! It must be at most 250 characters long.'),\r\n    country: Yup.string()\r\n        .min(2, 'Too short for your country! It must be at least 2 characters long.')\r\n        .max(100, 'Too long for your country! It must be at most 100 characters long.')\r\n        .required('Required'),\r\n    location: Yup.string()\r\n        .min(2, 'Too short for your location! It must be at least 2 characters long.')\r\n        .max(100, 'Too long for your location! It must be at most 100 characters long.'),\r\n    industry: Yup.string()\r\n        .min(2, 'Too short for your industry! It must be at least 2 characters long.')\r\n        .max(250, 'Too long for your industry! It must be at most 250 characters long.')\r\n        .required('Required'),\r\n    // email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\nexport function UpdateModalIntroForm(): JSX.Element {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL } = user;\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        name: '',\r\n        lastName: '',\r\n        headline: '',\r\n        company: '',\r\n        education: '',\r\n        country: '',\r\n        location: '',\r\n        industry: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalIntroSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Card\r\n                            style={{\r\n                                padding: 0,\r\n                                borderRadius: '0.5rem 05.rem 0 0',\r\n                                position: 'relative',\r\n                                marginBottom: '6rem',\r\n                                height: '170px',\r\n                            }}\r\n                        >\r\n                            <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" width={'100%'} />\r\n                            <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n                            <MainPageIconContainerSec\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    left: '7.5rem',\r\n                                    bottom: '-4rem',\r\n                                    background: '#fff',\r\n                                    boxShadow: '0 0 4px 0px #aaa',\r\n                                }}\r\n                            >\r\n                                <UpdateModalImage />\r\n                            </MainPageIconContainerSec>\r\n                        </Card>\r\n                        <FieldStack orientation=\"horizontal\">\r\n                            <Field component={InputField.Formik} name=\"name\" label=\"First name\" isRequired />\r\n                            <Field component={InputField.Formik} name=\"lastName\" label=\"Last name\" isRequired />\r\n                        </FieldStack>\r\n                        <Field component={InputField.Formik} name=\"headline\" label=\"Headline\" isRequired />\r\n                        <Field component={InputField.Formik} name=\"company\" label=\"Company\" />\r\n                        <Field component={InputField.Formik} name=\"education\" label=\"Education\" />\r\n                        <Field component={InputField.Formik} name=\"country\" label=\"Country\" isRequired />\r\n                        <Field component={InputField.Formik} name=\"location\" label=\"Location\" />\r\n                        <Field component={InputField.Formik} name=\"industry\" label=\"Industry\" isRequired />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your About Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update About info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateMessage.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalAboutForm.tsx",["236"],"import React, { useContext, useState } from 'react';\r\nimport { Modal, Button, FieldStack, TextareaField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateUserData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { UpdateMessage } from './UpdateMessage';\r\nimport * as Yup from 'yup';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\n\r\ninterface Values {\r\n    about: string;\r\n}\r\nconst UpdateModalAboutSchema = Yup.object().shape({\r\n    about: Yup.string()\r\n        .min(10, 'Too short for your about section! It must be at least 10 characters long.')\r\n        .max(350, 'Too long for your about section! It must be at most 350 characters long.')\r\n        .required('Required'),\r\n});\r\nexport function UpdateModalAboutForm(): JSX.Element {\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n    const initialValues: Values = {\r\n        about: '',\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateUserData(user, values);\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            validationSchema={UpdateModalAboutSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field component={TextareaField.Formik} name=\"about\" label=\"Summary\" minHeight={'7rem'} />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your Intro Info.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update Intro info, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalImageForm.tsx",["237","238","239"],"import React, { useState, useContext } from 'react';\r\nimport { Modal, Button, FieldStack, InputField, Flex, applyTheme } from 'bumbag';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { auth, updateImageData } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { storage } from '../../firebase';\r\nimport { UpdateMessage } from './UpdateMessage';\r\n\r\nexport const ModalCloseButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            palette: 'primary',\r\n            borderRadius: '2rem',\r\n            padding: '0 2rem',\r\n        },\r\n    },\r\n});\r\ninterface Values {\r\n    photoURL: string;\r\n}\r\nexport function UpdateModalImageForm(): JSX.Element {\r\n    const [fileUrl, setFileUrl] = useState(null);\r\n    const { setUser } = useContext(UserContext);\r\n    const [updateMessage, setUpdateMessage] = useState('notSent');\r\n\r\n    const initialValues: Values = {\r\n        photoURL: '',\r\n    };\r\n    const onFileChange = async (e: any) => {\r\n        const file = e.target.files[0];\r\n        const storageRef = storage.ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);\r\n        setFileUrl(await fileRef.getDownloadURL());\r\n    };\r\n    const updateModalData = async (values: Values) => {\r\n        try {\r\n            let user: any = auth.currentUser;\r\n            user = await updateImageData(user, { photoURL: fileUrl });\r\n            setUser(user);\r\n        } catch (Error) {\r\n            console.log('Error updating intro data');\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={(values: Values, { setSubmitting, resetForm }: FormikHelpers<Values>) => {\r\n                updateModalData(values);\r\n                setSubmitting(false);\r\n                resetForm({});\r\n                setUpdateMessage('isSent');\r\n                setTimeout(() => {\r\n                    setUpdateMessage('notSent');\r\n                }, 3000);\r\n            }}\r\n        >\r\n            {({ isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FieldStack>\r\n                        <Field\r\n                            component={InputField.Formik}\r\n                            name=\"photoURL\"\r\n                            label=\"Photo\"\r\n                            type={'file'}\r\n                            onChange={onFileChange}\r\n                        />\r\n                        {updateMessage === 'isSent' ? (\r\n                            <UpdateMessage title=\"Success\" type=\"success\">\r\n                                You updated your photo.\r\n                            </UpdateMessage>\r\n                        ) : updateMessage === 'notSent' ? null : (\r\n                            <UpdateMessage title=\"An error occurred\" type=\"danger\">\r\n                                Unable to update photo, please try again later.\r\n                            </UpdateMessage>\r\n                        )}\r\n                        <Flex justifyContent={'flex-end'} marginTop={'1.5rem '}>\r\n                            <Button\r\n                                disabled={isSubmitting}\r\n                                palette=\"primary\"\r\n                                borderRadius={'2rem'}\r\n                                padding={'0 2rem'}\r\n                                margin={'0 0.5rem'}\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                            <Modal.Disclosure use={ModalCloseButton}>Close</Modal.Disclosure>\r\n                        </Flex>\r\n                    </FieldStack>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeft.tsx",["240","241","242"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileLeftData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRight.tsx",["243","244","245","246","247","248"],"import React from 'react';\r\nimport { Card, Box, Flex, Divider, List } from 'bumbag';\r\nimport {\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n    CardToolTip,\r\n    BackgroundImg,\r\n    BackgroundImgContainer,\r\n    ProfileImage,\r\n    IconContainer,\r\n    AlsoViewedTextContainer,\r\n} from './MainProfileRightElements';\r\nimport { data } from './MainProfileRightData';\r\nimport { NavIcon } from '../../theme/Theme';\r\n\r\nexport function MainProfileRight(): JSX.Element {\r\n    const { textCard }: any = data[0];\r\n    const { alsoViewed }: any = data[1];\r\n    return (\r\n        <>\r\n            {/* Info card with two text/link */}\r\n            <Card marginBottom={'1.5rem'}>\r\n                <Flex flexDirection={'column'}>\r\n                    {textCard.map((item: any, index: any) => {\r\n                        return (\r\n                            <>\r\n                                <Flex key={index} justifyContent={'space-between'}>\r\n                                    <ProfileTextSm>{item.text}</ProfileTextSm>\r\n                                    <CardToolTip\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            justifyContent: 'center',\r\n                                            cursor: 'pointer',\r\n                                            alignItems: 'center',\r\n                                            background: '#666666',\r\n                                            borderRadius: '50%',\r\n                                            width: '1rem',\r\n                                            height: '1rem',\r\n                                        }}\r\n                                        content={item.tooltip}\r\n                                        placement=\"bottom\"\r\n                                        fade\r\n                                    >\r\n                                        <ProfileTextXs color=\"#fff\">?</ProfileTextXs>\r\n                                    </CardToolTip>\r\n                                </Flex>\r\n                                {index === 0 && <Divider margin={'1rem 0'} />}\r\n                            </>\r\n                        );\r\n                    })}\r\n                </Flex>\r\n            </Card>\r\n            {/* advertisement card with image background */}\r\n            <BackgroundImgContainer marginBottom={'24px'}>\r\n                <BackgroundImg src=\"../../assets/photos/see-jobs.jpg\" />\r\n            </BackgroundImgContainer>\r\n            {/* people also viewed card */}\r\n            <Card>\r\n                <Box marginBottom={'1rem'}>\r\n                    <ProfileTextMd>{alsoViewed.title}</ProfileTextMd>\r\n                </Box>\r\n                {alsoViewed.data.map((item: any, index: any) => {\r\n                    return (\r\n                        <Flex key={index} justifyContent={'flex-start'} marginTop={'0.7rem'}>\r\n                            <ProfileImage src={item.imgSrc} alt=\"Also viewed profile image\" alignSelf={'top'} />\r\n                            <AlsoViewedTextContainer>\r\n                                <Flex flexDirection={'column'}>\r\n                                    <ProfileTextSm>{item.name}</ProfileTextSm>\r\n                                    <List\r\n                                        listStyleType=\"disc\"\r\n                                        listStylePosition=\"inside\"\r\n                                        fontWeight={'300'}\r\n                                        fontSize={'0.8rem'}\r\n                                    >\r\n                                        <List.Item fontSize={'0.5rem'}>\r\n                                            <ProfileTextSm fontWeight={'300'} marginLeft={'-4px'}>\r\n                                                {item.order}\r\n                                            </ProfileTextSm>\r\n                                        </List.Item>\r\n                                    </List>\r\n                                    <ProfileTextSm fontWeight={'400'}>{item.headline}</ProfileTextSm>\r\n                                </Flex>\r\n                                <IconContainer>\r\n                                    <NavIcon aria-label=\"Navlcon\" icon={'solid-user'} />\r\n                                    <ProfileTextSm>+</ProfileTextSm>\r\n                                </IconContainer>\r\n                            </AlsoViewedTextContainer>\r\n                        </Flex>\r\n                    );\r\n                })}\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileRightData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\Footer.tsx",["249","250"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\MainDivider.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\footer\\FooterElements.tsx",[],{"ruleId":"251","severity":1,"message":"252","line":18,"column":25,"nodeType":"253","messageId":"254","endLine":18,"endColumn":28,"suggestions":"255"},{"ruleId":"251","severity":1,"message":"252","line":48,"column":52,"nodeType":"253","messageId":"254","endLine":48,"endColumn":55,"suggestions":"256"},{"ruleId":"251","severity":1,"message":"252","line":48,"column":64,"nodeType":"253","messageId":"254","endLine":48,"endColumn":67,"suggestions":"257"},{"ruleId":"251","severity":1,"message":"252","line":7,"column":30,"nodeType":"253","messageId":"254","endLine":7,"endColumn":33,"suggestions":"258"},{"ruleId":"251","severity":1,"message":"252","line":5,"column":11,"nodeType":"253","messageId":"254","endLine":5,"endColumn":14,"suggestions":"259"},{"ruleId":"251","severity":1,"message":"252","line":6,"column":29,"nodeType":"253","messageId":"254","endLine":6,"endColumn":32,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":10,"column":15,"nodeType":"263","messageId":"264","endLine":10,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":17,"column":38,"nodeType":"253","messageId":"254","endLine":17,"endColumn":41,"suggestions":"265"},{"ruleId":"251","severity":1,"message":"252","line":24,"column":37,"nodeType":"253","messageId":"254","endLine":24,"endColumn":40,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":28,"column":23,"nodeType":"269","messageId":"270","endLine":28,"endColumn":28},{"ruleId":"267","severity":1,"message":"268","line":39,"column":37,"nodeType":"269","messageId":"270","endLine":39,"endColumn":79},{"ruleId":"267","severity":1,"message":"271","line":39,"column":44,"nodeType":"263","messageId":"272","endLine":39,"endColumn":53},{"ruleId":"251","severity":1,"message":"252","line":39,"column":50,"nodeType":"253","messageId":"254","endLine":39,"endColumn":53,"suggestions":"273"},{"ruleId":"267","severity":1,"message":"274","line":39,"column":55,"nodeType":"263","messageId":"272","endLine":39,"endColumn":75},{"ruleId":"251","severity":1,"message":"252","line":39,"column":72,"nodeType":"253","messageId":"254","endLine":39,"endColumn":75,"suggestions":"275"},{"ruleId":"267","severity":1,"message":"268","line":68,"column":31,"nodeType":"269","messageId":"270","endLine":68,"endColumn":73},{"ruleId":"267","severity":1,"message":"271","line":68,"column":38,"nodeType":"263","messageId":"272","endLine":68,"endColumn":47},{"ruleId":"251","severity":1,"message":"252","line":68,"column":44,"nodeType":"253","messageId":"254","endLine":68,"endColumn":47,"suggestions":"276"},{"ruleId":"267","severity":1,"message":"274","line":68,"column":49,"nodeType":"263","messageId":"272","endLine":68,"endColumn":69},{"ruleId":"251","severity":1,"message":"252","line":68,"column":66,"nodeType":"253","messageId":"254","endLine":68,"endColumn":69,"suggestions":"277"},{"ruleId":"267","severity":1,"message":"268","line":82,"column":32,"nodeType":"269","messageId":"270","endLine":82,"endColumn":74},{"ruleId":"267","severity":1,"message":"271","line":82,"column":39,"nodeType":"263","messageId":"272","endLine":82,"endColumn":48},{"ruleId":"251","severity":1,"message":"252","line":82,"column":45,"nodeType":"253","messageId":"254","endLine":82,"endColumn":48,"suggestions":"278"},{"ruleId":"267","severity":1,"message":"274","line":82,"column":50,"nodeType":"263","messageId":"272","endLine":82,"endColumn":70},{"ruleId":"251","severity":1,"message":"252","line":82,"column":67,"nodeType":"253","messageId":"254","endLine":82,"endColumn":70,"suggestions":"279"},{"ruleId":"251","severity":1,"message":"252","line":95,"column":37,"nodeType":"253","messageId":"254","endLine":95,"endColumn":40,"suggestions":"280"},{"ruleId":"251","severity":1,"message":"252","line":105,"column":64,"nodeType":"253","messageId":"254","endLine":105,"endColumn":67,"suggestions":"281"},{"ruleId":"251","severity":1,"message":"252","line":153,"column":38,"nodeType":"253","messageId":"254","endLine":153,"endColumn":41,"suggestions":"282"},{"ruleId":"261","severity":1,"message":"283","line":2,"column":49,"nodeType":"263","messageId":"264","endLine":2,"endColumn":56},{"ruleId":"251","severity":1,"message":"252","line":14,"column":40,"nodeType":"253","messageId":"254","endLine":14,"endColumn":43,"suggestions":"284"},{"ruleId":"251","severity":1,"message":"252","line":15,"column":65,"nodeType":"253","messageId":"254","endLine":15,"endColumn":68,"suggestions":"285"},{"ruleId":"251","severity":1,"message":"252","line":15,"column":77,"nodeType":"253","messageId":"254","endLine":15,"endColumn":80,"suggestions":"286"},{"ruleId":"251","severity":1,"message":"252","line":15,"column":92,"nodeType":"253","messageId":"254","endLine":15,"endColumn":95,"suggestions":"287"},{"ruleId":"251","severity":1,"message":"252","line":30,"column":37,"nodeType":"253","messageId":"254","endLine":30,"endColumn":40,"suggestions":"288"},{"ruleId":"251","severity":1,"message":"252","line":65,"column":43,"nodeType":"253","messageId":"254","endLine":65,"endColumn":46,"suggestions":"289"},{"ruleId":"251","severity":1,"message":"252","line":74,"column":47,"nodeType":"253","messageId":"254","endLine":74,"endColumn":50,"suggestions":"290"},{"ruleId":"251","severity":1,"message":"252","line":82,"column":47,"nodeType":"253","messageId":"254","endLine":82,"endColumn":50,"suggestions":"291"},{"ruleId":"251","severity":1,"message":"252","line":92,"column":43,"nodeType":"253","messageId":"254","endLine":92,"endColumn":46,"suggestions":"292"},{"ruleId":"251","severity":1,"message":"252","line":101,"column":43,"nodeType":"253","messageId":"254","endLine":101,"endColumn":46,"suggestions":"293"},{"ruleId":"251","severity":1,"message":"252","line":10,"column":40,"nodeType":"253","messageId":"254","endLine":10,"endColumn":43,"suggestions":"294"},{"ruleId":"251","severity":1,"message":"252","line":11,"column":37,"nodeType":"253","messageId":"254","endLine":11,"endColumn":40,"suggestions":"295"},{"ruleId":"251","severity":1,"message":"252","line":17,"column":36,"nodeType":"253","messageId":"254","endLine":17,"endColumn":39,"suggestions":"296"},{"ruleId":"251","severity":1,"message":"252","line":57,"column":43,"nodeType":"253","messageId":"254","endLine":57,"endColumn":46,"suggestions":"297"},{"ruleId":"251","severity":1,"message":"252","line":10,"column":40,"nodeType":"253","messageId":"254","endLine":10,"endColumn":43,"suggestions":"298"},{"ruleId":"251","severity":1,"message":"252","line":11,"column":55,"nodeType":"253","messageId":"254","endLine":11,"endColumn":58,"suggestions":"299"},{"ruleId":"251","severity":1,"message":"252","line":11,"column":67,"nodeType":"253","messageId":"254","endLine":11,"endColumn":70,"suggestions":"300"},{"ruleId":"251","severity":1,"message":"252","line":11,"column":82,"nodeType":"253","messageId":"254","endLine":11,"endColumn":85,"suggestions":"301"},{"ruleId":"251","severity":1,"message":"252","line":18,"column":37,"nodeType":"253","messageId":"254","endLine":18,"endColumn":40,"suggestions":"302"},{"ruleId":"251","severity":1,"message":"252","line":48,"column":43,"nodeType":"253","messageId":"254","endLine":48,"endColumn":46,"suggestions":"303"},{"ruleId":"251","severity":1,"message":"252","line":56,"column":43,"nodeType":"253","messageId":"254","endLine":56,"endColumn":46,"suggestions":"304"},{"ruleId":"261","severity":1,"message":"305","line":2,"column":73,"nodeType":"263","messageId":"264","endLine":2,"endColumn":78},{"ruleId":"251","severity":1,"message":"252","line":80,"column":23,"nodeType":"253","messageId":"254","endLine":80,"endColumn":26,"suggestions":"306"},{"ruleId":"251","severity":1,"message":"252","line":36,"column":23,"nodeType":"253","messageId":"254","endLine":36,"endColumn":26,"suggestions":"307"},{"ruleId":"251","severity":1,"message":"252","line":29,"column":36,"nodeType":"253","messageId":"254","endLine":29,"endColumn":39,"suggestions":"308"},{"ruleId":"261","severity":1,"message":"309","line":36,"column":36,"nodeType":"263","messageId":"264","endLine":36,"endColumn":50},{"ruleId":"251","severity":1,"message":"252","line":38,"column":23,"nodeType":"253","messageId":"254","endLine":38,"endColumn":26,"suggestions":"310"},{"ruleId":"267","severity":1,"message":"311","line":22,"column":33,"nodeType":"312","messageId":"313","endLine":22,"endColumn":46},{"ruleId":"251","severity":1,"message":"252","line":22,"column":43,"nodeType":"253","messageId":"254","endLine":22,"endColumn":46,"suggestions":"314"},{"ruleId":"251","severity":1,"message":"252","line":36,"column":8,"nodeType":"253","messageId":"254","endLine":36,"endColumn":11,"suggestions":"315"},{"ruleId":"251","severity":1,"message":"252","line":18,"column":25,"nodeType":"253","messageId":"254","endLine":18,"endColumn":28,"suggestions":"316"},{"ruleId":"251","severity":1,"message":"252","line":19,"column":27,"nodeType":"253","messageId":"254","endLine":19,"endColumn":30,"suggestions":"317"},{"ruleId":"251","severity":1,"message":"252","line":25,"column":42,"nodeType":"253","messageId":"254","endLine":25,"endColumn":45,"suggestions":"318"},{"ruleId":"251","severity":1,"message":"252","line":25,"column":54,"nodeType":"253","messageId":"254","endLine":25,"endColumn":57,"suggestions":"319"},{"ruleId":"251","severity":1,"message":"252","line":63,"column":45,"nodeType":"253","messageId":"254","endLine":63,"endColumn":48,"suggestions":"320"},{"ruleId":"251","severity":1,"message":"252","line":63,"column":57,"nodeType":"253","messageId":"254","endLine":63,"endColumn":60,"suggestions":"321"},{"ruleId":"261","severity":1,"message":"322","line":8,"column":11,"nodeType":"263","messageId":"264","endLine":8,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":18,"column":38,"nodeType":"253","messageId":"254","endLine":18,"endColumn":41,"suggestions":"323"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["324","325"],["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],"@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar",["336","337"],["338","339"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","anyTypedArg",["340","341"],"Argument 'additionalData' should be typed with a non-any type.",["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],"'Divider' is defined but never used.",["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],["380","381"],["382","383"],["384","385"],["386","387"],["388","389"],["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],"'Alert' is defined but never used.",["400","401"],["402","403"],["404","405"],"'values' is defined but never used.",["406","407"],"Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],["420","421"],["422","423"],"'languages' is assigned a value but never used.",["424","425"],{"messageId":"426","fix":"427","desc":"428"},{"messageId":"429","fix":"430","desc":"431"},{"messageId":"426","fix":"432","desc":"428"},{"messageId":"429","fix":"433","desc":"431"},{"messageId":"426","fix":"434","desc":"428"},{"messageId":"429","fix":"435","desc":"431"},{"messageId":"426","fix":"436","desc":"428"},{"messageId":"429","fix":"437","desc":"431"},{"messageId":"426","fix":"438","desc":"428"},{"messageId":"429","fix":"439","desc":"431"},{"messageId":"426","fix":"440","desc":"428"},{"messageId":"429","fix":"441","desc":"431"},{"messageId":"426","fix":"442","desc":"428"},{"messageId":"429","fix":"443","desc":"431"},{"messageId":"426","fix":"444","desc":"428"},{"messageId":"429","fix":"445","desc":"431"},{"messageId":"426","fix":"446","desc":"428"},{"messageId":"429","fix":"447","desc":"431"},{"messageId":"426","fix":"448","desc":"428"},{"messageId":"429","fix":"449","desc":"431"},{"messageId":"426","fix":"450","desc":"428"},{"messageId":"429","fix":"451","desc":"431"},{"messageId":"426","fix":"452","desc":"428"},{"messageId":"429","fix":"453","desc":"431"},{"messageId":"426","fix":"454","desc":"428"},{"messageId":"429","fix":"455","desc":"431"},{"messageId":"426","fix":"456","desc":"428"},{"messageId":"429","fix":"457","desc":"431"},{"messageId":"426","fix":"458","desc":"428"},{"messageId":"429","fix":"459","desc":"431"},{"messageId":"426","fix":"460","desc":"428"},{"messageId":"429","fix":"461","desc":"431"},{"messageId":"426","fix":"462","desc":"428"},{"messageId":"429","fix":"463","desc":"431"},{"messageId":"426","fix":"464","desc":"428"},{"messageId":"429","fix":"465","desc":"431"},{"messageId":"426","fix":"466","desc":"428"},{"messageId":"429","fix":"467","desc":"431"},{"messageId":"426","fix":"468","desc":"428"},{"messageId":"429","fix":"469","desc":"431"},{"messageId":"426","fix":"470","desc":"428"},{"messageId":"429","fix":"471","desc":"431"},{"messageId":"426","fix":"472","desc":"428"},{"messageId":"429","fix":"473","desc":"431"},{"messageId":"426","fix":"474","desc":"428"},{"messageId":"429","fix":"475","desc":"431"},{"messageId":"426","fix":"476","desc":"428"},{"messageId":"429","fix":"477","desc":"431"},{"messageId":"426","fix":"478","desc":"428"},{"messageId":"429","fix":"479","desc":"431"},{"messageId":"426","fix":"480","desc":"428"},{"messageId":"429","fix":"481","desc":"431"},{"messageId":"426","fix":"482","desc":"428"},{"messageId":"429","fix":"483","desc":"431"},{"messageId":"426","fix":"484","desc":"428"},{"messageId":"429","fix":"485","desc":"431"},{"messageId":"426","fix":"486","desc":"428"},{"messageId":"429","fix":"487","desc":"431"},{"messageId":"426","fix":"488","desc":"428"},{"messageId":"429","fix":"489","desc":"431"},{"messageId":"426","fix":"490","desc":"428"},{"messageId":"429","fix":"491","desc":"431"},{"messageId":"426","fix":"492","desc":"428"},{"messageId":"429","fix":"493","desc":"431"},{"messageId":"426","fix":"494","desc":"428"},{"messageId":"429","fix":"495","desc":"431"},{"messageId":"426","fix":"496","desc":"428"},{"messageId":"429","fix":"497","desc":"431"},{"messageId":"426","fix":"498","desc":"428"},{"messageId":"429","fix":"499","desc":"431"},{"messageId":"426","fix":"500","desc":"428"},{"messageId":"429","fix":"501","desc":"431"},{"messageId":"426","fix":"502","desc":"428"},{"messageId":"429","fix":"503","desc":"431"},{"messageId":"426","fix":"504","desc":"428"},{"messageId":"429","fix":"505","desc":"431"},{"messageId":"426","fix":"506","desc":"428"},{"messageId":"429","fix":"507","desc":"431"},{"messageId":"426","fix":"508","desc":"428"},{"messageId":"429","fix":"509","desc":"431"},{"messageId":"426","fix":"510","desc":"428"},{"messageId":"429","fix":"511","desc":"431"},{"messageId":"426","fix":"512","desc":"428"},{"messageId":"429","fix":"513","desc":"431"},{"messageId":"426","fix":"514","desc":"428"},{"messageId":"429","fix":"515","desc":"431"},{"messageId":"426","fix":"516","desc":"428"},{"messageId":"429","fix":"517","desc":"431"},{"messageId":"426","fix":"518","desc":"428"},{"messageId":"429","fix":"519","desc":"431"},{"messageId":"426","fix":"520","desc":"428"},{"messageId":"429","fix":"521","desc":"431"},{"messageId":"426","fix":"522","desc":"428"},{"messageId":"429","fix":"523","desc":"431"},{"messageId":"426","fix":"524","desc":"428"},{"messageId":"429","fix":"525","desc":"431"},{"messageId":"426","fix":"526","desc":"428"},{"messageId":"429","fix":"527","desc":"431"},{"messageId":"426","fix":"528","desc":"428"},{"messageId":"429","fix":"529","desc":"431"},{"messageId":"426","fix":"530","desc":"428"},{"messageId":"429","fix":"531","desc":"431"},"suggestUnknown",{"range":"532","text":"533"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"532","text":"534"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"535","text":"533"},{"range":"535","text":"534"},{"range":"536","text":"533"},{"range":"536","text":"534"},{"range":"537","text":"533"},{"range":"537","text":"534"},{"range":"538","text":"533"},{"range":"538","text":"534"},{"range":"539","text":"533"},{"range":"539","text":"534"},{"range":"540","text":"533"},{"range":"540","text":"534"},{"range":"541","text":"533"},{"range":"541","text":"534"},{"range":"542","text":"533"},{"range":"542","text":"534"},{"range":"543","text":"533"},{"range":"543","text":"534"},{"range":"544","text":"533"},{"range":"544","text":"534"},{"range":"545","text":"533"},{"range":"545","text":"534"},{"range":"546","text":"533"},{"range":"546","text":"534"},{"range":"547","text":"533"},{"range":"547","text":"534"},{"range":"548","text":"533"},{"range":"548","text":"534"},{"range":"549","text":"533"},{"range":"549","text":"534"},{"range":"550","text":"533"},{"range":"550","text":"534"},{"range":"551","text":"533"},{"range":"551","text":"534"},{"range":"552","text":"533"},{"range":"552","text":"534"},{"range":"553","text":"533"},{"range":"553","text":"534"},{"range":"554","text":"533"},{"range":"554","text":"534"},{"range":"555","text":"533"},{"range":"555","text":"534"},{"range":"556","text":"533"},{"range":"556","text":"534"},{"range":"557","text":"533"},{"range":"557","text":"534"},{"range":"558","text":"533"},{"range":"558","text":"534"},{"range":"559","text":"533"},{"range":"559","text":"534"},{"range":"560","text":"533"},{"range":"560","text":"534"},{"range":"561","text":"533"},{"range":"561","text":"534"},{"range":"562","text":"533"},{"range":"562","text":"534"},{"range":"563","text":"533"},{"range":"563","text":"534"},{"range":"564","text":"533"},{"range":"564","text":"534"},{"range":"565","text":"533"},{"range":"565","text":"534"},{"range":"566","text":"533"},{"range":"566","text":"534"},{"range":"567","text":"533"},{"range":"567","text":"534"},{"range":"568","text":"533"},{"range":"568","text":"534"},{"range":"569","text":"533"},{"range":"569","text":"534"},{"range":"570","text":"533"},{"range":"570","text":"534"},{"range":"571","text":"533"},{"range":"571","text":"534"},{"range":"572","text":"533"},{"range":"572","text":"534"},{"range":"573","text":"533"},{"range":"573","text":"534"},{"range":"574","text":"533"},{"range":"574","text":"534"},{"range":"575","text":"533"},{"range":"575","text":"534"},{"range":"576","text":"533"},{"range":"576","text":"534"},{"range":"577","text":"533"},{"range":"577","text":"534"},{"range":"578","text":"533"},{"range":"578","text":"534"},{"range":"579","text":"533"},{"range":"579","text":"534"},{"range":"580","text":"533"},{"range":"580","text":"534"},{"range":"581","text":"533"},{"range":"581","text":"534"},{"range":"582","text":"533"},{"range":"582","text":"534"},{"range":"583","text":"533"},{"range":"583","text":"534"},{"range":"584","text":"533"},{"range":"584","text":"534"},[667,670],"unknown","never",[2244,2247],[2256,2259],[272,275],[165,168],[199,202],[548,551],[899,902],[1289,1292],[1311,1314],[2156,2159],[2178,2181],[2561,2564],[2583,2586],[2937,2940],[2767,2770],[5049,5052],[653,656],[730,733],[742,745],[757,760],[1264,1267],[2669,2672],[3092,3095],[3481,3484],[3906,3909],[4310,4313],[454,457],[503,506],[689,692],[2315,2318],[446,449],[513,516],[525,528],[540,543],[865,868],[2021,2024],[2383,2386],[3490,3493],[1293,1296],[998,1001],[1336,1339],[636,639],[897,900],[501,504],[543,546],[769,772],[781,784],[2771,2774],[2783,2786],[540,543]]