[{"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx":"1","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts":"2","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx":"3","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx":"5","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx":"6","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavIcons.tsx":"7","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx":"8","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx":"9","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx":"10","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx":"11","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx":"12","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx":"13","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\SideProfile.tsx":"14","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileElements.tsx":"15","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileData.tsx":"16","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\authentication\\SignUp.tsx":"17","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\authentication\\SignIn.tsx":"18","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\authentication\\PasswordReset.tsx":"19","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx":"20","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx":"21","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx":"22","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx":"23","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx":"24","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx":"25","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx":"26"},{"size":540,"mtime":1608998287134,"results":"27","hashOfConfig":"28"},{"size":545,"mtime":1608486025945,"results":"29","hashOfConfig":"28"},{"size":311,"mtime":1609011530055,"results":"30","hashOfConfig":"28"},{"size":3493,"mtime":1609102027336,"results":"31","hashOfConfig":"28"},{"size":1301,"mtime":1608896487440,"results":"32","hashOfConfig":"28"},{"size":752,"mtime":1608900557973,"results":"33","hashOfConfig":"28"},{"size":1187,"mtime":1608900608688,"results":"34","hashOfConfig":"28"},{"size":806,"mtime":1609082645004,"results":"35","hashOfConfig":"28"},{"size":495,"mtime":1609012165540,"results":"36","hashOfConfig":"28"},{"size":3024,"mtime":1609013088460,"results":"37","hashOfConfig":"28"},{"size":6270,"mtime":1609195051452,"results":"38","hashOfConfig":"28"},{"size":626,"mtime":1608857185535,"results":"39","hashOfConfig":"28"},{"size":1391,"mtime":1608860837415,"results":"40","hashOfConfig":"28"},{"size":315,"mtime":1608896565253,"results":"41","hashOfConfig":"28"},{"size":3294,"mtime":1609101868161,"results":"42","hashOfConfig":"28"},{"size":564,"mtime":1609187322782,"results":"43","hashOfConfig":"28"},{"size":5044,"mtime":1609185987914,"results":"44","hashOfConfig":"28"},{"size":3369,"mtime":1609019742355,"results":"45","hashOfConfig":"28"},{"size":2895,"mtime":1609112641792,"results":"46","hashOfConfig":"28"},{"size":1297,"mtime":1609206304686,"results":"47","hashOfConfig":"28"},{"size":2726,"mtime":1609192741675,"results":"48","hashOfConfig":"28"},{"size":2639,"mtime":1609206378393,"results":"49","hashOfConfig":"28"},{"size":5171,"mtime":1609196272047,"results":"50","hashOfConfig":"28"},{"size":3291,"mtime":1609012860956,"results":"51","hashOfConfig":"28"},{"size":6661,"mtime":1609208528040,"results":"52","hashOfConfig":"28"},{"size":642,"mtime":1609203039125,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"15bsiaf",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\index.tsx",[],[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\reportWebVitals.ts",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\App.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navbar.tsx",["115"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { TopNav, Image, Input, Flex, } from 'bumbag';\r\nimport { Navlink, NavDivider } from './Navlink';\r\nimport NavText from './NavText';\r\nimport { UserPopover } from './UserPopover';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { NavIcon } from '../../theme/Theme';\r\nimport { navData } from './NavData';\r\nimport { NavImage } from './UserPopoverElements'\r\nimport { DarkMode } from '../DarkMode';\r\nimport { UserContext } from '../../providers/UserProvider';\r\n\r\n\r\n\r\nfunction Navbar(): JSX.Element {\r\n    const user = useContext(UserContext);\r\n    const { photoURL }: any = user;\r\n    return (\r\n        <TopNav>\r\n            <TopNav.Section>\r\n                <Navlink key={10} href=\"/\" style={{ marginLeft: '0' }}>\r\n                    <Image src=\"/logo.png\" height=\"35px\" />\r\n                </Navlink>\r\n                <Flex style={{ alignItems: 'center' }}>\r\n                    <Input\r\n                        before={<Input.Icon icon=\"solid-search\" />}\r\n                        placeholder=\"Search\"\r\n                        style={{ marginLeft: '5px' }}\r\n                        size=\"small\"\r\n                        width=\"300px\"\r\n                        marginRight=\"6rem\"\r\n                    />\r\n                </Flex>\r\n            </TopNav.Section>\r\n            <TopNav.Section marginRight=\"major-2\">\r\n                {navData.map((navElement, index) => {\r\n                    return (\r\n                        <>\r\n                            <Navlink\r\n                                key={index}\r\n                                href={navElement.navHref}\r\n                                style={\r\n                                    navElement.navIcon === 'user' ?\r\n                                        { paddingRight: '1rem' } :\r\n                                        navElement.navIcon === '' ?\r\n                                            {\r\n                                                color: '#5d3b09',\r\n                                                fontSize: '0.75rem',\r\n                                                fontWeight: 'lighter',\r\n                                                width: '90px',\r\n                                                textAlign: 'center',\r\n                                            } :\r\n                                            undefined\r\n                                }\r\n                            >\r\n                                {navElement.navIcon !== 'user' && <NavIcon aria-label=\"Navlcon\" icon={`solid-${navElement.navIcon}`} />}\r\n                                {navElement.navIcon === 'user' && <NavImage src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                    alt=\"Profile Picture\" width={'30px'} />}\r\n\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <NavText>{navElement.navText}</NavText>\r\n                                    {navElement.navIcon === 'user' && <UserPopover />}\r\n                                    {navElement.navIcon === 'th' && <SideDrawer />}\r\n                                </div>\r\n                            </Navlink>\r\n                            {navElement.navIcon === 'user' && <NavDivider />}\r\n                        </>\r\n                    );\r\n                })}\r\n                <DarkMode />\r\n            </TopNav.Section>\r\n        </TopNav >\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\Navlink.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavText.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavIcons.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\NavData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopover.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawer.tsx",["116","117"],"import React from 'react';\r\nimport { Drawer, Card, Flex } from 'bumbag';\r\nimport {\r\n    CustomDrawer,\r\n    NavHeader,\r\n    SideDrawerIconContainer,\r\n    NavImage,\r\n    NavText,\r\n    NavSubHeader,\r\n    NavSubText,\r\n    sideDrawerData,\r\n    iconData,\r\n} from './SideDrawerElements';\r\nimport { PopoverIcon } from './UserPopoverElements';\r\n\r\nexport function SideDrawer(): JSX.Element {\r\n    return (\r\n        <Drawer.State animated>\r\n            <Drawer.Disclosure style={{ height: '5px', marginTop: '-10px' }}>\r\n                <PopoverIcon />\r\n            </Drawer.Disclosure>\r\n            <CustomDrawer placement=\"right\" style={{ marginTop: '58px', borderRadius: '8px 8px 0 0' }} fade slide>\r\n                <Card style={{ margin: '1.5rem', padding: '2px 0 0 0' }}>\r\n                    <NavHeader>Visit More Linkedin Products</NavHeader>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px', padding: '20px ' }}>\r\n                        <Flex\r\n                            style={{\r\n                                flexWrap: 'wrap',\r\n                                justifyContent: 'space-between',\r\n                                maxWidth: '325px',\r\n                            }}\r\n                        >\r\n                            {iconData.map((icon, index) => {\r\n                                return (\r\n                                    <Flex key={index} style={{ flexDirection: 'column' }}>\r\n                                        <SideDrawerIconContainer>\r\n                                            <NavImage alt=\"Linked icon\" src={icon.src} />\r\n                                        </SideDrawerIconContainer>\r\n                                        <NavText>{icon.text}</NavText>\r\n                                    </Flex>\r\n                                );\r\n                            })}\r\n                        </Flex>\r\n                    </Card>\r\n                </Card>\r\n                <Card style={{ margin: '1.5rem', padding: '2px 0 0 0' }}>\r\n                    <NavHeader>LinkedIn Business Services</NavHeader>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px' }}>\r\n                        {sideDrawerData.map((data: any, index: any) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <NavSubHeader>{data.header}</NavSubHeader>\r\n                                    <NavSubText>{data.text}</NavSubText>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Card>\r\n                    <Card style={{ margin: 'auto 0', borderRadius: '0 0 4px 4px', padding: '0.5rem 1.5rem' }}>\r\n                        <NavSubHeader>\r\n                            Create a Company Page <span style={{ fontSize: '1.5rem' }}>+</span>\r\n                        </NavSubHeader>\r\n                    </Card>\r\n                </Card>\r\n            </CustomDrawer>\r\n        </Drawer.State>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfile.tsx",["118","119","120"],"/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport { Columns, Flex, Card, Set } from 'bumbag';\r\nimport {\r\n    ProfileImg,\r\n    BackgroundImg,\r\n    ProfileEditLink,\r\n    MainPageIcon,\r\n    MainPageIconContainer,\r\n    AddButton,\r\n    MoreButton,\r\n    ProfileTextLg,\r\n    ProfileTextMd,\r\n    ProfileTextSm,\r\n    ProfileTextXs,\r\n    MainPageIconContainerSec,\r\n} from './MainProfileElements';\r\nimport { data } from './MainProfileData';\r\nimport SideProfile from './SideProfile';\r\nimport { UpdateModalIntro } from '../update/UpdateModalIntro'\r\n\r\nfunction MainProfile({ user }: any): JSX.Element {\r\n    const { photoURL, displayName, email, name, lastName, headline, company, education, country, location, industry }: any = user;\r\n\r\n\r\n    return (\r\n        <Columns style={{ marginTop: '2rem' }}>\r\n            <Columns.Column spread={8}>\r\n                <Card style={{ padding: 0, borderRadius: '0.5rem', position: 'relative' }}>\r\n                    <BackgroundImg src=\"../../assets/photos/profile-bg.jpg\" />\r\n                    {/* <ProfileImg src=\"../../assets/photos/ogz.jpg\" /> */}\r\n                    <ProfileImg src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'} />\r\n                    <Set style={{ justifyContent: 'flex-end', marginTop: '0.3rem' }}>\r\n                        <AddButton size=\"small\" palette=\"primary\">\r\n                            Add profile section\r\n                        </AddButton>\r\n                        <MoreButton size=\"small\">More...</MoreButton>\r\n                        <ProfileEditLink>\r\n                            {/* <MainPageIconContainer>\r\n                                <MainPageIcon src=\"../../assets/icons/pencil-icon.png\" />\r\n                            </MainPageIconContainer> */}\r\n                            <MainPageIconContainer>\r\n                                <UpdateModalIntro />\r\n                            </MainPageIconContainer>\r\n                        </ProfileEditLink>\r\n                    </Set>\r\n                    <Columns style={{ marginTop: '0.25rem', paddingBottom: '1rem' }}>\r\n                        <Columns.Column spread={8}>\r\n                            <Flex flexDirection=\"column\" marginLeft=\"1.5rem\">\r\n                                <ProfileTextLg textTransform={'capitalize'}>\r\n                                    {name && lastName\r\n                                        ? `${name} ${lastName}`\r\n                                        : displayName\r\n                                            ? displayName\r\n                                            // eslint-disable-next-line prettier/prettier\r\n                                            : `${data[0].basic.name} ${data[0].basic.lastname}`}\r\n                                </ProfileTextLg>\r\n                                <ProfileTextSm>{email ? email : data[0].basic.email}</ProfileTextSm>\r\n                                <ProfileTextMd>{headline ? headline : data[0].basic.headline}</ProfileTextMd>\r\n                                <ProfileTextMd>{industry ? industry : data[0].basic.industry}</ProfileTextMd>\r\n                                <ProfileTextSm>\r\n                                    {location ? location : data[0].basic.city}, {country ? country : data[0].basic.country}\r\n                                </ProfileTextSm>\r\n                            </Flex>\r\n                        </Columns.Column>\r\n                        <Columns.Column spread={4}>\r\n                            <Flex flexDirection=\"column\">\r\n                                <Flex style={{ alignItems: 'center' }}>\r\n                                    <MainPageIconContainer\r\n                                        style={{\r\n                                            marginRight: '0.3rem',\r\n                                            marginBottom: '0.3rem',\r\n                                            borderRadius: '0%',\r\n                                            background: '#eee',\r\n                                        }}\r\n                                    >\r\n                                        <MainPageIcon src=\"../../assets/icons/company-icon.png\" />\r\n                                    </MainPageIconContainer>\r\n                                    <ProfileTextXs fontWeight=\"bold\">{company ? company : data[0].basic.company} </ProfileTextXs>\r\n                                </Flex>\r\n                                <Flex style={{ alignItems: 'center' }}>\r\n                                    <MainPageIconContainer\r\n                                        style={{ marginRight: '0.3rem', borderRadius: '0%', background: '#eee' }}\r\n                                    >\r\n                                        <MainPageIcon src=\"../../assets/icons/education-icon.png\" />\r\n                                    </MainPageIconContainer>\r\n                                    <ProfileTextXs fontWeight=\"bold\">{education ? education : data[0].basic.education} </ProfileTextXs>\r\n                                </Flex>\r\n                            </Flex>\r\n                        </Columns.Column>\r\n                    </Columns>\r\n                </Card>\r\n                <Card style={{ marginTop: '2rem', position: 'relative' }}>\r\n                    <Flex>\r\n                        <Flex flexDirection=\"column\">\r\n                            <ProfileTextMd marginBottom=\"1rem\">{data[0].about.title}</ProfileTextMd>\r\n                            <ProfileTextXs>{data[0].about.text}</ProfileTextXs>\r\n                        </Flex>\r\n                    </Flex>\r\n                    <ProfileEditLink style={{ position: 'absolute', right: '1rem', top: '1rem' }}>\r\n                        <MainPageIconContainerSec margin={'0px'}>\r\n                            <MainPageIcon\r\n                                style={{ margin: '0px', color: '#0a66c2' }}\r\n                                src=\"../../assets/icons/pencil-icon-secondary.png\"\r\n                            />\r\n                        </MainPageIconContainerSec>\r\n                    </ProfileEditLink>\r\n                </Card>\r\n            </Columns.Column>\r\n            <Columns.Column spread={4}>\r\n                <SideProfile />\r\n            </Columns.Column>\r\n        </Columns>\r\n    );\r\n}\r\n\r\nexport default MainProfile;\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\DarkMode.tsx",["121"],"import React, { useState } from 'react';\r\nimport { Switch, useColorMode } from 'bumbag';\r\n\r\nexport function DarkMode(): JSX.Element {\r\n    const [checked, setChecked] = useState(true);\r\n    const { colorMode, setColorMode } = useColorMode();\r\n    const handleChange = (e: any) => {\r\n        setChecked(e.target.checked);\r\n        colorMode === 'default' ? setColorMode('dark') : setColorMode('default');\r\n    };\r\n    return (\r\n        <Switch\r\n            colorMode={colorMode}\r\n            style={{ marginLeft: '0.5rem' }}\r\n            checked={checked}\r\n            onChange={(e) => handleChange(e)}\r\n        />\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\theme\\Theme.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\SideProfile.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\profile\\MainProfileData.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\authentication\\SignUp.tsx",["122","123","124","125","126","127","128","129","130","131"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { signInWithGoogle } from '../../firebase';\r\nimport { auth, generateUserDocument } from '../../firebase';\r\n\r\nexport function SignUp(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const createUserWithEmailAndPasswordHandler = async (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n            generateUserDocument(user, { email, name, lastName, displayName });\r\n        } catch (error) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n        setEmail('');\r\n        setPassword('');\r\n        setDisplayName('');\r\n        setName('');\r\n        setLastName('');\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        } else if (name === 'displayName') {\r\n            setDisplayName(value);\r\n        } else if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'lastName') {\r\n            setLastName(value);\r\n        }\r\n    };\r\n    return (\r\n        <Box>\r\n            <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                <Text use=\"strong\" fontSize={'2rem'}>\r\n                    Sign Up\r\n                </Text>\r\n            </Text.Block>\r\n            <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n            <FieldStack>\r\n                {error !== null && (\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>{error}</Text>\r\n                    </Text.Block>\r\n                )}\r\n                <InputField\r\n                    label=\"Display name\"\r\n                    name=\"displayName\"\r\n                    id=\"displayName\"\r\n                    value={displayName}\r\n                    placeholder=\"Enter your display name\"\r\n                    onChange={(event: any) => onChangeHandler(event)}\r\n                />\r\n                <FieldStack orientation=\"horizontal\">\r\n                    <InputField\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        placeholder=\"Enter your  name\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                    <InputField\r\n                        label=\"Last name\"\r\n                        name=\"lastName\"\r\n                        id=\"lastName\"\r\n                        value={lastName}\r\n                        placeholder=\"Enter your last name\"\r\n                        onChange={(event: any) => onChangeHandler(event)}\r\n                    />\r\n                </FieldStack>\r\n                <InputField\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"userEmail\"\r\n                    id=\"userEmail\"\r\n                    value={email}\r\n                    placeholder=\"Enter your email\"\r\n                    onChange={(event: any) => onChangeHandler(event)}\r\n                />\r\n                <InputField\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    name=\"userPassword\"\r\n                    id=\"userPassword\"\r\n                    value={password}\r\n                    placeholder=\"Enter your password\"\r\n                    onChange={(event: any) => onChangeHandler(event)}\r\n                />\r\n                <Button\r\n                    palette=\"primary\"\r\n                    width={'100%'}\r\n                    textTransform={'uppercase'}\r\n                    onClick={(event) => {\r\n                        createUserWithEmailAndPasswordHandler(event, email, password);\r\n                    }}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n                <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                    <Text fontSize={'1rem'}>Already have an account?</Text> <Link to=\"/\">Sign in here</Link>\r\n                </Text.Block>\r\n                <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                    <Text fontSize={'1rem'}>Or</Text>\r\n                </Text.Block>\r\n                <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </FieldStack>\r\n        </Box>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\authentication\\SignIn.tsx",["132","133","134","135","136","137","138"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { signInWithGoogle, auth } from '../../firebase';\r\n\r\nexport function SignIn(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState<any>(null);\r\n    const signInWithEmailAndPasswordHandler = (event: any, email: any, password: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((error) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', error);\r\n        });\r\n    };\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        } else if (name === 'userPassword') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    return (\r\n        <Box>\r\n            <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                <Text use=\"strong\" fontSize={'2rem'}>\r\n                    Sign In\r\n                </Text>\r\n            </Text.Block>\r\n            <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n            <FieldStack>\r\n                {error !== null && (\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>{error}</Text>\r\n                    </Text.Block>\r\n                )}\r\n                <InputField\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"userEmail\"\r\n                    id=\"userEmail\"\r\n                    placeholder=\"Enter your email\"\r\n                    onChange={(event: any) => onChangeHandler(event)}\r\n                />\r\n                <InputField\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    id=\"userPassword\"\r\n                    name=\"userPassword\"\r\n                    placeholder=\"Enter your password\"\r\n                    onChange={(event: any) => onChangeHandler(event)}\r\n                />\r\n                <Button\r\n                    palette=\"primary\"\r\n                    width={'100%'}\r\n                    textTransform={'uppercase'}\r\n                    onClick={(event) => {\r\n                        signInWithEmailAndPasswordHandler(event, email, password);\r\n                    }}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                    <Text fontSize={'1rem'}>Or</Text>\r\n                </Text.Block>\r\n                <Button variant=\"outlined\" palette=\"primary\" width={'100%'} onClick={signInWithGoogle}>\r\n                    Sign In With Google\r\n                </Button>\r\n                <Text.Block margin={'1rem auto'}>\r\n                    <Text fontSize={'1rem'}>Dont have an account?</Text> <Link to=\"/signUp\">Go to Sign Up &rarr; </Link>\r\n                </Text.Block>\r\n                <Text.Block margin={'1rem auto'}>\r\n                    <Link to=\"/passwordReset\">Forgot Password?</Link>\r\n                </Text.Block>\r\n            </FieldStack>\r\n        </Box>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\authentication\\PasswordReset.tsx",["139","140","141","142"],"import React, { useState } from 'react';\r\nimport { InputField, Box, Divider, Text, FieldStack, Button } from 'bumbag';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\n\r\nexport function PasswordReset(): JSX.Element {\r\n    const [email, setEmail] = useState('');\r\n    const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const onChangeHandler = (event: any) => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n    };\r\n    const sendResetEmail = (event: any) => {\r\n        event.preventDefault();\r\n        auth.sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                setEmailHasBeenSent(true);\r\n                setTimeout(() => {\r\n                    setEmailHasBeenSent(false);\r\n                }, 3000);\r\n            })\r\n            .catch(() => {\r\n                setError('Error resetting password');\r\n            });\r\n    };\r\n    return (\r\n        <Box>\r\n            <Text.Block marginBottom={'1rem'} marginTop={'2rem'}>\r\n                <Text use=\"strong\" fontSize={'2rem'}>\r\n                    Reset Your Password\r\n                </Text>\r\n            </Text.Block>\r\n            <Divider margin={'1rem auto 2rem '} borderBottom={'1px solid #574feb'} />\r\n            <FieldStack>\r\n                {emailHasBeenSent && (\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>An email has been sent to you!</Text>\r\n                    </Text.Block>\r\n                )}\r\n                {error !== null && (\r\n                    <Text.Block margin={'1rem auto'}>\r\n                        <Text fontSize={'1rem'}>{error}</Text>\r\n                    </Text.Block>\r\n                )}\r\n                <InputField\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"userEmail\"\r\n                    id=\"userEmail\"\r\n                    value={email}\r\n                    placeholder=\"Enter your email\"\r\n                    onChange={(event: any) => onChangeHandler(event)}\r\n                />\r\n                <Button\r\n                    palette=\"primary\"\r\n                    width={'100%'}\r\n                    textTransform={'uppercase'}\r\n                    onClick={(event) => sendResetEmail(event)}\r\n                >\r\n                    Send me a reset link\r\n                </Button>\r\n                <Text.Block margin={'1rem auto'} textAlign={'center'}>\r\n                    <Text fontSize={'1rem'}>Or</Text>\r\n                </Text.Block>\r\n                <Text.Block margin={'1rem auto'}>\r\n                    <Text fontSize={'1rem'}>Go Back to Sign In?</Text> <Link to=\"/\"> &larr; Sign In</Link>\r\n                </Text.Block>\r\n            </FieldStack>\r\n        </Box>\r\n    );\r\n}\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\providers\\UserProvider.tsx",["143","144","145","146"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\firebase.tsx",["147","148","149","150","151","152","153","154","155","156","157","158","159"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\main\\Main.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\UserPopoverElements.tsx",["160","161"],"/* eslint-disable prettier/prettier */\r\nimport React, { useContext } from 'react';\r\nimport { Text, Box, Popover, Link, Divider, Flex, Button, Stack, Set, Image, applyTheme } from 'bumbag';\r\nimport { NavIcon } from './NavIcons';\r\nimport { logOut } from '../../firebase';\r\nimport { UserContext } from '../../providers/UserProvider';\r\nimport { data } from '../profile/MainProfileData';\r\n\r\nexport const NavText = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'lighter',\r\n            fontSize: '14px',\r\n            display: 'block',\r\n            lineHeight: '2rem',\r\n        },\r\n    },\r\n});\r\nexport const NavHeader = applyTheme(Text, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'bold',\r\n            display: 'block',\r\n            lineHeight: '1.25rem',\r\n            marginTop: '0.5rem',\r\n        },\r\n    },\r\n});\r\nexport const NavButton = applyTheme(Button, {\r\n    styles: {\r\n        base: {\r\n            fontWeight: 'light',\r\n            width: '100%',\r\n            fontSize: '14px',\r\n            minHeight: '1rem',\r\n            marginBottom: '1rem',\r\n            borderRadius: '1rem',\r\n            ':focus': {\r\n                boxShadow: 'none!important',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const NavImage = applyTheme(Image, {\r\n    styles: {\r\n        base: {\r\n            borderRadius: '50%',\r\n            width: '50px',\r\n        },\r\n    },\r\n});\r\nexport const PageLink = applyTheme(Link, {\r\n    styles: {\r\n        base: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textDecoration: 'none',\r\n            margin: '0px',\r\n            ':hover': {\r\n                textDecoration: 'none',\r\n                color: '#000',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const CustomPopover = applyTheme(Popover, {\r\n    styles: {\r\n        base: {\r\n            padding: '0px',\r\n            width: '270px',\r\n            ':focus': {\r\n                color: '#545454',\r\n            },\r\n            ':focus-within': {\r\n                color: '#545454',\r\n            },\r\n            ':hover': {\r\n                color: '#545454',\r\n            },\r\n            ':active': {\r\n                color: '#545454',\r\n            },\r\n        },\r\n    },\r\n    modes: {\r\n        dark: {\r\n            defaultProps: {\r\n                color: '#B1B7C2',\r\n            },\r\n        },\r\n    },\r\n});\r\nexport const PopoverContent: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n    const { photoURL, name, lastName, displayName, headline }: any = user;\r\n    return (\r\n        <Box>\r\n            <Stack>\r\n                <Box>\r\n                    <Flex alignX=\"center\" alignY=\"center\" style={{ position: 'relative' }}>\r\n                        <Box style={{ position: 'absolute', top: 0, left: 0 }}>\r\n                            <NavImage\r\n                                src={photoURL ? `${photoURL}` : '../../assets/photos/profile.png'}\r\n                                alt=\"Profile Picture\"\r\n                            />\r\n                        </Box>\r\n                        <Box style={{ marginLeft: '3.5rem', fontSize: '1rem' }}>\r\n                            <NavHeader style={{ marginTop: '0', textTransform: 'capitalize' }}>\r\n                                {name && lastName\r\n                                    ? `${name} ${lastName}`\r\n                                    : displayName\r\n                                        ? displayName\r\n                                        : // eslint-disable-next-line prettier/prettier\r\n                                        `${data[0].basic.name} ${data[0].basic.lastname}`}\r\n                            </NavHeader>\r\n                            <NavText style={{ lineHeight: '1rem' }}>{headline ? headline : data[0].basic.headline}</NavText>\r\n                        </Box>\r\n                    </Flex>\r\n                </Box>\r\n                <Set>\r\n                    <NavButton variant=\"outlined\" palette=\"primary\" width=\"100%\">\r\n                        View Profile\r\n                    </NavButton>\r\n                </Set>\r\n            </Stack>\r\n\r\n            <Text.Block>\r\n                <Divider />\r\n                <NavHeader>Account</NavHeader>\r\n                <NavText>Settings & Privacy</NavText>\r\n                <NavText>Help</NavText>\r\n                <NavText>Language</NavText>\r\n                <Divider />\r\n                <NavHeader fontWeight=\"bold\">Manage</NavHeader>\r\n                <NavText>Posts & Activity</NavText>\r\n                <NavText>Job Posting Account</NavText>\r\n                <Divider />\r\n                <PageLink onClick={logOut}>Sign Out</PageLink>\r\n            </Text.Block>\r\n        </Box>\r\n    );\r\n};\r\nexport const PopoverIcon: React.FC | any = () => {\r\n    return (\r\n        <NavIcon\r\n            aria-label=\"Navlcon\"\r\n            icon=\"solid-sort-down\"\r\n            style={{\r\n                margin: 0,\r\n                padding: 0,\r\n                width: '25px',\r\n                height: '20px',\r\n                position: 'relative',\r\n                top: '-5px',\r\n            }}\r\n        />\r\n    );\r\n};\r\n","C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\navbar\\SideDrawerElements.tsx",[],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\update\\UpdateModalIntro.tsx",["162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\Users\\oguzh\\Desktop\\courses\\caseStudy\\linkedin\\linkedin-page\\src\\components\\loader\\LoaderSpinner.tsx",[],{"ruleId":"175","severity":1,"message":"176","line":18,"column":25,"nodeType":"177","messageId":"178","endLine":18,"endColumn":28,"suggestions":"179"},{"ruleId":"175","severity":1,"message":"176","line":49,"column":52,"nodeType":"177","messageId":"178","endLine":49,"endColumn":55,"suggestions":"180"},{"ruleId":"175","severity":1,"message":"176","line":49,"column":64,"nodeType":"177","messageId":"178","endLine":49,"endColumn":67,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":22,"column":22,"nodeType":"184","messageId":"185","endLine":22,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":22,"column":32,"nodeType":"177","messageId":"178","endLine":22,"endColumn":35,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"176","line":23,"column":120,"nodeType":"177","messageId":"178","endLine":23,"endColumn":123,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"176","line":7,"column":30,"nodeType":"177","messageId":"178","endLine":7,"endColumn":33,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"176","line":13,"column":40,"nodeType":"177","messageId":"178","endLine":13,"endColumn":43,"suggestions":"189"},{"ruleId":"175","severity":1,"message":"176","line":14,"column":65,"nodeType":"177","messageId":"178","endLine":14,"endColumn":68,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"176","line":14,"column":77,"nodeType":"177","messageId":"178","endLine":14,"endColumn":80,"suggestions":"191"},{"ruleId":"175","severity":1,"message":"176","line":14,"column":92,"nodeType":"177","messageId":"178","endLine":14,"endColumn":95,"suggestions":"192"},{"ruleId":"175","severity":1,"message":"176","line":29,"column":37,"nodeType":"177","messageId":"178","endLine":29,"endColumn":40,"suggestions":"193"},{"ruleId":"175","severity":1,"message":"176","line":63,"column":39,"nodeType":"177","messageId":"178","endLine":63,"endColumn":42,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"176","line":72,"column":43,"nodeType":"177","messageId":"178","endLine":72,"endColumn":46,"suggestions":"195"},{"ruleId":"175","severity":1,"message":"176","line":80,"column":43,"nodeType":"177","messageId":"178","endLine":80,"endColumn":46,"suggestions":"196"},{"ruleId":"175","severity":1,"message":"176","line":90,"column":39,"nodeType":"177","messageId":"178","endLine":90,"endColumn":42,"suggestions":"197"},{"ruleId":"175","severity":1,"message":"176","line":99,"column":39,"nodeType":"177","messageId":"178","endLine":99,"endColumn":42,"suggestions":"198"},{"ruleId":"175","severity":1,"message":"176","line":9,"column":40,"nodeType":"177","messageId":"178","endLine":9,"endColumn":43,"suggestions":"199"},{"ruleId":"175","severity":1,"message":"176","line":10,"column":55,"nodeType":"177","messageId":"178","endLine":10,"endColumn":58,"suggestions":"200"},{"ruleId":"175","severity":1,"message":"176","line":10,"column":67,"nodeType":"177","messageId":"178","endLine":10,"endColumn":70,"suggestions":"201"},{"ruleId":"175","severity":1,"message":"176","line":10,"column":82,"nodeType":"177","messageId":"178","endLine":10,"endColumn":85,"suggestions":"202"},{"ruleId":"175","severity":1,"message":"176","line":17,"column":37,"nodeType":"177","messageId":"178","endLine":17,"endColumn":40,"suggestions":"203"},{"ruleId":"175","severity":1,"message":"176","line":46,"column":39,"nodeType":"177","messageId":"178","endLine":46,"endColumn":42,"suggestions":"204"},{"ruleId":"175","severity":1,"message":"176","line":54,"column":39,"nodeType":"177","messageId":"178","endLine":54,"endColumn":42,"suggestions":"205"},{"ruleId":"175","severity":1,"message":"176","line":9,"column":40,"nodeType":"177","messageId":"178","endLine":9,"endColumn":43,"suggestions":"206"},{"ruleId":"175","severity":1,"message":"176","line":10,"column":37,"nodeType":"177","messageId":"178","endLine":10,"endColumn":40,"suggestions":"207"},{"ruleId":"175","severity":1,"message":"176","line":16,"column":36,"nodeType":"177","messageId":"178","endLine":16,"endColumn":39,"suggestions":"208"},{"ruleId":"175","severity":1,"message":"176","line":55,"column":39,"nodeType":"177","messageId":"178","endLine":55,"endColumn":42,"suggestions":"209"},{"ruleId":"175","severity":1,"message":"176","line":5,"column":11,"nodeType":"177","messageId":"178","endLine":5,"endColumn":14,"suggestions":"210"},{"ruleId":"175","severity":1,"message":"176","line":6,"column":29,"nodeType":"177","messageId":"178","endLine":6,"endColumn":32,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":10,"column":15,"nodeType":"214","messageId":"215","endLine":10,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":17,"column":38,"nodeType":"177","messageId":"178","endLine":17,"endColumn":41,"suggestions":"216"},{"ruleId":"175","severity":1,"message":"176","line":22,"column":37,"nodeType":"177","messageId":"178","endLine":22,"endColumn":40,"suggestions":"217"},{"ruleId":"182","severity":1,"message":"218","line":26,"column":23,"nodeType":"219","messageId":"220","endLine":26,"endColumn":28},{"ruleId":"182","severity":1,"message":"218","line":37,"column":37,"nodeType":"219","messageId":"220","endLine":37,"endColumn":79},{"ruleId":"182","severity":1,"message":"221","line":37,"column":44,"nodeType":"214","messageId":"222","endLine":37,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":37,"column":50,"nodeType":"177","messageId":"178","endLine":37,"endColumn":53,"suggestions":"223"},{"ruleId":"182","severity":1,"message":"224","line":37,"column":55,"nodeType":"214","messageId":"222","endLine":37,"endColumn":75},{"ruleId":"175","severity":1,"message":"176","line":37,"column":72,"nodeType":"177","messageId":"178","endLine":37,"endColumn":75,"suggestions":"225"},{"ruleId":"182","severity":1,"message":"218","line":66,"column":31,"nodeType":"219","messageId":"220","endLine":66,"endColumn":73},{"ruleId":"182","severity":1,"message":"221","line":66,"column":38,"nodeType":"214","messageId":"222","endLine":66,"endColumn":47},{"ruleId":"175","severity":1,"message":"176","line":66,"column":44,"nodeType":"177","messageId":"178","endLine":66,"endColumn":47,"suggestions":"226"},{"ruleId":"182","severity":1,"message":"224","line":66,"column":49,"nodeType":"214","messageId":"222","endLine":66,"endColumn":69},{"ruleId":"175","severity":1,"message":"176","line":66,"column":66,"nodeType":"177","messageId":"178","endLine":66,"endColumn":69,"suggestions":"227"},{"ruleId":"175","severity":1,"message":"176","line":79,"column":37,"nodeType":"177","messageId":"178","endLine":79,"endColumn":40,"suggestions":"228"},{"ruleId":"175","severity":1,"message":"176","line":97,"column":64,"nodeType":"177","messageId":"178","endLine":97,"endColumn":67,"suggestions":"229"},{"ruleId":"175","severity":1,"message":"176","line":145,"column":38,"nodeType":"177","messageId":"178","endLine":145,"endColumn":41,"suggestions":"230"},{"ruleId":"175","severity":1,"message":"176","line":17,"column":48,"nodeType":"177","messageId":"178","endLine":17,"endColumn":51,"suggestions":"231"},{"ruleId":"175","severity":1,"message":"176","line":18,"column":40,"nodeType":"177","messageId":"178","endLine":18,"endColumn":43,"suggestions":"232"},{"ruleId":"175","severity":1,"message":"176","line":21,"column":37,"nodeType":"177","messageId":"178","endLine":21,"endColumn":40,"suggestions":"233"},{"ruleId":"212","severity":1,"message":"234","line":30,"column":36,"nodeType":"214","messageId":"215","endLine":30,"endColumn":46},{"ruleId":"175","severity":1,"message":"176","line":30,"column":43,"nodeType":"177","messageId":"178","endLine":30,"endColumn":46,"suggestions":"235"},{"ruleId":"175","severity":1,"message":"176","line":87,"column":59,"nodeType":"177","messageId":"178","endLine":87,"endColumn":62,"suggestions":"236"},{"ruleId":"175","severity":1,"message":"176","line":94,"column":59,"nodeType":"177","messageId":"178","endLine":94,"endColumn":62,"suggestions":"237"},{"ruleId":"175","severity":1,"message":"176","line":102,"column":55,"nodeType":"177","messageId":"178","endLine":102,"endColumn":58,"suggestions":"238"},{"ruleId":"175","severity":1,"message":"176","line":109,"column":55,"nodeType":"177","messageId":"178","endLine":109,"endColumn":58,"suggestions":"239"},{"ruleId":"175","severity":1,"message":"176","line":115,"column":55,"nodeType":"177","messageId":"178","endLine":115,"endColumn":58,"suggestions":"240"},{"ruleId":"175","severity":1,"message":"176","line":121,"column":55,"nodeType":"177","messageId":"178","endLine":121,"endColumn":58,"suggestions":"241"},{"ruleId":"175","severity":1,"message":"176","line":127,"column":55,"nodeType":"177","messageId":"178","endLine":127,"endColumn":58,"suggestions":"242"},{"ruleId":"175","severity":1,"message":"176","line":134,"column":55,"nodeType":"177","messageId":"178","endLine":134,"endColumn":58,"suggestions":"243"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["244","245"],["246","247"],["248","249"],"@typescript-eslint/explicit-module-boundary-types","Object pattern argument should be typed with a non-any type.","ObjectPattern","anyTypedArgUnnamed",["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],["260","261"],["262","263"],["264","265"],["266","267"],["268","269"],["270","271"],["272","273"],["274","275"],["276","277"],["278","279"],["280","281"],["282","283"],["284","285"],["286","287"],["288","289"],["290","291"],["292","293"],["294","295"],["296","297"],["298","299"],["300","301"],"@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar",["302","303"],["304","305"],"Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","anyTypedArg",["306","307"],"Argument 'additionalData' should be typed with a non-any type.",["308","309"],["310","311"],["312","313"],["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],"'event' is defined but never used.",["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],{"messageId":"344","fix":"345","desc":"346"},{"messageId":"347","fix":"348","desc":"349"},{"messageId":"344","fix":"350","desc":"346"},{"messageId":"347","fix":"351","desc":"349"},{"messageId":"344","fix":"352","desc":"346"},{"messageId":"347","fix":"353","desc":"349"},{"messageId":"344","fix":"354","desc":"346"},{"messageId":"347","fix":"355","desc":"349"},{"messageId":"344","fix":"356","desc":"346"},{"messageId":"347","fix":"357","desc":"349"},{"messageId":"344","fix":"358","desc":"346"},{"messageId":"347","fix":"359","desc":"349"},{"messageId":"344","fix":"360","desc":"346"},{"messageId":"347","fix":"361","desc":"349"},{"messageId":"344","fix":"362","desc":"346"},{"messageId":"347","fix":"363","desc":"349"},{"messageId":"344","fix":"364","desc":"346"},{"messageId":"347","fix":"365","desc":"349"},{"messageId":"344","fix":"366","desc":"346"},{"messageId":"347","fix":"367","desc":"349"},{"messageId":"344","fix":"368","desc":"346"},{"messageId":"347","fix":"369","desc":"349"},{"messageId":"344","fix":"370","desc":"346"},{"messageId":"347","fix":"371","desc":"349"},{"messageId":"344","fix":"372","desc":"346"},{"messageId":"347","fix":"373","desc":"349"},{"messageId":"344","fix":"374","desc":"346"},{"messageId":"347","fix":"375","desc":"349"},{"messageId":"344","fix":"376","desc":"346"},{"messageId":"347","fix":"377","desc":"349"},{"messageId":"344","fix":"378","desc":"346"},{"messageId":"347","fix":"379","desc":"349"},{"messageId":"344","fix":"380","desc":"346"},{"messageId":"347","fix":"381","desc":"349"},{"messageId":"344","fix":"382","desc":"346"},{"messageId":"347","fix":"383","desc":"349"},{"messageId":"344","fix":"384","desc":"346"},{"messageId":"347","fix":"385","desc":"349"},{"messageId":"344","fix":"386","desc":"346"},{"messageId":"347","fix":"387","desc":"349"},{"messageId":"344","fix":"388","desc":"346"},{"messageId":"347","fix":"389","desc":"349"},{"messageId":"344","fix":"390","desc":"346"},{"messageId":"347","fix":"391","desc":"349"},{"messageId":"344","fix":"392","desc":"346"},{"messageId":"347","fix":"393","desc":"349"},{"messageId":"344","fix":"394","desc":"346"},{"messageId":"347","fix":"395","desc":"349"},{"messageId":"344","fix":"396","desc":"346"},{"messageId":"347","fix":"397","desc":"349"},{"messageId":"344","fix":"398","desc":"346"},{"messageId":"347","fix":"399","desc":"349"},{"messageId":"344","fix":"400","desc":"346"},{"messageId":"347","fix":"401","desc":"349"},{"messageId":"344","fix":"402","desc":"346"},{"messageId":"347","fix":"403","desc":"349"},{"messageId":"344","fix":"404","desc":"346"},{"messageId":"347","fix":"405","desc":"349"},{"messageId":"344","fix":"406","desc":"346"},{"messageId":"347","fix":"407","desc":"349"},{"messageId":"344","fix":"408","desc":"346"},{"messageId":"347","fix":"409","desc":"349"},{"messageId":"344","fix":"410","desc":"346"},{"messageId":"347","fix":"411","desc":"349"},{"messageId":"344","fix":"412","desc":"346"},{"messageId":"347","fix":"413","desc":"349"},{"messageId":"344","fix":"414","desc":"346"},{"messageId":"347","fix":"415","desc":"349"},{"messageId":"344","fix":"416","desc":"346"},{"messageId":"347","fix":"417","desc":"349"},{"messageId":"344","fix":"418","desc":"346"},{"messageId":"347","fix":"419","desc":"349"},{"messageId":"344","fix":"420","desc":"346"},{"messageId":"347","fix":"421","desc":"349"},{"messageId":"344","fix":"422","desc":"346"},{"messageId":"347","fix":"423","desc":"349"},{"messageId":"344","fix":"424","desc":"346"},{"messageId":"347","fix":"425","desc":"349"},{"messageId":"344","fix":"426","desc":"346"},{"messageId":"347","fix":"427","desc":"349"},{"messageId":"344","fix":"428","desc":"346"},{"messageId":"347","fix":"429","desc":"349"},{"messageId":"344","fix":"430","desc":"346"},{"messageId":"347","fix":"431","desc":"349"},{"messageId":"344","fix":"432","desc":"346"},{"messageId":"347","fix":"433","desc":"349"},{"messageId":"344","fix":"434","desc":"346"},{"messageId":"347","fix":"435","desc":"349"},{"messageId":"344","fix":"436","desc":"346"},{"messageId":"347","fix":"437","desc":"349"},{"messageId":"344","fix":"438","desc":"346"},{"messageId":"347","fix":"439","desc":"349"},{"messageId":"344","fix":"440","desc":"346"},{"messageId":"347","fix":"441","desc":"349"},{"messageId":"344","fix":"442","desc":"346"},{"messageId":"347","fix":"443","desc":"349"},{"messageId":"344","fix":"444","desc":"346"},{"messageId":"347","fix":"445","desc":"349"},{"messageId":"344","fix":"446","desc":"346"},{"messageId":"347","fix":"447","desc":"349"},"suggestUnknown",{"range":"448","text":"449"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"448","text":"450"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"451","text":"449"},{"range":"451","text":"450"},{"range":"452","text":"449"},{"range":"452","text":"450"},{"range":"453","text":"449"},{"range":"453","text":"450"},{"range":"454","text":"449"},{"range":"454","text":"450"},{"range":"455","text":"449"},{"range":"455","text":"450"},{"range":"456","text":"449"},{"range":"456","text":"450"},{"range":"457","text":"449"},{"range":"457","text":"450"},{"range":"458","text":"449"},{"range":"458","text":"450"},{"range":"459","text":"449"},{"range":"459","text":"450"},{"range":"460","text":"449"},{"range":"460","text":"450"},{"range":"461","text":"449"},{"range":"461","text":"450"},{"range":"462","text":"449"},{"range":"462","text":"450"},{"range":"463","text":"449"},{"range":"463","text":"450"},{"range":"464","text":"449"},{"range":"464","text":"450"},{"range":"465","text":"449"},{"range":"465","text":"450"},{"range":"466","text":"449"},{"range":"466","text":"450"},{"range":"467","text":"449"},{"range":"467","text":"450"},{"range":"468","text":"449"},{"range":"468","text":"450"},{"range":"469","text":"449"},{"range":"469","text":"450"},{"range":"470","text":"449"},{"range":"470","text":"450"},{"range":"471","text":"449"},{"range":"471","text":"450"},{"range":"472","text":"449"},{"range":"472","text":"450"},{"range":"473","text":"449"},{"range":"473","text":"450"},{"range":"474","text":"449"},{"range":"474","text":"450"},{"range":"475","text":"449"},{"range":"475","text":"450"},{"range":"476","text":"449"},{"range":"476","text":"450"},{"range":"477","text":"449"},{"range":"477","text":"450"},{"range":"478","text":"449"},{"range":"478","text":"450"},{"range":"479","text":"449"},{"range":"479","text":"450"},{"range":"480","text":"449"},{"range":"480","text":"450"},{"range":"481","text":"449"},{"range":"481","text":"450"},{"range":"482","text":"449"},{"range":"482","text":"450"},{"range":"483","text":"449"},{"range":"483","text":"450"},{"range":"484","text":"449"},{"range":"484","text":"450"},{"range":"485","text":"449"},{"range":"485","text":"450"},{"range":"486","text":"449"},{"range":"486","text":"450"},{"range":"487","text":"449"},{"range":"487","text":"450"},{"range":"488","text":"449"},{"range":"488","text":"450"},{"range":"489","text":"449"},{"range":"489","text":"450"},{"range":"490","text":"449"},{"range":"490","text":"450"},{"range":"491","text":"449"},{"range":"491","text":"450"},{"range":"492","text":"449"},{"range":"492","text":"450"},{"range":"493","text":"449"},{"range":"493","text":"450"},{"range":"494","text":"449"},{"range":"494","text":"450"},{"range":"495","text":"449"},{"range":"495","text":"450"},{"range":"496","text":"449"},{"range":"496","text":"450"},{"range":"497","text":"449"},{"range":"497","text":"450"},{"range":"498","text":"449"},{"range":"498","text":"450"},{"range":"499","text":"449"},{"range":"499","text":"450"},[656,659],"unknown","never",[2219,2222],[2231,2234],[594,597],[734,737],[272,275],[605,608],[682,685],[694,697],[709,712],[1216,1219],[2517,2520],[2904,2907],[3261,3264],[3646,3649],[4014,4017],[398,401],[465,468],[477,480],[492,495],[817,820],[1869,1872],[2199,2202],[406,409],[455,458],[641,644],[2139,2142],[165,168],[199,202],[548,551],[797,800],[1187,1190],[1209,1212],[2054,2057],[2076,2079],[2430,2433],[2594,2597],[4801,4804],[586,589],[646,649],[799,802],[1073,1076],[3371,3374],[3784,3787],[4226,4229],[4607,4610],[4939,4942],[5272,5275],[5626,5629],[6009,6012]]